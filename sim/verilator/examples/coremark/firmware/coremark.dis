
/home/kunyanliu/riscdev/new_fpga/out/run/cheri/coremark/default/default/firmware/cpu0/coremark.elf:	file format elf32-littleriscv
architecture: riscv32
start address: 0x20040080

Program Header:
    LOAD off    0x00001000 vaddr 0x20040000 paddr 0x20040000 align 2**12
         filesz 0x00000188 memsz 0x00000188 flags rwx
    LOAD off    0x00001188 vaddr 0x20040188 paddr 0x20040188 align 2**12
         filesz 0x0000017c memsz 0x0000017c flags r--
    LOAD off    0x00001320 vaddr 0x20040320 paddr 0x20040320 align 2**12
         filesz 0x00003100 memsz 0x00003100 flags rwx
    LOAD off    0x00005000 vaddr 0x200f0000 paddr 0x20043420 align 2**12
         filesz 0x00000c00 memsz 0x00000c00 flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**64
         filesz 0x00000000 memsz 0x00000000 flags rw-

Dynamic Section:

Sections:
Idx Name              Size     VMA      LMA      Type
  0                   00000000 00000000 00000000 
  1 .init             00000188 20040000 20040000 TEXT
  2 __cap_relocs      0000017c 20040188 20040188 DATA
  3 .text             00003100 20040320 20040320 TEXT
  4 .data             00000c00 200f0000 20043420 DATA
  5 .debug_info       00005596 00000000 00000000 DEBUG
  6 .debug_abbrev     00002047 00000000 00000000 DEBUG
  7 .debug_aranges    00000020 00000000 00000000 DEBUG
  8 .debug_line       00005c1e 00000000 00000000 DEBUG
  9 .debug_loc        00004121 00000000 00000000 DEBUG
 10 .debug_str        0000286c 00000000 00000000 DEBUG
 11 .comment          000000e7 00000000 00000000 
 12 .riscv.attributes 00000030 00000000 00000000 
 13 .debug_frame      00000b84 00000000 00000000 DEBUG
 14 .debug_ranges     00000128 00000000 00000000 DEBUG
 15 .symtab           00011e50 00000000 00000000 
 16 .shstrtab         000000bb 00000000 00000000 
 17 .strtab           00001513 00000000 00000000 

SYMBOL TABLE:
20040080 l       .init	00000000 
20040080 l       .init	00000000 
00000000 l       .debug_info	00000000 
00000000 l       .debug_abbrev	00000000 
20040188 l       .init	00000000 
00000000 l       .debug_line	00000000 .Lline_table_start0
00000000 l    df *ABS*	00000000 isctype.cc
20040320 l       .text	00000000 
20040320 l       .text	00000000 
20040320 l       .text	00000000 
20040320 l       .text	00000000 
2004032c l       .text	00000000 
20040330 l       .text	00000000 
20040332 l       .text	00000000 
20040334 l       .text	00000000 
20040334 l       .text	00000000 
00000000 l       .debug_loc	00000000 
000000cf l       .debug_line	00000000 .Lline_table_start0
00000000 l       .debug_frame	00000000 
20040334 l       .text	00000000 
00000000 l    df *ABS*	00000000 realloc.cc
20040334 l       .text	00000000 
20040334 l       .text	00000000 
20040334 l       .text	00000000 
20040336 l       .text	00000000 
2004033c l       .text	00000000 
2004033e l       .text	00000000 
20040342 l       .text	00000000 
2004034a l       .text	00000000 .LBB0_2
20040342 l       .text	00000000 
20040344 l       .text	00000000 
2004034a l       .text	00000000 
2004034a l       .text	00000000 
2004034e l       .text	00000000 
2004034e l       .text	00000000 
20040356 l       .text	00000000 
20040378 l       .text	00000000 .LBB0_6
2004035a l       .text	00000000 
2004035a l       .text	00000000 
20040364 l       .text	00000000 .LBB0_5
20040362 l       .text	00000000 
20040364 l       .text	00000000 
20040364 l       .text	00000000 
20040370 l       .text	00000000 
20040370 l       .text	00000000 
20040376 l       .text	00000000 
20040376 l       .text	00000000 
20040378 l       .text	00000000 
20040378 l       .text	00000000 
2004037c l       .text	00000000 
20040382 l       .text	00000000 
20040382 l       .text	00000000 
00000013 l       .debug_loc	00000000 
00000031 l       .debug_loc	00000000 
0000004f l       .debug_loc	00000000 
00000062 l       .debug_loc	00000000 
00000077 l       .debug_loc	00000000 
00000169 l       .debug_line	00000000 .Lline_table_start0
00000024 l       .debug_frame	00000000 
20040382 l       .text	00000000 
00000000 l    df *ABS*	00000000 strtoul.cc
20040384 l       .text	00000000 
20040384 l       .text	00000000 
20040384 l       .text	00000000 
20040386 l       .text	00000000 
20040386 l       .text	00000000 
2004038c l       .text	00000000 
2004038c l       .text	00000000 
2004038e l       .text	00000000 
20040390 l       .text	00000000 
20040392 l       .text	00000000 
20040396 l       .text	00000000 
20040396 l       .text	00000000 .LBB0_1
2004039a l       .text	00000000 
2004039a l       .text	00000000 
2004039e l       .text	00000000 
2004039e l       .text	00000000 
200403a2 l       .text	00000000 
200403a2 l       .text	00000000 
200403a4 l       .text	00000000 
200403aa l       .text	00000000 
200403aa l       .text	00000000 
200403ac l       .text	00000000 
200403ac l       .text	00000000 
200403ae l       .text	00000000 
200403c8 l       .text	00000000 .LBB0_5
200403b2 l       .text	00000000 
200403b6 l       .text	00000000 
200403d4 l       .text	00000000 .LBB0_7
200403c0 l       .text	00000000 
200403c4 l       .text	00000000 
200403cc l       .text	00000000 .LBB0_6
200403d0 l       .text	00000000 
200403d4 l       .text	00000000 
200403d4 l       .text	00000000 
200403fc l       .text	00000000 .LBB0_10
200403e2 l       .text	00000000 
200403e6 l       .text	00000000 
200403e6 l       .text	00000000 
20040412 l       .text	00000000 .LBB0_12
200403f2 l       .text	00000000 
200403f6 l       .text	00000000 
200403fa l       .text	00000000 
200403fc l       .text	00000000 
20040400 l       .text	00000000 
20040416 l       .text	00000000 .LBB0_13
20040404 l       .text	00000000 
20040408 l       .text	00000000 
2004040a l       .text	00000000 
20040422 l       .text	00000000 .LBB0_14
2004040e l       .text	00000000 
20040424 l       .text	00000000 .LBB0_15
20040412 l       .text	00000000 
20040412 l       .text	00000000 
20040416 l       .text	00000000 
20040416 l       .text	00000000 
20040418 l       .text	00000000 
20040420 l       .text	00000000 
20040422 l       .text	00000000 
20040424 l       .text	00000000 
2004042c l       .text	00000000 
20040430 l       .text	00000000 
20040430 l       .text	00000000 
20040432 l       .text	00000000 
2004043a l       .text	00000000 
2004043c l       .text	00000000 
2004043c l       .text	00000000 .LBB0_16
2004043c l       .text	00000000 
20040440 l       .text	00000000 
20040442 l       .text	00000000 
2004044a l       .text	00000000 .LBB0_18
20040442 l       .text	00000000 
20040444 l       .text	00000000 
20040448 l       .text	00000000 
20040468 l       .text	00000000 .LBB0_22
20040448 l       .text	00000000 
2004044a l       .text	00000000 
2004044a l       .text	00000000 
20040452 l       .text	00000000 
200404b4 l       .text	00000000 .LBB0_28
20040452 l       .text	00000000 
20040454 l       .text	00000000 
2004045a l       .text	00000000 
2004045a l       .text	00000000 
20040464 l       .text	00000000 .LBB0_21
2004045e l       .text	00000000 
20040460 l       .text	00000000 
20040464 l       .text	00000000 
20040468 l       .text	00000000 
20040468 l       .text	00000000 
2004046e l       .text	00000000 
20040474 l       .text	00000000 
20040474 l       .text	00000000 
2004047a l       .text	00000000 
20040484 l       .text	00000000 .LBB0_25
20040480 l       .text	00000000 
200404a2 l       .text	00000000 .LBB0_27
20040484 l       .text	00000000 
20040492 l       .text	00000000 
20040498 l       .text	00000000 
20040498 l       .text	00000000 
2004049e l       .text	00000000 
2004049e l       .text	00000000 
200404a0 l       .text	00000000 
200404a2 l       .text	00000000 
200404a4 l       .text	00000000 
200404a6 l       .text	00000000 
200404aa l       .text	00000000 
200404ae l       .text	00000000 
200404ae l       .text	00000000 
200404b0 l       .text	00000000 
200404b2 l       .text	00000000 
200404b4 l       .text	00000000 
200404c6 l       .text	00000000 .LBB0_32
200404b8 l       .text	00000000 
200404ba l       .text	00000000 
200404c4 l       .text	00000000 .LBB0_31
200404bc l       .text	00000000 
200404be l       .text	00000000 
200404c4 l       .text	00000000 
200404c6 l       .text	00000000 
200404ca l       .text	00000000 
200404d0 l       .text	00000000 .LBB0_34
200404cc l       .text	00000000 
200404d6 l       .text	00000000 .LBB0_36
200404d0 l       .text	00000000 
200404d4 l       .text	00000000 
200404d6 l       .text	00000000 
200404d6 l       .text	00000000 
200404dc l       .text	00000000 
200404e2 l       .text	00000000 
200404e2 l       .text	00000000 
0000008a l       .debug_loc	00000000 
000000a9 l       .debug_loc	00000000 
000000c8 l       .debug_loc	00000000 
0000010a l       .debug_loc	00000000 
00000190 l       .debug_loc	00000000 
000001a5 l       .debug_loc	00000000 
0000020b l       .debug_loc	00000000 
0000022a l       .debug_loc	00000000 
0000026d l       .debug_loc	00000000 
000002af l       .debug_loc	00000000 
000002e2 l       .debug_line	00000000 .Lline_table_start0
00000054 l       .debug_frame	00000000 
200404e2 l       .text	00000000 
00000000 l    df *ABS*	00000000 free.cc
200404e4 l       .text	00000000 
200404e4 l       .text	00000000 
200404e4 l       .text	00000000 
200404e6 l       .text	00000000 
200404ec l       .text	00000000 
200404f0 l       .text	00000000 
200404f0 l       .text	00000000 
200405a2 l       .text	00000000 .LBB0_9
200404fa l       .text	00000000 
200404fe l       .text	00000000 
20040510 l       .text	00000000 
20040510 l       .text	00000000 
20040514 l       .text	00000000 
20040518 l       .text	00000000 
20040522 l       .text	00000000 
20040534 l       .text	00000000 .LBB0_4
20040522 l       .text	00000000 
20040526 l       .text	00000000 
20040530 l       .text	00000000 
20040534 l       .text	00000000 
20040538 l       .text	00000000 
20040574 l       .text	00000000 .LBB0_6
2004053e l       .text	00000000 
20040540 l       .text	00000000 
20040544 l       .text	00000000 
2004054e l       .text	00000000 
2004054e l       .text	00000000 
20040552 l       .text	00000000 
20040552 l       .text	00000000 
20040556 l       .text	00000000 
2004055c l       .text	00000000 
2004055e l       .text	00000000 
2004055e l       .text	00000000 
20040562 l       .text	00000000 
20040566 l       .text	00000000 
20040566 l       .text	00000000 
2004056c l       .text	00000000 
2004056c l       .text	00000000 
20040570 l       .text	00000000 
20040574 l       .text	00000000 
20040574 l       .text	00000000 
20040576 l       .text	00000000 
20040576 l       .text	00000000 
2004057a l       .text	00000000 
2004057e l       .text	00000000 
20040580 l       .text	00000000 
20040582 l       .text	00000000 
20040586 l       .text	00000000 
2004058a l       .text	00000000 
20040594 l       .text	00000000 
20040594 l       .text	00000000 
20040598 l       .text	00000000 
20040598 l       .text	00000000 
2004059e l       .text	00000000 
2004059e l       .text	00000000 
200405a2 l       .text	00000000 
200405a2 l       .text	00000000 
200405a6 l       .text	00000000 
200405ac l       .text	00000000 
200405ac l       .text	00000000 
000002ce l       .debug_loc	00000000 
000002ec l       .debug_loc	00000000 
00000315 l       .debug_loc	00000000 
00000334 l       .debug_loc	00000000 
00000591 l       .debug_line	00000000 .Lline_table_start0
00000084 l       .debug_frame	00000000 
200405ac l       .text	00000000 
00000000 l    df *ABS*	00000000 setMallocDescriptor.cc
200405ac l       .text	00000000 
200405ac l       .text	00000000 
200405ac l       .text	00000000 
200405ac l       .text	00000000 
200405b0 l       .text	00000000 
200405b0 l       .text	00000000 
200405b2 l       .text	00000000 
200405b6 l       .text	00000000 
200405b8 l       .text	00000000 
200405c2 l       .text	00000000 
200405c6 l       .text	00000000 
200405ca l       .text	00000000 
200405cc l       .text	00000000 
200405ce l       .text	00000000 
200405d0 l       .text	00000000 
200405d0 l       .text	00000000 
00000347 l       .debug_loc	00000000 
0000077b l       .debug_line	00000000 .Lline_table_start0
000000b4 l       .debug_frame	00000000 
200405d0 l       .text	00000000 
00000000 l    df *ABS*	00000000 get_ptr.cc
200405d0 l       .text	00000000 
200405d0 l       .text	00000000 
200405d0 l       .text	00000000 
200405d0 l       .text	00000000 
200405da l       .text	00000000 
200405da l       .text	00000000 
200405de l       .text	00000000 
200405e2 l       .text	00000000 
200405e6 l       .text	00000000 
200405e6 l       .text	00000000 
200405ea l       .text	00000000 
200405ec l       .text	00000000 
200405ec l       .text	00000000 
0000035a l       .debug_loc	00000000 
0000036d l       .debug_loc	00000000 
000008ae l       .debug_line	00000000 .Lline_table_start0
000000d8 l       .debug_frame	00000000 
200405ec l       .text	00000000 
00000000 l    df *ABS*	00000000 malloc.cc
200405ec l       .text	00000000 
200405ec l       .text	00000000 
200405ec l       .text	00000000 
200405ee l       .text	00000000 
200405ee l       .text	00000000 
200405f4 l       .text	00000000 
20040640 l       .text	00000000 .LBB0_2
20040602 l       .text	00000000 
20040606 l       .text	00000000 
2004060e l       .text	00000000 
20040610 l       .text	00000000 
2004061a l       .text	00000000 
2004061a l       .text	00000000 
20040620 l       .text	00000000 
20040620 l       .text	00000000 
20040622 l       .text	00000000 
20040626 l       .text	00000000 
2004062e l       .text	00000000 
2004062e l       .text	00000000 
20040632 l       .text	00000000 
2004063c l       .text	00000000 
2004063c l       .text	00000000 
20040640 l       .text	00000000 
20040640 l       .text	00000000 
2004064a l       .text	00000000 
2004064a l       .text	00000000 
2004064a l       .text	00000000 
2004064a l       .text	00000000 
2004064a l       .text	00000000 
2004064c l       .text	00000000 
2004064c l       .text	00000000 
20040652 l       .text	00000000 
20040686 l       .text	00000000 .LBB1_5
20040654 l       .text	00000000 
2004065e l       .text	00000000 
2004065e l       .text	00000000 
20040662 l       .text	00000000 
20040664 l       .text	00000000 
20040666 l       .text	00000000 
2004066c l       .text	00000000 
2004066c l       .text	00000000 .LBB1_2
2004066c l       .text	00000000 
20040678 l       .text	00000000 .LBB1_4
20040670 l       .text	00000000 
20040672 l       .text	00000000 
20040694 l       .text	00000000 .LBB1_7
20040674 l       .text	00000000 
20040678 l       .text	00000000 
2004067a l       .text	00000000 
2004067a l       .text	00000000 
2004067e l       .text	00000000 
2004067e l       .text	00000000 
20040682 l       .text	00000000 
20040686 l       .text	00000000 
20040686 l       .text	00000000 
2004068a l       .text	00000000 
2004068a l       .text	00000000 .LBB1_6
20040694 l       .text	00000000 
20040694 l       .text	00000000 
200406aa l       .text	00000000 .LBB1_9
2004069a l       .text	00000000 
2004069e l       .text	00000000 
200406a0 l       .text	00000000 
200406a0 l       .text	00000000 
200406a4 l       .text	00000000 
200406ee l       .text	00000000 .LBB1_10
200406aa l       .text	00000000 
200406aa l       .text	00000000 
200406b2 l       .text	00000000 
200406b2 l       .text	00000000 
200406b4 l       .text	00000000 
200406b4 l       .text	00000000 
200406b6 l       .text	00000000 
200406b6 l       .text	00000000 
200406b8 l       .text	00000000 
200406c0 l       .text	00000000 
200406c0 l       .text	00000000 
200406c4 l       .text	00000000 
200406c4 l       .text	00000000 
200406c6 l       .text	00000000 
200406ca l       .text	00000000 
200406ca l       .text	00000000 
200406cc l       .text	00000000 
200406d6 l       .text	00000000 
200406d6 l       .text	00000000 
200406e0 l       .text	00000000 
200406e8 l       .text	00000000 
200406e8 l       .text	00000000 
200406ee l       .text	00000000 
200406ee l       .text	00000000 
200406f6 l       .text	00000000 
200406f6 l       .text	00000000 
0000038b l       .debug_loc	00000000 
0000039e l       .debug_loc	00000000 
000003b1 l       .debug_loc	00000000 
000003c4 l       .debug_loc	00000000 
000003e3 l       .debug_loc	00000000 
0000040c l       .debug_loc	00000000 
00000435 l       .debug_loc	00000000 
00000448 l       .debug_loc	00000000 
00000472 l       .debug_loc	00000000 
00000983 l       .debug_line	00000000 .Lline_table_start0
00000000 l       .debug_ranges	00000000 
000000fc l       .debug_frame	00000000 
200406f6 l       .text	00000000 
00000000 l    df *ABS*	00000000 delete.cc
200406f8 l       .text	00000000 
200406f8 l       .text	00000000 
200406f8 l       .text	00000000 
200406f8 l       .text	00000000 
200406fa l       .text	00000000 
200406fa l       .text	00000000 
200406fa l       .text	00000000 
200406fa l       .text	00000000 
200406fa l       .text	00000000 
200406fa l       .text	00000000 
200406fa l       .text	00000000 
200406fc l       .text	00000000 
200406fc l       .text	00000000 
200406fc l       .text	00000000 
00000be8 l       .debug_line	00000000 .Lline_table_start0
00000148 l       .debug_frame	00000000 
200406fc l       .text	00000000 
00000000 l    df *ABS*	00000000 rand.cc
200406fc l       .text	00000000 
200406fc l       .text	00000000 
200406fc l       .text	00000000 
200406fc l       .text	00000000 
200406fe l       .text	00000000 
20040706 l       .text	00000000 
20040708 l       .text	00000000 
2004070a l       .text	00000000 
2004070c l       .text	00000000 
2004070e l       .text	00000000 
20040710 l       .text	00000000 
20040712 l       .text	00000000 
20040712 l       .text	00000000 
20040712 l       .text	00000000 
20040712 l       .text	00000000 
20040712 l       .text	00000000 
20040712 l       .text	00000000 
2004071a l       .text	00000000 
2004071c l       .text	00000000 
20040724 l       .text	00000000 
20040730 l       .text	00000000 
20040734 l       .text	00000000 
20040734 l       .text	00000000 
20040740 l       .text	00000000 
20040740 l       .text	00000000 
20040748 l       .text	00000000 
2004074a l       .text	00000000 
2004074a l       .text	00000000 
2004074e l       .text	00000000 
20040750 l       .text	00000000 
20040750 l       .text	00000000 
20040754 l       .text	00000000 
20040758 l       .text	00000000 
20040764 l       .text	00000000 
20040768 l       .text	00000000 
20040768 l       .text	00000000 
2004076c l       .text	00000000 
2004076c l       .text	00000000 
2004076e l       .text	00000000 
2004076e l       .text	00000000 
20040770 l       .text	00000000 
20040770 l       .text	00000000 
20040770 l       .text	00000000 
20040770 l       .text	00000000 
20040770 l       .text	00000000 
20040770 l       .text	00000000 
2004077a l       .text	00000000 
2004077c l       .text	00000000 
2004077c l       .text	00000000 
20040786 l       .text	00000000 
20040788 l       .text	00000000 
20040788 l       .text	00000000 
20040788 l       .text	00000000 
20040788 l       .text	00000000 
20040788 l       .text	00000000 
2004078a l       .text	00000000 
20040790 l       .text	00000000 
20040792 l       .text	00000000 
20040794 l       .text	00000000 
20040794 l       .text	00000000 
20040796 l       .text	00000000 
20040796 l       .text	00000000 
2004079c l       .text	00000000 
200407a0 l       .text	00000000 
200407a2 l       .text	00000000 
200407a2 l       .text	00000000 
200407a4 l       .text	00000000 
200407a6 l       .text	00000000 
200407ac l       .text	00000000 
200407ac l       .text	00000000 
200407ac l       .text	00000000 
200407ac l       .text	00000000 
200407ac l       .text	00000000 
200407ae l       .text	00000000 
200407b4 l       .text	00000000 
200407b6 l       .text	00000000 
200407b8 l       .text	00000000 
200407ba l       .text	00000000 
200407ba l       .text	00000000 .LBB4_1
200407ba l       .text	00000000 
200407d2 l       .text	00000000 .LBB4_3
200407c0 l       .text	00000000 
200407ca l       .text	00000000 
200407cc l       .text	00000000 
200407cc l       .text	00000000 
200407ce l       .text	00000000 
200407ce l       .text	00000000 
200407d0 l       .text	00000000 
200407d2 l       .text	00000000 
200407d4 l       .text	00000000 
200407dc l       .text	00000000 
200407dc l       .text	00000000 
00000485 l       .debug_loc	00000000 
00000498 l       .debug_loc	00000000 
000004ab l       .debug_loc	00000000 
000004be l       .debug_loc	00000000 
000004d1 l       .debug_loc	00000000 
000004ea l       .debug_loc	00000000 
000004fd l       .debug_loc	00000000 
0000051b l       .debug_loc	00000000 
00000539 l       .debug_loc	00000000 
0000054c l       .debug_loc	00000000 
0000056b l       .debug_loc	00000000 
0000058a l       .debug_loc	00000000 
00000ccf l       .debug_line	00000000 .Lline_table_start0
00000018 l       .debug_ranges	00000000 
00000030 l       .debug_ranges	00000000 
0000017c l       .debug_frame	00000000 
200407dc l       .text	00000000 
00000000 l    df *ABS*	00000000 new.cc
200407dc l       .text	00000000 
200407dc l       .text	00000000 
200407dc l       .text	00000000 
200407dc l       .text	00000000 
200407de l       .text	00000000 
200407de l       .text	00000000 
200407de l       .text	00000000 
00000efb l       .debug_line	00000000 .Lline_table_start0
000001f8 l       .debug_frame	00000000 
200407de l       .text	00000000 
00000000 l    df *ABS*	00000000 calloc.cc
200407e0 l       .text	00000000 
200407e0 l       .text	00000000 
200407e0 l       .text	00000000 
200407e2 l       .text	00000000 
200407e2 l       .text	00000000 
200407e8 l       .text	00000000 
200407ec l       .text	00000000 
200407ec l       .text	00000000 
200407ee l       .text	00000000 
200407f0 l       .text	00000000 
200407f4 l       .text	00000000 
20040802 l       .text	00000000 .LBB0_2
200407f4 l       .text	00000000 
200407f6 l       .text	00000000 
20040802 l       .text	00000000 
20040802 l       .text	00000000 
20040808 l       .text	00000000 
2004080a l       .text	00000000 
20040810 l       .text	00000000 
20040810 l       .text	00000000 
000005a9 l       .debug_loc	00000000 
000005bc l       .debug_loc	00000000 
000005cf l       .debug_loc	00000000 
000005e2 l       .debug_loc	00000000 
00000fce l       .debug_line	00000000 .Lline_table_start0
0000021c l       .debug_frame	00000000 
20040810 l       .text	00000000 
00000000 l    df *ABS*	00000000 strtol.cc
20040810 l       .text	00000000 
20040810 l       .text	00000000 
20040810 l       .text	00000000 
20040812 l       .text	00000000 
20040812 l       .text	00000000 
20040818 l       .text	00000000 
20040818 l       .text	00000000 
2004081a l       .text	00000000 
2004081c l       .text	00000000 
20040820 l       .text	00000000 
20040822 l       .text	00000000 
20040822 l       .text	00000000 .LBB0_1
20040826 l       .text	00000000 
20040826 l       .text	00000000 
2004082a l       .text	00000000 
2004082a l       .text	00000000 
2004082e l       .text	00000000 
2004082e l       .text	00000000 
20040832 l       .text	00000000 
20040834 l       .text	00000000 
20040834 l       .text	00000000 
20040836 l       .text	00000000 
20040858 l       .text	00000000 .LBB0_5
20040840 l       .text	00000000 
20040844 l       .text	00000000 
20040848 l       .text	00000000 
20040864 l       .text	00000000 .LBB0_7
20040850 l       .text	00000000 
20040854 l       .text	00000000 
2004085c l       .text	00000000 .LBB0_6
20040858 l       .text	00000000 
2004085c l       .text	00000000 
20040860 l       .text	00000000 
20040864 l       .text	00000000 
20040864 l       .text	00000000 
2004088a l       .text	00000000 .LBB0_9
20040878 l       .text	00000000 
2004087c l       .text	00000000 
200408a8 l       .text	00000000 .LBB0_11
2004088a l       .text	00000000 
200408b2 l       .text	00000000 .LBB0_12
20040896 l       .text	00000000 
2004089a l       .text	00000000 
200408c4 l       .text	00000000 .LBB0_14
200408a8 l       .text	00000000 
200408ac l       .text	00000000 
200408b0 l       .text	00000000 
200408b2 l       .text	00000000 
200408b6 l       .text	00000000 
200408c8 l       .text	00000000 .LBB0_15
200408ba l       .text	00000000 
200408be l       .text	00000000 
200408d0 l       .text	00000000 .LBB0_16
200408c4 l       .text	00000000 
200408c4 l       .text	00000000 
200408c8 l       .text	00000000 
200408c8 l       .text	00000000 
200408d2 l       .text	00000000 
200408d6 l       .text	00000000 .LBB0_18
200408d2 l       .text	00000000 
200408d4 l       .text	00000000 
200408d6 l       .text	00000000 
200408e0 l       .text	00000000 
200408e4 l       .text	00000000 
200408e4 l       .text	00000000 
200408e6 l       .text	00000000 
200408f2 l       .text	00000000 
200408f2 l       .text	00000000 
200408f6 l       .text	00000000 
200408f8 l       .text	00000000 
200408f8 l       .text	00000000 .LBB0_19
200408f8 l       .text	00000000 
200408fe l       .text	00000000 
20040900 l       .text	00000000 
20040908 l       .text	00000000 .LBB0_21
20040900 l       .text	00000000 
20040902 l       .text	00000000 
20040906 l       .text	00000000 
20040926 l       .text	00000000 .LBB0_25
20040906 l       .text	00000000 
20040908 l       .text	00000000 
20040908 l       .text	00000000 
20040910 l       .text	00000000 
20040972 l       .text	00000000 .LBB0_31
20040910 l       .text	00000000 
20040912 l       .text	00000000 
20040918 l       .text	00000000 
20040918 l       .text	00000000 
20040922 l       .text	00000000 .LBB0_24
2004091c l       .text	00000000 
2004091e l       .text	00000000 
20040922 l       .text	00000000 
20040926 l       .text	00000000 
20040926 l       .text	00000000 
2004092c l       .text	00000000 
20040938 l       .text	00000000 
20040942 l       .text	00000000 .LBB0_28
2004093e l       .text	00000000 
20040960 l       .text	00000000 .LBB0_30
20040942 l       .text	00000000 
20040950 l       .text	00000000 
20040956 l       .text	00000000 
20040956 l       .text	00000000 
2004095c l       .text	00000000 
2004095c l       .text	00000000 
2004095e l       .text	00000000 
20040960 l       .text	00000000 
20040962 l       .text	00000000 
20040964 l       .text	00000000 
20040964 l       .text	00000000 
20040968 l       .text	00000000 
20040968 l       .text	00000000 
2004096c l       .text	00000000 
2004096c l       .text	00000000 
2004096e l       .text	00000000 
20040970 l       .text	00000000 
20040972 l       .text	00000000 
20040986 l       .text	00000000 .LBB0_35
20040976 l       .text	00000000 
20040978 l       .text	00000000 
2004097a l       .text	00000000 
20040984 l       .text	00000000 .LBB0_34
2004097e l       .text	00000000 
20040984 l       .text	00000000 
2004098c l       .text	00000000 .LBB0_37
20040986 l       .text	00000000 
20040988 l       .text	00000000 
20040996 l       .text	00000000 .LBB0_39
20040990 l       .text	00000000 
20040994 l       .text	00000000 
20040996 l       .text	00000000 
20040996 l       .text	00000000 
200409a0 l       .text	00000000 
200409a0 l       .text	00000000 
000005f5 l       .debug_loc	00000000 
0000061f l       .debug_loc	00000000 
0000063e l       .debug_loc	00000000 
00000680 l       .debug_loc	00000000 
00000703 l       .debug_loc	00000000 
00000718 l       .debug_loc	00000000 
000007a6 l       .debug_loc	00000000 
000007d1 l       .debug_loc	00000000 
00000816 l       .debug_loc	00000000 
00000856 l       .debug_loc	00000000 
000010ec l       .debug_line	00000000 .Lline_table_start0
0000024c l       .debug_frame	00000000 
200409a0 l       .text	00000000 
00000000 l    df *ABS*	00000000 fprintf.cc
200409a0 l       .text	00000000 
200409a0 l       .text	00000000 
200409a0 l       .text	00000000 
200409a2 l       .text	00000000 
200409a2 l       .text	00000000 
200409a8 l       .text	00000000 
200409a8 l       .text	00000000 
200409aa l       .text	00000000 
200409ae l       .text	00000000 
200f00b8 l     O .data	00000011 str
200409ca l       .text	00000000 
200409ca l       .text	00000000 .LBB0_58
20042e89 l     O .text	00000020 HexTable
200409da l       .text	00000000 
200409de l       .text	00000000 
200409de l       .text	00000000 .LBB0_1
200409de l       .text	00000000 
20040ce8 l       .text	00000000 .LBB0_53
200409e2 l       .text	00000000 
200409e6 l       .text	00000000 
200409ea l       .text	00000000 
20040a52 l       .text	00000000 .LBB0_13
200409ea l       .text	00000000 
20040a4e l       .text	00000000 .LBB0_12
20040a72 l       .text	00000000 .LBB0_15
200409fc l       .text	00000000 .LBB0_7
200409f6 l       .text	00000000 
200409fa l       .text	00000000 
200409fc l       .text	00000000 
20040a00 l       .text	00000000 
20040a16 l       .text	00000000 .LBB0_9
20040a00 l       .text	00000000 
20040a02 l       .text	00000000 .LBB0_8
20040a02 l       .text	00000000 
20040a06 l       .text	00000000 
20040a0a l       .text	00000000 
20040a0e l       .text	00000000 
20040a12 l       .text	00000000 
20040a14 l       .text	00000000 
20040a16 l       .text	00000000 
20040a18 l       .text	00000000 
20040a28 l       .text	00000000 
20040a66 l       .text	00000000 .LBB0_14
20040a38 l       .text	00000000 
20040a44 l       .text	00000000 
20040a4e l       .text	00000000 
20040a50 l       .text	00000000 
20040a84 l       .text	00000000 .LBB0_16
20040a52 l       .text	00000000 
20040a52 l       .text	00000000 
20040a5a l       .text	00000000 
20040a5e l       .text	00000000 
20040a60 l       .text	00000000 
20040a60 l       .text	00000000 
20040a66 l       .text	00000000 
20040a72 l       .text	00000000 
20040a74 l       .text	00000000 
20040a7c l       .text	00000000 
20040a84 l       .text	00000000 
20040ad8 l       .text	00000000 .LBB0_25
20040c12 l       .text	00000000 .LBB0_43
20040abe l       .text	00000000 .LBB0_23
20040c5a l       .text	00000000 .LBB0_44
20040cc6 l       .text	00000000 .LBB0_50
20040abe l       .text	00000000 
20040abe l       .text	00000000 
20040ac0 l       .text	00000000 
20040ac0 l       .text	00000000 
20040ac4 l       .text	00000000 
20040acc l       .text	00000000 
20040acc l       .text	00000000 
20040ad0 l       .text	00000000 
20040ad2 l       .text	00000000 
20040b66 l       .text	00000000 .LBB0_32
20040ad4 l       .text	00000000 
20040ad4 l       .text	00000000 
20040b6a l       .text	00000000 .LBB0_33
20040ad8 l       .text	00000000 
20040ada l       .text	00000000 
20040adc l       .text	00000000 
20040adc l       .text	00000000 
20040ae0 l       .text	00000000 
20040ae2 l       .text	00000000 
20040ae4 l       .text	00000000 
20040ae4 l       .text	00000000 
20040aec l       .text	00000000 
20040aee l       .text	00000000 
20040aee l       .text	00000000 
20040af0 l       .text	00000000 
20040af4 l       .text	00000000 
20040af4 l       .text	00000000 
20040afe l       .text	00000000 
20040afe l       .text	00000000 .LBB0_26
20040afe l       .text	00000000 
20040b02 l       .text	00000000 
20040b04 l       .text	00000000 
20040b0c l       .text	00000000 
20040b10 l       .text	00000000 
20040b22 l       .text	00000000 .LBB0_29
20040b10 l       .text	00000000 
20040b14 l       .text	00000000 
20040b16 l       .text	00000000 
20040b16 l       .text	00000000 
20040b18 l       .text	00000000 
20040b18 l       .text	00000000 
20040b1c l       .text	00000000 
20040b20 l       .text	00000000 
20040b20 l       .text	00000000 
20040b22 l       .text	00000000 
20040b22 l       .text	00000000 
20040b28 l       .text	00000000 
20040b32 l       .text	00000000 
20040d18 l     F .text	00000088 write_char_cnt(char*, int, int, int, int)
20040b34 l       .text	00000000 
20040b34 l       .text	00000000 
20040b36 l       .text	00000000 
20040b3a l       .text	00000000 
20040b3a l       .text	00000000 
20040b3e l       .text	00000000 
20040b54 l       .text	00000000 .LBB0_31
20040b3e l       .text	00000000 
20040b40 l       .text	00000000 .LBB0_30
20040b40 l       .text	00000000 
20040b44 l       .text	00000000 
20040b48 l       .text	00000000 
20040b4c l       .text	00000000 
20040b4c l       .text	00000000 
20040b50 l       .text	00000000 
20040b52 l       .text	00000000 
20040b52 l       .text	00000000 
20040b54 l       .text	00000000 
20040b62 l       .text	00000000 
20040b66 l       .text	00000000 
20040b76 l       .text	00000000 
20040b78 l       .text	00000000 
20040b7c l       .text	00000000 
20040b7e l       .text	00000000 
20040b7e l       .text	00000000 
20040b86 l       .text	00000000 
20040b86 l       .text	00000000 .LBB0_34
20040b86 l       .text	00000000 
20040b88 l       .text	00000000 
20040b88 l       .text	00000000 
20040b94 l       .text	00000000 
20040b9c l       .text	00000000 
20040b9e l       .text	00000000 
20040b9e l       .text	00000000 
20040bb6 l       .text	00000000 .LBB0_36
20040ba2 l       .text	00000000 
20040ba6 l       .text	00000000 
20040ba6 l       .text	00000000 
20040baa l       .text	00000000 
20040bb2 l       .text	00000000 
20040bb6 l       .text	00000000 
20040bb6 l       .text	00000000 
20040bb8 l       .text	00000000 
20040bca l       .text	00000000 .LBB0_38
20040bba l       .text	00000000 
20040bbe l       .text	00000000 
20040bbe l       .text	00000000 
20040bca l       .text	00000000 
20040bca l       .text	00000000 
20040bd0 l       .text	00000000 
20040bd4 l       .text	00000000 
20040bd4 l       .text	00000000 
20040bda l       .text	00000000 
20040be4 l       .text	00000000 
20040be6 l       .text	00000000 
20040bec l       .text	00000000 .LBB0_40
20040be6 l       .text	00000000 
20040bea l       .text	00000000 
20040bea l       .text	00000000 
20040bec l       .text	00000000 
20040bf2 l       .text	00000000 
20040bf8 l       .text	00000000 
20040c0e l       .text	00000000 .LBB0_42
20040bf8 l       .text	00000000 
20040bfa l       .text	00000000 .LBB0_41
20040bfa l       .text	00000000 
20040bfe l       .text	00000000 
20040c02 l       .text	00000000 
20040c06 l       .text	00000000 
20040c0a l       .text	00000000 
20040c0c l       .text	00000000 
20040c0e l       .text	00000000 
20040cbc l       .text	00000000 .LBB0_49
20040c12 l       .text	00000000 
20040c12 l       .text	00000000 
20040c14 l       .text	00000000 
20040c18 l       .text	00000000 
20040c18 l       .text	00000000 
20040c1c l       .text	00000000 
20040c1c l       .text	00000000 
20040c1e l       .text	00000000 
20040c26 l       .text	00000000 
20040c2c l       .text	00000000 
20040c2c l       .text	00000000 
20040c2e l       .text	00000000 
20040c32 l       .text	00000000 
20040c34 l       .text	00000000 
20040c34 l       .text	00000000 
20040c36 l       .text	00000000 
20040c36 l       .text	00000000 
20040c38 l       .text	00000000 
20040c3c l       .text	00000000 
20040c42 l       .text	00000000 
20040c42 l       .text	00000000 
20040c48 l       .text	00000000 
20040c48 l       .text	00000000 
20040c4c l       .text	00000000 
20040c4c l       .text	00000000 
20040c58 l       .text	00000000 
20040c5a l       .text	00000000 
20040c5c l       .text	00000000 
20040c5e l       .text	00000000 
20040c60 l       .text	00000000 
20040c60 l       .text	00000000 
20040c70 l       .text	00000000 
20040c70 l       .text	00000000 
20040c72 l       .text	00000000 
20040c76 l       .text	00000000 
20040c78 l       .text	00000000 
20040c78 l       .text	00000000 
20040c7a l       .text	00000000 
20040c7c l       .text	00000000 
20040c7c l       .text	00000000 
20040c8a l       .text	00000000 
20040c90 l       .text	00000000 .LBB0_46
20040c8a l       .text	00000000 
20040c8e l       .text	00000000 
20040c90 l       .text	00000000 
20040c94 l       .text	00000000 
20040c9c l       .text	00000000 
20040cb2 l       .text	00000000 .LBB0_48
20040c9c l       .text	00000000 
20040c9e l       .text	00000000 .LBB0_47
20040c9e l       .text	00000000 
20040ca2 l       .text	00000000 
20040ca6 l       .text	00000000 
20040caa l       .text	00000000 
20040cae l       .text	00000000 
20040cb0 l       .text	00000000 
20040cb2 l       .text	00000000 
20040cb4 l       .text	00000000 
20040cba l       .text	00000000 
20040cba l       .text	00000000 
20040cbc l       .text	00000000 
20040cc6 l       .text	00000000 
20040cc6 l       .text	00000000 
20040cde l       .text	00000000 .LBB0_52
20040cd4 l       .text	00000000 
20040cde l       .text	00000000 
20040ce8 l       .text	00000000 
20040d02 l       .text	00000000 .LBB0_56
20040ce8 l       .text	00000000 
20040cec l       .text	00000000 
20040cee l       .text	00000000 
20040cf0 l       .text	00000000 .LBB0_55
20040cf0 l       .text	00000000 
20040cf4 l       .text	00000000 
20040cf8 l       .text	00000000 
20040cfc l       .text	00000000 
20040d00 l       .text	00000000 
20040d02 l       .text	00000000 
20040d04 l       .text	00000000 
20040d0a l       .text	00000000 
20040d0e l       .text	00000000 
20040d14 l       .text	00000000 
20040d18 l       .text	00000000 
20040d18 l       .text	00000000 
20040d18 l       .text	00000000 
20040d18 l       .text	00000000 
20040d18 l       .text	00000000 
20040d1a l       .text	00000000 
20040d1a l       .text	00000000 
20040d1c l       .text	00000000 
20040d1c l       .text	00000000 
20040d1c l       .text	00000000 
20040d2a l       .text	00000000 .LBB1_2
20040d24 l       .text	00000000 
20040d26 l       .text	00000000 
20040d2a l       .text	00000000 
20040d2e l       .text	00000000 
20040d32 l       .text	00000000 
20040d50 l       .text	00000000 .LBB1_4
20040d34 l       .text	00000000 
20040d34 l       .text	00000000 
20040d38 l       .text	00000000 
20040d40 l       .text	00000000 
20040d44 l       .text	00000000 
20040d48 l       .text	00000000 
20040d48 l       .text	00000000 
20040d4a l       .text	00000000 
20040d56 l       .text	00000000 .LBB1_5
20040d4a l       .text	00000000 
20040d7c l       .text	00000000 .LBB1_9
20040d50 l       .text	00000000 
20040d50 l       .text	00000000 
20040d52 l       .text	00000000 
20040d52 l       .text	00000000 
20040d56 l       .text	00000000 
20040d58 l       .text	00000000 
20040d5a l       .text	00000000 
20040d5a l       .text	00000000 
20040d5e l       .text	00000000 
20040d5e l       .text	00000000 .LBB1_6
20040d5e l       .text	00000000 
20040d66 l       .text	00000000 
20040d6a l       .text	00000000 
20040d7a l       .text	00000000 .LBB1_8
20040d6e l       .text	00000000 
20040d72 l       .text	00000000 
20040d72 l       .text	00000000 
20040d76 l       .text	00000000 
20040d78 l       .text	00000000 
20040d78 l       .text	00000000 
20040d7a l       .text	00000000 
20040d7c l       .text	00000000 
20040d80 l       .text	00000000 
20040d98 l       .text	00000000 .LBB1_11
20040d86 l       .text	00000000 
20040d86 l       .text	00000000 
20040d8a l       .text	00000000 
20040d92 l       .text	00000000 
20040d96 l       .text	00000000 
20040d98 l       .text	00000000 
20040da0 l       .text	00000000 
20040da0 l       .text	00000000 
20040da0 l       .text	00000000 
20040da0 l       .text	00000000 
20040da0 l       .text	00000000 
20040da4 l       .text	00000000 
20040db0 l       .text	00000000 
20040db0 l       .text	00000000 
20040db4 l       .text	00000000 
20040dca l       .text	00000000 
20040dca l       .text	00000000 
20040dcc l       .text	00000000 
20040dce l       .text	00000000 
20040dce l       .text	00000000 
20040dd0 l       .text	00000000 
20040dd6 l       .text	00000000 
20040dda l       .text	00000000 
20040ddc l       .text	00000000 
20040ddc l       .text	00000000 
20040dde l       .text	00000000 
20040de2 l       .text	00000000 
20040dea l       .text	00000000 
20040dea l       .text	00000000 
20040df0 l       .text	00000000 
20040df4 l       .text	00000000 
20040e02 l       .text	00000000 
20040e02 l       .text	00000000 
20040e02 l       .text	00000000 
20040e02 l       .text	00000000 
20040e02 l       .text	00000000 
20040e04 l       .text	00000000 
20040e08 l       .text	00000000 
20040e08 l       .text	00000000 
20040e0a l       .text	00000000 
20040e18 l       .text	00000000 
20040e2c l       .text	00000000 
20040e2c l       .text	00000000 
20040e2e l       .text	00000000 
20040e30 l       .text	00000000 
20040e30 l       .text	00000000 
20040e34 l       .text	00000000 
20040e34 l       .text	00000000 
20040e38 l       .text	00000000 
20040e3c l       .text	00000000 
20040e3e l       .text	00000000 
20040e3e l       .text	00000000 
20040e42 l       .text	00000000 
20040e4a l       .text	00000000 
20040e4a l       .text	00000000 
20040e4a l       .text	00000000 
20040e4a l       .text	00000000 
20040e4a l       .text	00000000 
20040e4c l       .text	00000000 
20040e4e l       .text	00000000 
20040e58 l       .text	00000000 
20040e58 l       .text	00000000 
20040e5a l       .text	00000000 
20040e5c l       .text	00000000 
20040e5c l       .text	00000000 
20040e5e l       .text	00000000 
20040e5e l       .text	00000000 
20040e64 l       .text	00000000 
20040e64 l       .text	00000000 
20040e64 l       .text	00000000 
20040e64 l       .text	00000000 
20040e64 l       .text	00000000 
20040e66 l       .text	00000000 
20040e6c l       .text	00000000 
20040e70 l       .text	00000000 
20040e70 l       .text	00000000 .LBB5_1
20040e70 l       .text	00000000 
20040e82 l       .text	00000000 
20040e82 l       .text	00000000 .LBB5_2
20040e82 l       .text	00000000 
20040e92 l       .text	00000000 
20040e92 l       .text	00000000 
20040ea0 l       .text	00000000 
20040ea0 l       .text	00000000 
20040ea0 l       .text	00000000 
20040ea0 l       .text	00000000 
20040ea0 l       .text	00000000 
20040ea0 l       .text	00000000 
20040ea2 l       .text	00000000 
20040ea8 l       .text	00000000 
20040eaa l       .text	00000000 
20040eac l       .text	00000000 
20040eae l       .text	00000000 
20040eb0 l       .text	00000000 
20040eb0 l       .text	00000000 .LBB6_4
20040ebc l       .text	00000000 .LBB6_1
20040ebc l       .text	00000000 
20040ebc l       .text	00000000 
20040ee0 l       .text	00000000 .LBB6_3
20040ec2 l       .text	00000000 
20040ecc l       .text	00000000 
20040ecc l       .text	00000000 
20040ece l       .text	00000000 
20040ece l       .text	00000000 
20040edc l       .text	00000000 
20040edc l       .text	00000000 
20040ede l       .text	00000000 
20040ee0 l       .text	00000000 
20040ee2 l       .text	00000000 
20040eea l       .text	00000000 
20040eea l       .text	00000000 
00000875 l       .debug_loc	00000000 
0000089f l       .debug_loc	00000000 
00000918 l       .debug_loc	00000000 
000009b1 l       .debug_loc	00000000 
00000a4c l       .debug_loc	00000000 
00000acd l       .debug_loc	00000000 
00000b7d l       .debug_loc	00000000 
00000c4e l       .debug_loc	00000000 
00000cae l       .debug_loc	00000000 
00000d67 l       .debug_loc	00000000 
00000db7 l       .debug_loc	00000000 
00000e22 l       .debug_loc	00000000 
00000e3b l       .debug_loc	00000000 
00000e6f l       .debug_loc	00000000 
00000e82 l       .debug_loc	00000000 
00000ea0 l       .debug_loc	00000000 
00000eb3 l       .debug_loc	00000000 
00000ed2 l       .debug_loc	00000000 
00000f0a l       .debug_loc	00000000 
00000f37 l       .debug_loc	00000000 
00000f4a l       .debug_loc	00000000 
00000f73 l       .debug_loc	00000000 
00000fb3 l       .debug_loc	00000000 
00000fdc l       .debug_loc	00000000 
00000ffa l       .debug_loc	00000000 
0000100d l       .debug_loc	00000000 
00001020 l       .debug_loc	00000000 
00001033 l       .debug_loc	00000000 
000010a9 l       .debug_loc	00000000 
000010c9 l       .debug_loc	00000000 
000010dc l       .debug_loc	00000000 
00001107 l       .debug_loc	00000000 
0000111a l       .debug_loc	00000000 
00001147 l       .debug_loc	00000000 
0000115a l       .debug_loc	00000000 
0000116d l       .debug_loc	00000000 
00001180 l       .debug_loc	00000000 
000011ab l       .debug_loc	00000000 
000011be l       .debug_loc	00000000 
000011d1 l       .debug_loc	00000000 
000011e4 l       .debug_loc	00000000 
0000120f l       .debug_loc	00000000 
00001222 l       .debug_loc	00000000 
00001235 l       .debug_loc	00000000 
00001260 l       .debug_loc	00000000 
0000128b l       .debug_loc	00000000 
000012b6 l       .debug_loc	00000000 
0000137c l       .debug_line	00000000 .Lline_table_start0
00000050 l       .debug_ranges	00000000 
0000027c l       .debug_frame	00000000 
20040eea l       .text	00000000 
00000000 l    df *ABS*	00000000 fputc.cc
20040eec l       .text	00000000 
20040eec l       .text	00000000 
20040eec l       .text	00000000 
20040eee l       .text	00000000 
20040ef0 l       .text	00000000 
20040ef2 l       .text	00000000 
20040ef6 l       .text	00000000 
20040ef6 l       .text	00000000 
20040ef8 l       .text	00000000 
20040efc l       .text	00000000 
20040efc l       .text	00000000 
20040f02 l       .text	00000000 
20040f04 l       .text	00000000 
20040f04 l       .text	00000000 
20040f0a l       .text	00000000 
20040f0a l       .text	00000000 
000012d5 l       .debug_loc	00000000 
000012ff l       .debug_loc	00000000 
00001ab2 l       .debug_line	00000000 .Lline_table_start0
00000354 l       .debug_frame	00000000 
20040f0a l       .text	00000000 
00000000 l    df *ABS*	00000000 fputs.cc
20040f0c l       .text	00000000 
20040f0c l       .text	00000000 
20040f0c l       .text	00000000 
20040f0e l       .text	00000000 
20040f14 l       .text	00000000 
20040f18 l       .text	00000000 
20040f18 l       .text	00000000 
20040f1e l       .text	00000000 
20040f2a l       .text	00000000 
20040f32 l       .text	00000000 
20040f32 l       .text	00000000 
00001312 l       .debug_loc	00000000 
00001330 l       .debug_loc	00000000 
00001ba4 l       .debug_line	00000000 .Lline_table_start0
00000380 l       .debug_frame	00000000 
20040f32 l       .text	00000000 
00000000 l    df *ABS*	00000000 fgets.cc
20040f34 l       .text	00000000 
20040f34 l       .text	00000000 
20040f34 l       .text	00000000 
20040f36 l       .text	00000000 
20040f3c l       .text	00000000 
20040f3e l       .text	00000000 
20040f42 l       .text	00000000 
20040f44 l       .text	00000000 
20040f56 l       .text	00000000 
20040f56 l       .text	00000000 .LBB0_1
20040f56 l       .text	00000000 
20040f60 l       .text	00000000 
20040f64 l       .text	00000000 
20040f64 l       .text	00000000 
20040f68 l       .text	00000000 
20040f6e l       .text	00000000 
20040f70 l       .text	00000000 
20040f72 l       .text	00000000 
20040f78 l       .text	00000000 
20040f7c l       .text	00000000 
20040f7e l       .text	00000000 
20040f82 l       .text	00000000 
20040f86 l       .text	00000000 
20040f88 l       .text	00000000 
20040f8e l       .text	00000000 
20040f8e l       .text	00000000 
00001343 l       .debug_loc	00000000 
0000136d l       .debug_loc	00000000 
0000138c l       .debug_loc	00000000 
0000139f l       .debug_loc	00000000 
000013bf l       .debug_loc	00000000 
000013d2 l       .debug_loc	00000000 
00001c9f l       .debug_line	00000000 .Lline_table_start0
000003b0 l       .debug_frame	00000000 
20040f8e l       .text	00000000 
00000000 l    df *ABS*	00000000 fgetc.cc
20040f90 l       .text	00000000 
20040f90 l       .text	00000000 
20040f90 l       .text	00000000 
20040f92 l       .text	00000000 
20040f92 l       .text	00000000 
20040f94 l       .text	00000000 
20040f98 l       .text	00000000 
20040f98 l       .text	00000000 
20040f9c l       .text	00000000 
20040fa0 l       .text	00000000 
20040fa6 l       .text	00000000 
20040faa l       .text	00000000 
20040faa l       .text	00000000 
20040fb0 l       .text	00000000 
20040fb0 l       .text	00000000 
000013f1 l       .debug_loc	00000000 
00001404 l       .debug_loc	00000000 
00001dc4 l       .debug_line	00000000 .Lline_table_start0
000003e0 l       .debug_frame	00000000 
20040fb0 l       .text	00000000 
00000000 l    df *ABS*	00000000 strlen.cc
20040fb0 l       .text	00000000 
20040fb0 l       .text	00000000 
20040fb0 l       .text	00000000 
20040fb2 l       .text	00000000 
20040fb2 l       .text	00000000 .LBB0_1
20040fb2 l       .text	00000000 
20040fc0 l       .text	00000000 .LBB0_3
20040fb6 l       .text	00000000 
20040fb8 l       .text	00000000 
20040fbc l       .text	00000000 
20040fbc l       .text	00000000 
20040fbe l       .text	00000000 
20040fc0 l       .text	00000000 
20040fc0 l       .text	00000000 
20040fc2 l       .text	00000000 
20040fc4 l       .text	00000000 
20040fc4 l       .text	00000000 
00001418 l       .debug_loc	00000000 
00001450 l       .debug_loc	00000000 
00001eb6 l       .debug_line	00000000 .Lline_table_start0
0000040c l       .debug_frame	00000000 
20040fc4 l       .text	00000000 
00000000 l    df *ABS*	00000000 strcmp.cc
20040fc4 l       .text	00000000 
20040fc4 l       .text	00000000 
20040fc4 l       .text	00000000 .LBB0_1
20040fc4 l       .text	00000000 
20040fc4 l       .text	00000000 
20040fc8 l       .text	00000000 
20040fdc l       .text	00000000 .LBB0_4
20040fcc l       .text	00000000 
20040fe6 l       .text	00000000 .LBB0_7
20040fd0 l       .text	00000000 
20040fd2 l       .text	00000000 
20040fd6 l       .text	00000000 
20040fda l       .text	00000000 
20040fde l       .text	00000000 
20040fe4 l       .text	00000000 .LBB0_6
20040fde l       .text	00000000 
20040fe2 l       .text	00000000 
20040fe4 l       .text	00000000 
20040fe6 l       .text	00000000 
20040fe6 l       .text	00000000 
20040fe8 l       .text	00000000 
20040fe8 l       .text	00000000 
20040fea l       .text	00000000 
20040fea l       .text	00000000 
0000146f l       .debug_loc	00000000 
00001f8c l       .debug_line	00000000 .Lline_table_start0
00000430 l       .debug_frame	00000000 
20040fea l       .text	00000000 
00000000 l    df *ABS*	00000000 memset_rand.cc
20040fec l       .text	00000000 
20040fec l       .text	00000000 
20040fec l       .text	00000000 
20040fee l       .text	00000000 
20040fee l       .text	00000000 
20040ff4 l       .text	00000000 
20040ff4 l       .text	00000000 
20040ff6 l       .text	00000000 
20040ffa l       .text	00000000 
20040ffc l       .text	00000000 
20041012 l       .text	00000000 .LBB0_2
20040ffc l       .text	00000000 
20040ffe l       .text	00000000 .LBB0_1
20040ffe l       .text	00000000 
20041000 l       .text	00000000 
20041000 l       .text	00000000 
20041004 l       .text	00000000 
20041004 l       .text	00000000 
20041008 l       .text	00000000 
20041008 l       .text	00000000 
20041010 l       .text	00000000 
20041010 l       .text	00000000 
20041012 l       .text	00000000 
20041016 l       .text	00000000 
20041018 l       .text	00000000 
2004101e l       .text	00000000 
2004101e l       .text	00000000 
0000148d l       .debug_loc	00000000 
000014b7 l       .debug_loc	00000000 
000014fa l       .debug_loc	00000000 
00002093 l       .debug_line	00000000 .Lline_table_start0
00000454 l       .debug_frame	00000000 
2004101e l       .text	00000000 
00000000 l    df *ABS*	00000000 memcmp.cc
20041020 l       .text	00000000 
20041020 l       .text	00000000 
20041020 l       .text	00000000 
20041020 l       .text	00000000 
20041024 l       .text	00000000 
20041024 l       .text	00000000 .LBB0_1
20041024 l       .text	00000000 
2004103e l       .text	00000000 .LBB0_3
20041026 l       .text	00000000 
20041028 l       .text	00000000 
2004102c l       .text	00000000 
20041030 l       .text	00000000 
20041034 l       .text	00000000 
20041038 l       .text	00000000 
2004103a l       .text	00000000 
2004103a l       .text	00000000 
20041040 l       .text	00000000 .LBB0_4
2004103e l       .text	00000000 
2004103e l       .text	00000000 
20041040 l       .text	00000000 
20041040 l       .text	00000000 
20041042 l       .text	00000000 
20041044 l       .text	00000000 
20041044 l       .text	00000000 
0000152e l       .debug_loc	00000000 
00001541 l       .debug_loc	00000000 
00001554 l       .debug_loc	00000000 
00001567 l       .debug_loc	00000000 
0000157a l       .debug_loc	00000000 
000021a6 l       .debug_line	00000000 .Lline_table_start0
00000484 l       .debug_frame	00000000 
20041044 l       .text	00000000 
00000000 l    df *ABS*	00000000 strcpy.cc
20041044 l       .text	00000000 
20041044 l       .text	00000000 
20041044 l       .text	00000000 
20041048 l       .text	00000000 
20041048 l       .text	00000000 .LBB0_1
20041048 l       .text	00000000 
2004104c l       .text	00000000 
20041050 l       .text	00000000 
20041054 l       .text	00000000 
20041054 l       .text	00000000 
2004105c l       .text	00000000 
2004105c l       .text	00000000 
2004105e l       .text	00000000 
20041060 l       .text	00000000 
20041060 l       .text	00000000 
000015b2 l       .debug_loc	00000000 
0000227a l       .debug_line	00000000 .Lline_table_start0
000004a8 l       .debug_frame	00000000 
20041060 l       .text	00000000 
00000000 l    df *ABS*	00000000 memcpy.cc
20041060 l       .text	00000000 
20041060 l       .text	00000000 
20041060 l       .text	00000000 
20041064 l       .text	00000000 
2004107a l       .text	00000000 .LBB0_2
20041064 l       .text	00000000 
20041066 l       .text	00000000 
20041066 l       .text	00000000 .LBB0_1
20041066 l       .text	00000000 
2004106a l       .text	00000000 
2004106e l       .text	00000000 
20041072 l       .text	00000000 
20041076 l       .text	00000000 
20041078 l       .text	00000000 
2004107a l       .text	00000000 
2004107c l       .text	00000000 
2004107c l       .text	00000000 
000015e6 l       .debug_loc	00000000 
000015f9 l       .debug_loc	00000000 
00001619 l       .debug_loc	00000000 
00002328 l       .debug_line	00000000 .Lline_table_start0
000004cc l       .debug_frame	00000000 
2004107c l       .text	00000000 
00000000 l    df *ABS*	00000000 wordcmp.cc
2004107c l       .text	00000000 
2004107c l       .text	00000000 
2004107c l       .text	00000000 
2004107c l       .text	00000000 
20041080 l       .text	00000000 
20041080 l       .text	00000000 .LBB0_1
20041080 l       .text	00000000 
20041098 l       .text	00000000 .LBB0_3
20041082 l       .text	00000000 
20041086 l       .text	00000000 
20041088 l       .text	00000000 
2004108a l       .text	00000000 
2004108e l       .text	00000000 
20041092 l       .text	00000000 
20041094 l       .text	00000000 
20041094 l       .text	00000000 
2004109a l       .text	00000000 .LBB0_4
20041098 l       .text	00000000 
20041098 l       .text	00000000 
2004109a l       .text	00000000 
2004109a l       .text	00000000 
2004109c l       .text	00000000 
2004109e l       .text	00000000 
2004109e l       .text	00000000 
00001637 l       .debug_loc	00000000 
0000164a l       .debug_loc	00000000 
0000165d l       .debug_loc	00000000 
00001670 l       .debug_loc	00000000 
000016a8 l       .debug_loc	00000000 
000016bb l       .debug_loc	00000000 
000023e8 l       .debug_line	00000000 .Lline_table_start0
000004f0 l       .debug_frame	00000000 
2004109e l       .text	00000000 
00000000 l    df *ABS*	00000000 wordcpy.cc
200410a0 l       .text	00000000 
200410a0 l       .text	00000000 
200410a0 l       .text	00000000 
200410a4 l       .text	00000000 
200410ba l       .text	00000000 .LBB0_2
200410a4 l       .text	00000000 
200410a8 l       .text	00000000 
200410a8 l       .text	00000000 .LBB0_1
200410a8 l       .text	00000000 
200410aa l       .text	00000000 
200410ae l       .text	00000000 
200410b0 l       .text	00000000 
200410b4 l       .text	00000000 
200410b6 l       .text	00000000 
200410ba l       .text	00000000 
200410bc l       .text	00000000 
200410bc l       .text	00000000 
000016ce l       .debug_loc	00000000 
000016e1 l       .debug_loc	00000000 
00001701 l       .debug_loc	00000000 
0000171f l       .debug_loc	00000000 
000024e7 l       .debug_line	00000000 .Lline_table_start0
00000514 l       .debug_frame	00000000 
200410bc l       .text	00000000 
00000000 l    df *ABS*	00000000 strncpy.cc
200410bc l       .text	00000000 
200410bc l       .text	00000000 
200410bc l       .text	00000000 
200410be l       .text	00000000 
200410da l       .text	00000000 .LBB0_3
200410be l       .text	00000000 
200410c2 l       .text	00000000 .LBB0_1
200410c2 l       .text	00000000 
200410dc l       .text	00000000 .LBB0_4
200410ca l       .text	00000000 
200410cc l       .text	00000000 
200410d0 l       .text	00000000 
200410d4 l       .text	00000000 
200410d6 l       .text	00000000 
200410da l       .text	00000000 
200410dc l       .text	00000000 
200410de l       .text	00000000 
200410f0 l       .text	00000000 .LBB0_7
200410e6 l       .text	00000000 
200410e6 l       .text	00000000 .LBB0_6
200410e6 l       .text	00000000 
200410ea l       .text	00000000 
200410ee l       .text	00000000 
200410f0 l       .text	00000000 
200410f4 l       .text	00000000 
200410f6 l       .text	00000000 
200410f6 l       .text	00000000 
00001732 l       .debug_loc	00000000 
00001745 l       .debug_loc	00000000 
00001758 l       .debug_loc	00000000 
000025d2 l       .debug_line	00000000 .Lline_table_start0
00000538 l       .debug_frame	00000000 
200410f6 l       .text	00000000 
00000000 l    df *ABS*	00000000 memset.cc
200410f8 l       .text	00000000 
200410f8 l       .text	00000000 
200410f8 l       .text	00000000 
200410fc l       .text	00000000 
2004110a l       .text	00000000 .LBB0_2
200410fc l       .text	00000000 
200410fe l       .text	00000000 .LBB0_1
200410fe l       .text	00000000 
20041102 l       .text	00000000 
20041106 l       .text	00000000 
20041108 l       .text	00000000 
2004110a l       .text	00000000 
2004110c l       .text	00000000 
2004110c l       .text	00000000 
00001782 l       .debug_loc	00000000 
000017a2 l       .debug_loc	00000000 
000026e7 l       .debug_line	00000000 .Lline_table_start0
0000055c l       .debug_frame	00000000 
2004110c l       .text	00000000 
00000000 l    df *ABS*	00000000 wordset.cc
2004110c l       .text	00000000 
2004110c l       .text	00000000 
2004110c l       .text	00000000 
20041110 l       .text	00000000 
2004111c l       .text	00000000 .LBB0_2
20041110 l       .text	00000000 
20041112 l       .text	00000000 .LBB0_1
20041112 l       .text	00000000 
20041114 l       .text	00000000 
20041118 l       .text	00000000 
2004111a l       .text	00000000 
2004111c l       .text	00000000 
2004111e l       .text	00000000 
2004111e l       .text	00000000 
000017c0 l       .debug_loc	00000000 
000017e0 l       .debug_loc	00000000 
000027bf l       .debug_line	00000000 .Lline_table_start0
00000580 l       .debug_frame	00000000 
2004111e l       .text	00000000 
00000000 l    df *ABS*	00000000 memset_unique.cc
20041120 l       .text	00000000 
20041120 l       .text	00000000 
20041120 l       .text	00000000 
20041126 l       .text	00000000 
20041140 l       .text	00000000 .LBB0_2
20041126 l       .text	00000000 
2004112a l       .text	00000000 .LBB0_1
2004112a l       .text	00000000 
2004112e l       .text	00000000 
2004112e l       .text	00000000 
20041132 l       .text	00000000 
20041132 l       .text	00000000 
2004113a l       .text	00000000 
2004113a l       .text	00000000 
2004113c l       .text	00000000 
2004113c l       .text	00000000 
20041140 l       .text	00000000 
20041142 l       .text	00000000 
20041142 l       .text	00000000 
000017fe l       .debug_loc	00000000 
00001811 l       .debug_loc	00000000 
00001845 l       .debug_loc	00000000 
000028c2 l       .debug_line	00000000 .Lline_table_start0
000005a4 l       .debug_frame	00000000 
20041142 l       .text	00000000 
00000000 l    df *ABS*	00000000 irq.cc
20041144 l       .text	00000000 
20041144 l       .text	00000000 
20041144 l       .text	00000000 
20041144 l       .text	00000000 
20041156 l       .text	00000000 
20041156 l       .text	00000000 
20041158 l       .text	00000000 
20041158 l       .text	00000000 
20041164 l       .text	00000000 
20041164 l       .text	00000000 
20041166 l       .text	00000000 
2004116a l       .text	00000000 
20041170 l       .text	00000000 
20041170 l       .text	00000000 
20041170 l       .text	00000000 
20041170 l       .text	00000000 
20041170 l       .text	00000000 
20041170 l       .text	00000000 
20041182 l       .text	00000000 
20041182 l       .text	00000000 
20041186 l       .text	00000000 
20041192 l       .text	00000000 
20041192 l       .text	00000000 
20041196 l       .text	00000000 
2004119c l       .text	00000000 
2004119c l       .text	00000000 
2004119c l       .text	00000000 
2004119c l       .text	00000000 
2004119c l       .text	00000000 
2004119e l       .text	00000000 
2004119e l       .text	00000000 
200411a0 l       .text	00000000 
200411b8 l       .text	00000000 
200411d2 l       .text	00000000 .LBB2_2
200411bc l       .text	00000000 
200411be l       .text	00000000 
200411ce l       .text	00000000 
200411ce l       .text	00000000 
200411ec l       .text	00000000 .LBB2_3
200411d2 l       .text	00000000 .LBB2_4
200411d2 l       .text	00000000 
200411e6 l       .text	00000000 
200411e6 l       .text	00000000 
200411ea l       .text	00000000 
200411ec l       .text	00000000 
200411f2 l       .text	00000000 
200411f2 l       .text	00000000 
0000187b l       .debug_loc	00000000 
0000188e l       .debug_loc	00000000 
000018a1 l       .debug_loc	00000000 
000018b4 l       .debug_loc	00000000 
000018c7 l       .debug_loc	00000000 
000018da l       .debug_loc	00000000 
000029a5 l       .debug_line	00000000 .Lline_table_start0
000005c8 l       .debug_frame	00000000 
200411f2 l       .text	00000000 
00000000 l    df *ABS*	00000000 edc.cc
200411f4 l       .text	00000000 
200411f4 l       .text	00000000 
200411f4 l       .text	00000000 
200411f6 l       .text	00000000 
200411fc l       .text	00000000 
20041204 l       .text	00000000 
2004120c l       .text	00000000 
2004121a l       .text	00000000 
2004121e l       .text	00000000 
2004141c l     F .text	0000004c ComputeParity(unsigned long long)
20041222 l       .text	00000000 
20041224 l       .text	00000000 
20041226 l       .text	00000000 
20041226 l       .text	00000000 
2004122e l       .text	00000000 
20041240 l       .text	00000000 
20041242 l       .text	00000000 
20041242 l       .text	00000000 
20041244 l       .text	00000000 
20041244 l       .text	00000000 
20041246 l       .text	00000000 
20041248 l       .text	00000000 
2004124a l       .text	00000000 
2004124a l       .text	00000000 
20041252 l       .text	00000000 
20041256 l       .text	00000000 
20041256 l       .text	00000000 
20041260 l       .text	00000000 
20041262 l       .text	00000000 
20041264 l       .text	00000000 
20041266 l       .text	00000000 
20041268 l       .text	00000000 
2004126a l       .text	00000000 
2004126c l       .text	00000000 
2004126c l       .text	00000000 
20041274 l       .text	00000000 
20041276 l       .text	00000000 
20041278 l       .text	00000000 
20041278 l       .text	00000000 
20041280 l       .text	00000000 
20041282 l       .text	00000000 
20041284 l       .text	00000000 
20041286 l       .text	00000000 
20041288 l       .text	00000000 
2004128a l       .text	00000000 
2004128c l       .text	00000000 
2004128c l       .text	00000000 
20041294 l       .text	00000000 
20041296 l       .text	00000000 
20041298 l       .text	00000000 
20041298 l       .text	00000000 
200412a0 l       .text	00000000 
200412a2 l       .text	00000000 
200412a4 l       .text	00000000 
200412a6 l       .text	00000000 
200412a8 l       .text	00000000 
200412a8 l       .text	00000000 
200412aa l       .text	00000000 
200412ac l       .text	00000000 
200412ac l       .text	00000000 
200412b4 l       .text	00000000 
200412b4 l       .text	00000000 
200412be l       .text	00000000 
200412be l       .text	00000000 
200412c0 l       .text	00000000 
200412c2 l       .text	00000000 
200412c4 l       .text	00000000 
200412c6 l       .text	00000000 
200412c8 l       .text	00000000 
200412c8 l       .text	00000000 
200412cc l       .text	00000000 
200412ce l       .text	00000000 
2004138e l       .text	00000000 .LBB0_2
200412ce l       .text	00000000 
200412d0 l       .text	00000000 
200412d6 l       .text	00000000 
200412d8 l       .text	00000000 
200412de l       .text	00000000 
200412de l       .text	00000000 
200412e2 l       .text	00000000 
200412e4 l       .text	00000000 
200412e4 l       .text	00000000 
200412e8 l       .text	00000000 
200412ee l       .text	00000000 
200412f4 l       .text	00000000 
200412f8 l       .text	00000000 
200412fc l       .text	00000000 
200412fe l       .text	00000000 
20041300 l       .text	00000000 
20041300 l       .text	00000000 
2004130a l       .text	00000000 
20041314 l       .text	00000000 
2004131e l       .text	00000000 
2004132a l       .text	00000000 
2004132e l       .text	00000000 
20041330 l       .text	00000000 
20041332 l       .text	00000000 
20041334 l       .text	00000000 
20041336 l       .text	00000000 
2004133e l       .text	00000000 
20041340 l       .text	00000000 
20041344 l       .text	00000000 
20041346 l       .text	00000000 
2004134a l       .text	00000000 
20041352 l       .text	00000000 
20041354 l       .text	00000000 
20041358 l       .text	00000000 
2004135a l       .text	00000000 
2004135e l       .text	00000000 
20041360 l       .text	00000000 
20041364 l       .text	00000000 
20041366 l       .text	00000000 
2004136a l       .text	00000000 
2004136c l       .text	00000000 
20041370 l       .text	00000000 
20041372 l       .text	00000000 
20041376 l       .text	00000000 
2004137a l       .text	00000000 
2004137e l       .text	00000000 
20041380 l       .text	00000000 
20041384 l       .text	00000000 
20041386 l       .text	00000000 
20041388 l       .text	00000000 
2004138a l       .text	00000000 
2004138a l       .text	00000000 
2004138c l       .text	00000000 
20041412 l       .text	00000000 .LBB0_3
2004138c l       .text	00000000 
2004138e l       .text	00000000 
20041390 l       .text	00000000 
20041390 l       .text	00000000 
2004139a l       .text	00000000 
200413a4 l       .text	00000000 
200413ae l       .text	00000000 
200413ba l       .text	00000000 
200413be l       .text	00000000 
200413c0 l       .text	00000000 
200413c2 l       .text	00000000 
200413c4 l       .text	00000000 
200413c8 l       .text	00000000 
200413cc l       .text	00000000 
200413d4 l       .text	00000000 
200413d8 l       .text	00000000 
200413da l       .text	00000000 
200413de l       .text	00000000 
200413e0 l       .text	00000000 
200413e4 l       .text	00000000 
200413e8 l       .text	00000000 
200413ea l       .text	00000000 
200413ee l       .text	00000000 
200413f2 l       .text	00000000 
200413f6 l       .text	00000000 
200413f8 l       .text	00000000 
200413fc l       .text	00000000 
20041400 l       .text	00000000 
20041404 l       .text	00000000 
20041406 l       .text	00000000 
2004140a l       .text	00000000 
2004140c l       .text	00000000 
20041410 l       .text	00000000 
20041412 l       .text	00000000 
20041412 l       .text	00000000 
2004141c l       .text	00000000 
2004141c l       .text	00000000 
2004141c l       .text	00000000 
2004141c l       .text	00000000 
2004141c l       .text	00000000 
2004141c l       .text	00000000 
2004141e l       .text	00000000 
2004142c l       .text	00000000 
20041430 l       .text	00000000 
2004143e l       .text	00000000 
20041442 l       .text	00000000 
20041450 l       .text	00000000 
20041454 l       .text	00000000 
2004145a l       .text	00000000 
2004145c l       .text	00000000 
2004145e l       .text	00000000 
20041462 l       .text	00000000 
20041464 l       .text	00000000 
20041466 l       .text	00000000 
20041466 l       .text	00000000 
20041468 l       .text	00000000 
20041468 l       .text	00000000 
20041468 l       .text	00000000 
20041468 l       .text	00000000 
20041468 l       .text	00000000 
2004146a l       .text	00000000 
2004146a l       .text	00000000 
2004146e l       .text	00000000 
20041472 l       .text	00000000 
20041474 l       .text	00000000 
2004147c l       .text	00000000 
2004147c l       .text	00000000 
2004147e l       .text	00000000 
20041482 l       .text	00000000 
2004148a l       .text	00000000 .LBB2_2
20041482 l       .text	00000000 
20041484 l       .text	00000000 
2004148e l       .text	00000000 .LBB2_3
20041496 l       .text	00000000 
2004149a l       .text	00000000 
2004149a l       .text	00000000 
200414a4 l       .text	00000000 .LBB2_5
2004149e l       .text	00000000 
200414a2 l       .text	00000000 
200414a4 l       .text	00000000 
200414a8 l       .text	00000000 
200414aa l       .text	00000000 
200414ba l       .text	00000000 .LBB2_7
200414aa l       .text	00000000 
200414ae l       .text	00000000 
200414ae l       .text	00000000 .LBB2_6
200414ae l       .text	00000000 
200414b2 l       .text	00000000 
200414b4 l       .text	00000000 
200414b6 l       .text	00000000 
200414ba l       .text	00000000 
200414ba l       .text	00000000 
200414bc l       .text	00000000 
200414be l       .text	00000000 
200414be l       .text	00000000 
200414be l       .text	00000000 
200414be l       .text	00000000 
200414be l       .text	00000000 
200414c0 l       .text	00000000 
200414c6 l       .text	00000000 
200414c8 l       .text	00000000 
200414ca l       .text	00000000 
200414ca l       .text	00000000 
200414cc l       .text	00000000 
200414cc l       .text	00000000 
200414d2 l       .text	00000000 
200414d4 l       .text	00000000 
200414da l       .text	00000000 
200414da l       .text	00000000 
200414da l       .text	00000000 
000018ed l       .debug_loc	00000000 
00001a2a l       .debug_loc	00000000 
00001a9e l       .debug_loc	00000000 
00001abc l       .debug_loc	00000000 
00001ada l       .debug_loc	00000000 
00001af8 l       .debug_loc	00000000 
00001b16 l       .debug_loc	00000000 
00001b34 l       .debug_loc	00000000 
00001b49 l       .debug_loc	00000000 
00001b8d l       .debug_loc	00000000 
00001bb5 l       .debug_loc	00000000 
00001bda l       .debug_loc	00000000 
00001bf8 l       .debug_loc	00000000 
00001c16 l       .debug_loc	00000000 
00001c29 l       .debug_loc	00000000 
00001c4e l       .debug_loc	00000000 
00001c61 l       .debug_loc	00000000 
00001c74 l       .debug_loc	00000000 
00001c87 l       .debug_loc	00000000 
00001c9a l       .debug_loc	00000000 
00001cb2 l       .debug_loc	00000000 
00001cc5 l       .debug_loc	00000000 
00001cd8 l       .debug_loc	00000000 
00001ceb l       .debug_loc	00000000 
00002b66 l       .debug_line	00000000 .Lline_table_start0
00000614 l       .debug_frame	00000000 
200414da l       .text	00000000 
00000000 l    df *ABS*	00000000 __cxa_pure_virtual.cc
200414dc l       .text	00000000 
200414dc l       .text	00000000 
000030e6 l       .debug_line	00000000 .Lline_table_start0
00000680 l       .debug_frame	00000000 
00000000 l    df *ABS*	00000000 crt0_cheri.cc
200414dc l       .text	00000000 
200414dc l       .text	00000000 
200414dc l       .text	00000000 
200414de l       .text	00000000 
200414de l       .text	00000000 
200414e0 l       .text	00000000 
200414e4 l       .text	00000000 
200414e4 l       .text	00000000 
200414e8 l       .text	00000000 
200414e8 l       .text	00000000 
200414ee l       .text	00000000 
200414ee l       .text	00000000 
200414ee l       .text	00000000 
200414ee l       .text	00000000 
200414ee l       .text	00000000 
200414ee l       .text	00000000 
200414ee l       .text	00000000 
200414f8 l       .text	00000000 
200414fc l       .text	00000000 
200414fc l       .text	00000000 
200414fe l       .text	00000000 
200414fe l       .text	00000000 
200414fe l       .text	00000000 
200414fe l       .text	00000000 
200414fe l       .text	00000000 
200414fe l       .text	00000000 
20041502 l       .text	00000000 
20041502 l       .text	00000000 
20041506 l       .text	00000000 
2004150a l       .text	00000000 
2004150c l       .text	00000000 
2004150c l       .text	00000000 
2004150c l       .text	00000000 
2004150c l       .text	00000000 
2004150c l       .text	00000000 
2004150e l       .text	00000000 
2004150e l       .text	00000000 
2004150e l       .text	00000000 
20041514 l       .text	00000000 
20041514 l       .text	00000000 
20041528 l       .text	00000000 
20041586 l       .text	00000000 .LBB3_5
20041528 l       .text	00000000 
2004152c l       .text	00000000 
2004152c l       .text	00000000 .LBB3_1
2004152c l       .text	00000000 
20041530 l       .text	00000000 
2004153a l       .text	00000000 
2004153a l       .text	00000000 
2004153e l       .text	00000000 
20041548 l       .text	00000000 .LBB3_3
2004153e l       .text	00000000 
20041542 l       .text	00000000 
20041542 l       .text	00000000 
20041546 l       .text	00000000 
2004154c l       .text	00000000 .LBB3_4
20041546 l       .text	00000000 
20041548 l       .text	00000000 
20041548 l       .text	00000000 
2004154c l       .text	00000000 
2004154c l       .text	00000000 
20041552 l       .text	00000000 
2004155c l       .text	00000000 
20041566 l       .text	00000000 
2004156e l       .text	00000000 
20041572 l       .text	00000000 
20041572 l       .text	00000000 
20041576 l       .text	00000000 
20041576 l       .text	00000000 
2004157a l       .text	00000000 
2004157a l       .text	00000000 
2004157e l       .text	00000000 
20041580 l       .text	00000000 
20041580 l       .text	00000000 
20041582 l       .text	00000000 
20041586 l       .text	00000000 
20041586 l       .text	00000000 
20041590 l       .text	00000000 
20041590 l       .text	00000000 
20041590 l       .text	00000000 
20041590 l       .text	00000000 
20041590 l       .text	00000000 
20041592 l       .text	00000000 
20041598 l       .text	00000000 
2004159a l       .text	00000000 
2004159c l       .text	00000000 
2004159e l       .text	00000000 
200415a0 l       .text	00000000 
200415a4 l       .text	00000000 
200415a4 l       .text	00000000 
200415ac l       .text	00000000 
200415ac l       .text	00000000 
200415b4 l       .text	00000000 
200415b4 l       .text	00000000 
200415bc l       .text	00000000 
200415bc l       .text	00000000 
200415c4 l       .text	00000000 
200415c4 l       .text	00000000 
200415c6 l       .text	00000000 
200415c6 l       .text	00000000 
200415ce l       .text	00000000 
200415ce l       .text	00000000 
200415d6 l       .text	00000000 
200415d6 l       .text	00000000 
200415d8 l       .text	00000000 
200415d8 l       .text	00000000 
200415dc l       .text	00000000 
200415dc l       .text	00000000 
200415e0 l       .text	00000000 
200415e0 l       .text	00000000 
200415e6 l       .text	00000000 
200415e6 l       .text	00000000 
200415ea l       .text	00000000 
200415ea l       .text	00000000 
200415ee l       .text	00000000 
200415ee l       .text	00000000 
200415f2 l       .text	00000000 
200415f2 l       .text	00000000 
200415f6 l       .text	00000000 
200415f6 l       .text	00000000 
200415fa l       .text	00000000 
200415fa l       .text	00000000 
200415fc l       .text	00000000 
200415fc l       .text	00000000 
20041606 l       .text	00000000 
20041606 l       .text	00000000 
20041610 l       .text	00000000 
20041612 l       .text	00000000 
20041612 l       .text	00000000 
2004161c l       .text	00000000 
2004161e l       .text	00000000 
20041620 l       .text	00000000 
20041622 l       .text	00000000 
20041624 l       .text	00000000 
20041624 l       .text	00000000 
2004162a l       .text	00000000 
2004162e l       .text	00000000 
2004162e l       .text	00000000 
2004163c l       .text	00000000 
2004163c l       .text	00000000 
20041640 l       .text	00000000 
20041640 l       .text	00000000 
2004164e l       .text	00000000 
2004164e l       .text	00000000 
20041652 l       .text	00000000 
20041652 l       .text	00000000 
20041660 l       .text	00000000 
20041660 l       .text	00000000 
20041664 l       .text	00000000 
20041664 l       .text	00000000 
20041672 l       .text	00000000 
20041672 l       .text	00000000 
20041676 l       .text	00000000 
20041676 l       .text	00000000 
20041684 l       .text	00000000 
20041684 l       .text	00000000 
20041688 l       .text	00000000 
20041688 l       .text	00000000 
20041692 l       .text	00000000 
20041694 l       .text	00000000 
20041696 l       .text	00000000 
2004169a l       .text	00000000 
2004169a l       .text	00000000 
2004169e l       .text	00000000 
2004169e l       .text	00000000 
200416a0 l       .text	00000000 
200416a4 l       .text	00000000 
200416a4 l       .text	00000000 
200416a6 l       .text	00000000 
200416aa l       .text	00000000 
200416b8 l       .text	00000000 
200416b8 l       .text	00000000 
200416c2 l       .text	00000000 
200416c2 l       .text	00000000 
200416c4 l       .text	00000000 
200416c4 l       .text	00000000 
200416c6 l       .text	00000000 
200416c6 l       .text	00000000 
200416c6 l       .text	00000000 
00001d21 l       .debug_loc	00000000 
00001d34 l       .debug_loc	00000000 
00001d47 l       .debug_loc	00000000 
00001d5a l       .debug_loc	00000000 
00001d6d l       .debug_loc	00000000 
00001d8c l       .debug_loc	00000000 
00001d9f l       .debug_loc	00000000 
00001dd3 l       .debug_loc	00000000 
00001dfd l       .debug_loc	00000000 
00001e27 l       .debug_loc	00000000 
00001e51 l       .debug_loc	00000000 
00001e7b l       .debug_loc	00000000 
00001ea5 l       .debug_loc	00000000 
00001ecf l       .debug_loc	00000000 
00001ee2 l       .debug_loc	00000000 
00001ef5 l       .debug_loc	00000000 
00001f0a l       .debug_loc	00000000 
00001f1d l       .debug_loc	00000000 
00001f30 l       .debug_loc	00000000 
00001f43 l       .debug_loc	00000000 
00001f77 l       .debug_loc	00000000 
00001f96 l       .debug_loc	00000000 
00001fa9 l       .debug_loc	00000000 
00001fc7 l       .debug_loc	00000000 
00001fda l       .debug_loc	00000000 
00002003 l       .debug_loc	00000000 
00002016 l       .debug_loc	00000000 
00002029 l       .debug_loc	00000000 
00002047 l       .debug_loc	00000000 
0000205c l       .debug_loc	00000000 
00002072 l       .debug_loc	00000000 
00002090 l       .debug_loc	00000000 
00003162 l       .debug_line	00000000 .Lline_table_start0
000006a4 l       .debug_frame	00000000 
200416c6 l       .text	00000000 
00000000 l    df *ABS*	00000000 core_main.cc
200416c8 l       .text	00000000 
200416c8 l       .text	00000000 
200416c8 l       .text	00000000 
200416ca l       .text	00000000 
200416ca l       .text	00000000 
200416d0 l       .text	00000000 
200416d0 l       .text	00000000 
200416d4 l       .text	00000000 
200416d6 l       .text	00000000 
200416d8 l       .text	00000000 
200416d8 l       .text	00000000 
200416da l       .text	00000000 
200416de l       .text	00000000 
200416e2 l       .text	00000000 
200416e6 l       .text	00000000 
200416ea l       .text	00000000 
200416ea l       .text	00000000 .LBB0_1
200416ea l       .text	00000000 
20041722 l       .text	00000000 .LBB0_5
200416f0 l       .text	00000000 
200416f8 l       .text	00000000 
200416f8 l       .text	00000000 
200416fc l       .text	00000000 
20041700 l       .text	00000000 
20041700 l       .text	00000000 
20041704 l       .text	00000000 
2004170c l       .text	00000000 
2004170c l       .text	00000000 
20041710 l       .text	00000000 
20041714 l       .text	00000000 
20041714 l       .text	00000000 
2004171e l       .text	00000000 .LBB0_4
20041718 l       .text	00000000 
2004171a l       .text	00000000 
2004171e l       .text	00000000 
20041720 l       .text	00000000 
20041722 l       .text	00000000 
20041728 l       .text	00000000 
2004172a l       .text	00000000 
20041730 l       .text	00000000 
20041730 l       .text	00000000 
20041730 l       .text	00000000 
20041730 l       .text	00000000 
20041730 l       .text	00000000 
20041732 l       .text	00000000 
20041738 l       .text	00000000 
2004173e l       .text	00000000 
2004173e l       .text	00000000 
20041740 l       .text	00000000 
20041740 l       .text	00000000 
20041742 l       .text	00000000 
2004174e l       .text	00000000 
2004174e l       .text	00000000 
20041754 l       .text	00000000 
20041758 l       .text	00000000 
20041758 l       .text	00000000 
2004175e l       .text	00000000 
2004175e l       .text	00000000 
20041762 l       .text	00000000 
20041768 l       .text	00000000 
20041768 l       .text	00000000 
2004176c l       .text	00000000 
20041772 l       .text	00000000 
20041772 l       .text	00000000 
20041776 l       .text	00000000 
2004177c l       .text	00000000 
2004177c l       .text	00000000 
2004177e l       .text	00000000 
2004177e l       .text	00000000 .LBB1_74
2004177e l       .text	00000000 
20041792 l       .text	00000000 
20041792 l       .text	00000000 
20041798 l       .text	00000000 
20041798 l       .text	00000000 
2004179e l       .text	00000000 .LBB1_2
2004179a l       .text	00000000 
2004179c l       .text	00000000 
2004179c l       .text	00000000 
200417a0 l       .text	00000000 
200417ac l       .text	00000000 
200417b0 l       .text	00000000 
200417c8 l       .text	00000000 .LBB1_4
200417b4 l       .text	00000000 
200417b8 l       .text	00000000 
200417bc l       .text	00000000 
200417c4 l       .text	00000000 
200417c8 l       .text	00000000 
200417cc l       .text	00000000 
200417e8 l       .text	00000000 .LBB1_6
200417d2 l       .text	00000000 
200417d8 l       .text	00000000 
200417dc l       .text	00000000 
200417e4 l       .text	00000000 
200417e8 l       .text	00000000 
200417e8 l       .text	00000000 .LBB1_75
200417e8 l       .text	00000000 
200417fc l       .text	00000000 
200417fc l       .text	00000000 
2004180a l       .text	00000000 
2004180c l       .text	00000000 
20041810 l       .text	00000000 .LBB1_76
20041810 l       .text	00000000 
20041824 l       .text	00000000 
20041824 l       .text	00000000 
2004182c l       .text	00000000 
2004183e l       .text	00000000 .LBB1_8
2004182c l       .text	00000000 
20041830 l       .text	00000000 
20041830 l       .text	00000000 .LBB1_7
20041830 l       .text	00000000 
20041834 l       .text	00000000 
20041838 l       .text	00000000 
2004183a l       .text	00000000 
2004183e l       .text	00000000 
2004183e l       .text	00000000 
20041846 l       .text	00000000 
2004184a l       .text	00000000 
2004184a l       .text	00000000 
2004184e l       .text	00000000 
2004185a l       .text	00000000 
2004185a l       .text	00000000 .LBB1_9
20041888 l       .text	00000000 .LBB1_13
2004185a l       .text	00000000 
2004185e l       .text	00000000 
2004185e l       .text	00000000 
2004186a l       .text	00000000 .LBB1_12
20041864 l       .text	00000000 
20041866 l       .text	00000000 
20041866 l       .text	00000000 
20041868 l       .text	00000000 
20041868 l       .text	00000000 
2004186a l       .text	00000000 
2004186a l       .text	00000000 
2004186e l       .text	00000000 
20041872 l       .text	00000000 
20041876 l       .text	00000000 
20041878 l       .text	00000000 
20041882 l       .text	00000000 
20041884 l       .text	00000000 
20041886 l       .text	00000000 
20041888 l       .text	00000000 
20041888 l       .text	00000000 .LBB1_77
20041888 l       .text	00000000 
2004189c l       .text	00000000 
2004189c l       .text	00000000 
200418a0 l       .text	00000000 
200418a0 l       .text	00000000 .LBB1_14
200418a0 l       .text	00000000 
20041914 l       .text	00000000 .LBB1_21
200418a6 l       .text	00000000 
200418a8 l       .text	00000000 
200418b0 l       .text	00000000 
200418b4 l       .text	00000000 
200418d6 l       .text	00000000 .LBB1_17
200418ba l       .text	00000000 
200418bc l       .text	00000000 
200418be l       .text	00000000 
200418ca l       .text	00000000 
200418ce l       .text	00000000 
200418d2 l       .text	00000000 
200418d2 l       .text	00000000 
200418d4 l       .text	00000000 
200418d6 l       .text	00000000 
200418fc l       .text	00000000 .LBB1_19
200418da l       .text	00000000 
200418dc l       .text	00000000 
200418e0 l       .text	00000000 
200418e4 l       .text	00000000 
200418e6 l       .text	00000000 
200418e8 l       .text	00000000 
200418ea l       .text	00000000 
200418ec l       .text	00000000 
200418f6 l       .text	00000000 
200418fa l       .text	00000000 
200418fa l       .text	00000000 
200418fc l       .text	00000000 
200418fe l       .text	00000000 
20041902 l       .text	00000000 
20041904 l       .text	00000000 
20041906 l       .text	00000000 
2004190a l       .text	00000000 
2004190c l       .text	00000000 
20041910 l       .text	00000000 
20041910 l       .text	00000000 
20041914 l       .text	00000000 
20041914 l       .text	00000000 .LBB1_78
20041914 l       .text	00000000 
20041928 l       .text	00000000 
20041928 l       .text	00000000 
20041964 l       .text	00000000 .LBB1_25
2004192a l       .text	00000000 
2004192c l       .text	00000000 
2004192c l       .text	00000000 
20041930 l       .text	00000000 
20041930 l       .text	00000000 
20041934 l       .text	00000000 
20041954 l       .text	00000000 .LBB1_24
20041934 l       .text	00000000 
20041936 l       .text	00000000 .LBB1_23
20041936 l       .text	00000000 
20041938 l       .text	00000000 
2004193e l       .text	00000000 
20041942 l       .text	00000000 
20041942 l       .text	00000000 
20041946 l       .text	00000000 
20041946 l       .text	00000000 
2004194a l       .text	00000000 
2004194a l       .text	00000000 
2004194e l       .text	00000000 
2004194e l       .text	00000000 
20041952 l       .text	00000000 
20041952 l       .text	00000000 
20041954 l       .text	00000000 
20041954 l       .text	00000000 
20041958 l       .text	00000000 
2004195c l       .text	00000000 
2004195c l       .text	00000000 
2004195e l       .text	00000000 
20041964 l       .text	00000000 
20041964 l       .text	00000000 
20041978 l       .text	00000000 
20041978 l       .text	00000000 .LBB1_79
2004198e l       .text	00000000 
2004198e l       .text	00000000 
20041992 l       .text	00000000 
20041992 l       .text	00000000 
20041996 l       .text	00000000 
20041996 l       .text	00000000 
2004199a l       .text	00000000 
2004199a l       .text	00000000 
2004199e l       .text	00000000 
2004199e l       .text	00000000 
200419a2 l       .text	00000000 
200419a4 l       .text	00000000 
200419a4 l       .text	00000000 
200419ac l       .text	00000000 
200419ac l       .text	00000000 
200419b0 l       .text	00000000 
200419b2 l       .text	00000000 
200419ba l       .text	00000000 
200419ba l       .text	00000000 
200419be l       .text	00000000 
200419c0 l       .text	00000000 
200419c8 l       .text	00000000 
200419c8 l       .text	00000000 
200419cc l       .text	00000000 
200419ce l       .text	00000000 
200419d6 l       .text	00000000 
200419d6 l       .text	00000000 
200419dc l       .text	00000000 
200419dc l       .text	00000000 
20041a1e l       .text	00000000 .LBB1_31
200419e2 l       .text	00000000 
200419e2 l       .text	00000000 
20041a32 l       .text	00000000 .LBB1_32
200419e8 l       .text	00000000 
200419ec l       .text	00000000 
20041a46 l       .text	00000000 .LBB1_33
200419f2 l       .text	00000000 
200419f6 l       .text	00000000 
20041a5a l       .text	00000000 .LBB1_34
200419fc l       .text	00000000 
20041a00 l       .text	00000000 
20041db2 l       .text	00000000 .LBB1_73
20041a06 l       .text	00000000 
20041a0a l       .text	00000000 
20041a0c l       .text	00000000 
20041a0e l       .text	00000000 
20041a10 l       .text	00000000 
20041a10 l       .text	00000000 .LBB1_80
20041a1c l       .text	00000000 
20041a6a l       .text	00000000 .LBB1_35
20041a1e l       .text	00000000 
20041a20 l       .text	00000000 
20041a22 l       .text	00000000 
20041a24 l       .text	00000000 
20041a24 l       .text	00000000 .LBB1_81
20041a30 l       .text	00000000 
20041a32 l       .text	00000000 
20041a34 l       .text	00000000 
20041a36 l       .text	00000000 
20041a38 l       .text	00000000 
20041a38 l       .text	00000000 .LBB1_82
20041a44 l       .text	00000000 
20041a46 l       .text	00000000 
20041a48 l       .text	00000000 
20041a4a l       .text	00000000 
20041a4c l       .text	00000000 
20041a4c l       .text	00000000 .LBB1_83
20041a58 l       .text	00000000 
20041a5a l       .text	00000000 
20041a5c l       .text	00000000 
20041a5e l       .text	00000000 
20041a5e l       .text	00000000 .LBB1_84
20041a6a l       .text	00000000 
20041a72 l       .text	00000000 
20041a7a l       .text	00000000 
20041a7a l       .text	00000000 .LBB1_85
20043368 l     O .text	0000000a list_known_crc
20041a8c l       .text	00000000 .LBB1_86
20043372 l     O .text	0000000a matrix_known_crc
20041a9e l       .text	00000000 .LBB1_87
2004337c l     O .text	0000000a state_known_crc
20041ab2 l       .text	00000000 .LBB1_88
20041ac0 l       .text	00000000 .LBB1_89
20041ace l       .text	00000000 .LBB1_90
20041adc l       .text	00000000 .LBB1_36
20041adc l       .text	00000000 
20041adc l       .text	00000000 
20041b80 l       .text	00000000 .LBB1_48
20041ae2 l       .text	00000000 
20041ae6 l       .text	00000000 
20041ae8 l       .text	00000000 
20041afc l       .text	00000000 .LBB1_39
20041aec l       .text	00000000 
20041aee l       .text	00000000 
20041af2 l       .text	00000000 
20041b00 l       .text	00000000 .LBB1_40
20041af8 l       .text	00000000 
20041afc l       .text	00000000 
20041b1c l       .text	00000000 .LBB1_41
20041b00 l       .text	00000000 
20041b10 l       .text	00000000 
20041b10 l       .text	00000000 
20041b1a l       .text	00000000 
20041b1c l       .text	00000000 
20041b4c l       .text	00000000 .LBB1_44
20041b20 l       .text	00000000 
20041b22 l       .text	00000000 
20041b26 l       .text	00000000 
20041b2c l       .text	00000000 
20041b30 l       .text	00000000 
20041b40 l       .text	00000000 
20041b40 l       .text	00000000 
20041b4a l       .text	00000000 
20041b4c l       .text	00000000 
20041b78 l       .text	00000000 .LBB1_47
20041b4e l       .text	00000000 
20041b50 l       .text	00000000 
20041b54 l       .text	00000000 
20041b5a l       .text	00000000 
20041b5e l       .text	00000000 
20041b6e l       .text	00000000 
20041b6e l       .text	00000000 
20041b78 l       .text	00000000 
20041b7a l       .text	00000000 
20041b7c l       .text	00000000 
20041b82 l       .text	00000000 
20041b82 l       .text	00000000 .LBB1_49
20041b82 l       .text	00000000 
20041b86 l       .text	00000000 
20041b86 l       .text	00000000 
20041b88 l       .text	00000000 
20041b8a l       .text	00000000 
20041b8a l       .text	00000000 .LBB1_91
20041b8a l       .text	00000000 
20041ba0 l       .text	00000000 
20041ba0 l       .text	00000000 .LBB1_92
20041ba0 l       .text	00000000 
20041bb6 l       .text	00000000 
20041bb6 l       .text	00000000 
20041bbc l       .text	00000000 
20041bbe l       .text	00000000 .LBB1_93
20041bd4 l       .text	00000000 
20041bd4 l       .text	00000000 
20041bda l       .text	00000000 
20041bfe l       .text	00000000 .LBB1_51
20041bda l       .text	00000000 
20041bdc l       .text	00000000 
20041bde l       .text	00000000 
20041be4 l       .text	00000000 
20041be8 l       .text	00000000 
20041be8 l       .text	00000000 .LBB1_94
20041bfe l       .text	00000000 
20041bfe l       .text	00000000 
20041c00 l       .text	00000000 
20041c00 l       .text	00000000 .LBB1_95
20041c16 l       .text	00000000 
20041c16 l       .text	00000000 .LBB1_96
20041c16 l       .text	00000000 
20041c22 l       .text	00000000 .LBB1_97
20041c38 l       .text	00000000 
20041c38 l       .text	00000000 .LBB1_98
20041c38 l       .text	00000000 
20041c44 l       .text	00000000 .LBB1_99
20041c5a l       .text	00000000 
20041c5a l       .text	00000000 .LBB1_100
20041c5a l       .text	00000000 
20041c66 l       .text	00000000 .LBB1_101
20041c7c l       .text	00000000 
20041c7c l       .text	00000000 .LBB1_102
20041c7c l       .text	00000000 
20041c94 l       .text	00000000 
20041c94 l       .text	00000000 
20041c96 l       .text	00000000 
20041ccc l       .text	00000000 .LBB1_56
20041c9c l       .text	00000000 
20041c9c l       .text	00000000 
20041ca0 l       .text	00000000 
20041ca0 l       .text	00000000 .LBB1_103
20041cac l       .text	00000000 .LBB1_53
20041cac l       .text	00000000 
20041cac l       .text	00000000 
20041cca l       .text	00000000 .LBB1_55
20041cb0 l       .text	00000000 
20041cc4 l       .text	00000000 
20041cc4 l       .text	00000000 
20041cca l       .text	00000000 
20041ccc l       .text	00000000 
20041cd0 l       .text	00000000 
20041cd4 l       .text	00000000 
20041d06 l       .text	00000000 .LBB1_61
20041cd4 l       .text	00000000 
20041cd6 l       .text	00000000 
20041cda l       .text	00000000 
20041cda l       .text	00000000 .LBB1_104
20041ce6 l       .text	00000000 .LBB1_58
20041ce6 l       .text	00000000 
20041ce6 l       .text	00000000 
20041d04 l       .text	00000000 .LBB1_60
20041cea l       .text	00000000 
20041cfe l       .text	00000000 
20041cfe l       .text	00000000 
20041d04 l       .text	00000000 
20041d06 l       .text	00000000 
20041d08 l       .text	00000000 
20041d0a l       .text	00000000 
20041d50 l       .text	00000000 .LBB1_67
20041d0a l       .text	00000000 
20041d0c l       .text	00000000 .LBB1_62
20041d0c l       .text	00000000 
20041d12 l       .text	00000000 
20041d12 l       .text	00000000 .LBB1_105
20041d1e l       .text	00000000 .LBB1_63
20041d1e l       .text	00000000 
20041d1e l       .text	00000000 
20041d3c l       .text	00000000 .LBB1_65
20041d22 l       .text	00000000 
20041d36 l       .text	00000000 
20041d36 l       .text	00000000 
20041d7e l       .text	00000000 .LBB1_70
20041d3c l       .text	00000000 
20041d40 l       .text	00000000 
20041d40 l       .text	00000000 .LBB1_106
20041d40 l       .text	00000000 
20041d8c l       .text	00000000 .LBB1_71
20041d4c l       .text	00000000 
20041d98 l       .text	00000000 .LBB1_72
20041d50 l       .text	00000000 
20041d50 l       .text	00000000 
20041d54 l       .text	00000000 
20041d54 l       .text	00000000 .LBB1_107
20041d60 l       .text	00000000 .LBB1_68
20041d60 l       .text	00000000 
20041d60 l       .text	00000000 
20041d64 l       .text	00000000 
20041d78 l       .text	00000000 
20041d78 l       .text	00000000 
20041d7e l       .text	00000000 
20041d7e l       .text	00000000 .LBB1_108
20041d8a l       .text	00000000 
20041d8c l       .text	00000000 .LBB1_109
20041d8c l       .text	00000000 
20041d98 l       .text	00000000 
20041da0 l       .text	00000000 
20041da0 l       .text	00000000 
20041da6 l       .text	00000000 
20041da6 l       .text	00000000 
20041db2 l       .text	00000000 
20041db2 l       .text	00000000 
20041db4 l       .text	00000000 
20041dba l       .text	00000000 
20041dba l       .text	00000000 
000020a3 l       .debug_loc	00000000 
000020c1 l       .debug_loc	00000000 
000020df l       .debug_loc	00000000 
000020fe l       .debug_loc	00000000 
00002111 l       .debug_loc	00000000 
00002237 l       .debug_loc	00000000 
000022bd l       .debug_loc	00000000 
00002376 l       .debug_loc	00000000 
0000243d l       .debug_loc	00000000 
00002468 l       .debug_loc	00000000 
0000249f l       .debug_loc	00000000 
000024d4 l       .debug_loc	00000000 
000024fe l       .debug_loc	00000000 
00002511 l       .debug_loc	00000000 
00003532 l       .debug_line	00000000 .Lline_table_start0
00000068 l       .debug_ranges	00000000 
00000728 l       .debug_frame	00000000 
20041dba l       .text	00000000 
00000000 l    df *ABS*	00000000 core_list_join.cc
20041dbc l       .text	00000000 
20041dbc l       .text	00000000 
20041dbc l       .text	00000000 
20041dbe l       .text	00000000 
20041dbe l       .text	00000000 
20041dc4 l       .text	00000000 
20041dc8 l       .text	00000000 
20041dc8 l       .text	00000000 
20041e1e l       .text	00000000 .LBB0_7
20041dcc l       .text	00000000 
20041dce l       .text	00000000 
20041dd2 l       .text	00000000 
20041dd4 l       .text	00000000 
20041dd4 l       .text	00000000 
20041ddc l       .text	00000000 
20041ddc l       .text	00000000 
20041de0 l       .text	00000000 
20041de4 l       .text	00000000 
20041de4 l       .text	00000000 
20041de6 l       .text	00000000 
20041dea l       .text	00000000 
20041e24 l       .text	00000000 .LBB0_8
20041dea l       .text	00000000 
20041dee l       .text	00000000 
20041e3a l       .text	00000000 .LBB0_10
20041df0 l       .text	00000000 
20041df2 l       .text	00000000 
20041dfe l       .text	00000000 .LBB0_5
20041df6 l       .text	00000000 
20041dfa l       .text	00000000 
20041dfe l       .text	00000000 
20041e00 l       .text	00000000 
20041e02 l       .text	00000000 
20041e06 l       .text	00000000 
20041e0a l       .text	00000000 
20041e0e l       .text	00000000 
20041e0e l       .text	00000000 
20041e12 l       .text	00000000 
20041e12 l       .text	00000000 
20041e16 l       .text	00000000 
20041e18 l       .text	00000000 
20041e1e l       .text	00000000 
20041e1e l       .text	00000000 
20041e22 l       .text	00000000 
20041e5e l       .text	00000000 .LBB0_11
20041e22 l       .text	00000000 
20041e24 l       .text	00000000 
20041e24 l       .text	00000000 
20041e28 l       .text	00000000 
20041e2c l       .text	00000000 
20041e30 l       .text	00000000 
20041e30 l       .text	00000000 
20041e34 l       .text	00000000 
20041e36 l       .text	00000000 
20041e3a l       .text	00000000 
20041e3a l       .text	00000000 
20041e40 l       .text	00000000 
20041e40 l       .text	00000000 
20041e44 l       .text	00000000 
20041e44 l       .text	00000000 
20041e48 l       .text	00000000 
20041e4a l       .text	00000000 
20041e4e l       .text	00000000 
20041e52 l       .text	00000000 
20041e58 l       .text	00000000 
20041e5e l       .text	00000000 
20041e5e l       .text	00000000 
20041e62 l       .text	00000000 
20041e68 l       .text	00000000 
20041e68 l       .text	00000000 
20041e68 l       .text	00000000 
20041e68 l       .text	00000000 
20041e68 l       .text	00000000 
20041e6a l       .text	00000000 
20041e70 l       .text	00000000 
20041e74 l       .text	00000000 
20041e78 l       .text	00000000 
20041e78 l       .text	00000000 
20041e7e l       .text	00000000 
20041e80 l       .text	00000000 
20041e84 l       .text	00000000 
20041e8a l       .text	00000000 
20041e8a l       .text	00000000 
20041e92 l       .text	00000000 
20041e94 l       .text	00000000 
20041e94 l       .text	00000000 
20041e98 l       .text	00000000 
20041e98 l       .text	00000000 
20041e9c l       .text	00000000 
20041ea2 l       .text	00000000 
20041ea2 l       .text	00000000 
20041ea2 l       .text	00000000 
20041ea2 l       .text	00000000 
20041ea2 l       .text	00000000 
20041eb4 l       .text	00000000 .LBB2_2
20041ea2 l       .text	00000000 
20041ea4 l       .text	00000000 
20041ea8 l       .text	00000000 
20041ea8 l       .text	00000000 
20041eac l       .text	00000000 
20041eb0 l       .text	00000000 
20041eb4 l       .text	00000000 
20041eb8 l       .text	00000000 
20041eb8 l       .text	00000000 
20041ebc l       .text	00000000 
20041ebc l       .text	00000000 
20041ebe l       .text	00000000 
20041ec0 l       .text	00000000 
20041ec0 l       .text	00000000 
20041ec0 l       .text	00000000 
20041ec0 l       .text	00000000 
20041ec0 l       .text	00000000 
20041ec0 l       .text	00000000 
20041ec4 l       .text	00000000 
20041ec8 l       .text	00000000 
20041ecc l       .text	00000000 
20041ecc l       .text	00000000 
20041ed0 l       .text	00000000 
20041ed2 l       .text	00000000 
20041ed2 l       .text	00000000 
20041ed2 l       .text	00000000 
20041ed2 l       .text	00000000 
20041ed2 l       .text	00000000 
20041ed4 l       .text	00000000 
20041ed4 l       .text	00000000 
20041eda l       .text	00000000 
20041eda l       .text	00000000 
20041ee2 l       .text	00000000 
20041ee4 l       .text	00000000 
20041ee4 l       .text	00000000 
20041ee6 l       .text	00000000 
20041ee6 l       .text	00000000 
20041eea l       .text	00000000 
20041ef0 l       .text	00000000 
20041ef0 l       .text	00000000 
20041efa l       .text	00000000 
20041efc l       .text	00000000 
20041efc l       .text	00000000 .LBB4_1
20041efc l       .text	00000000 
20041f02 l       .text	00000000 
20041f86 l       .text	00000000 .LBB4_10
20041f08 l       .text	00000000 
20041f0c l       .text	00000000 
20041f0c l       .text	00000000 
20041f10 l       .text	00000000 
20041f14 l       .text	00000000 
20041f1e l       .text	00000000 
20041f20 l       .text	00000000 
20041f24 l       .text	00000000 
20041f24 l       .text	00000000 
20041f2a l       .text	00000000 
20041f2e l       .text	00000000 
20041f58 l       .text	00000000 .LBB4_6
20041f2e l       .text	00000000 
20041f30 l       .text	00000000 
20041f32 l       .text	00000000 
20041f36 l       .text	00000000 
20041f38 l       .text	00000000 
20041f3c l       .text	00000000 
20041f3e l       .text	00000000 
20041f42 l       .text	00000000 
20041f42 l       .text	00000000 
20041f44 l       .text	00000000 
20041f46 l       .text	00000000 
20041f46 l       .text	00000000 
20041f54 l       .text	00000000 .LBB4_5
20041f48 l       .text	00000000 
20041f4a l       .text	00000000 
20041f4a l       .text	00000000 
20041f4c l       .text	00000000 
20041f4e l       .text	00000000 
20041f50 l       .text	00000000 
20041f52 l       .text	00000000 
20041f54 l       .text	00000000 
20041f54 l       .text	00000000 
20041f6c l       .text	00000000 .LBB4_7
20041f58 l       .text	00000000 
20041f58 l       .text	00000000 
20041f5a l       .text	00000000 
20041f5c l       .text	00000000 
20041f60 l       .text	00000000 
20041f64 l       .text	00000000 
20041f64 l       .text	00000000 
20041f66 l       .text	00000000 
20041f68 l       .text	00000000 
20041f68 l       .text	00000000 
20041f6c l       .text	00000000 
20041f6c l       .text	00000000 
20041f7c l       .text	00000000 .LBB4_9
20041f72 l       .text	00000000 
20041f76 l       .text	00000000 
20041f7c l       .text	00000000 
20041f80 l       .text	00000000 
20041f80 l       .text	00000000 
20041f82 l       .text	00000000 
20041f84 l       .text	00000000 
20041f84 l       .text	00000000 
20041f86 l       .text	00000000 
20041f86 l       .text	00000000 
20041f8c l       .text	00000000 
20041f8c l       .text	00000000 
20041fa6 l       .text	00000000 .LBB4_12
20041f92 l       .text	00000000 
20041f92 l       .text	00000000 .LBB4_21
20041f92 l       .text	00000000 
20041fa2 l       .text	00000000 
20041fa6 l       .text	00000000 
20041fa6 l       .text	00000000 
20041fa8 l       .text	00000000 
20041fb2 l       .text	00000000 
20041fb2 l       .text	00000000 
20041fb4 l       .text	00000000 
20041fb6 l       .text	00000000 
20041fb6 l       .text	00000000 
20041fbe l       .text	00000000 
20041fbe l       .text	00000000 
20041fc4 l       .text	00000000 
20041fc8 l       .text	00000000 
20041fce l       .text	00000000 .LBB4_14
20041fc8 l       .text	00000000 
20041fca l       .text	00000000 
20041fce l       .text	00000000 
20041fd2 l       .text	00000000 
20041fd8 l       .text	00000000 .LBB4_15
20041ff0 l       .text	00000000 .LBB4_17
20041fda l       .text	00000000 
20041fdc l       .text	00000000 
20041fde l       .text	00000000 
20041fe2 l       .text	00000000 
20041fea l       .text	00000000 
20041fea l       .text	00000000 
20041fec l       .text	00000000 
20041fee l       .text	00000000 
20041fee l       .text	00000000 
20041ff0 l       .text	00000000 
20041ff0 l       .text	00000000 
20041ff2 l       .text	00000000 
20041ff2 l       .text	00000000 
20041ff6 l       .text	00000000 
20041ff6 l       .text	00000000 
20041ff8 l       .text	00000000 
20041ff8 l       .text	00000000 
20041ffa l       .text	00000000 
20041ffc l       .text	00000000 
20041ffe l       .text	00000000 
20042000 l       .text	00000000 
20042002 l       .text	00000000 
20042002 l       .text	00000000 .LBB4_22
20042002 l       .text	00000000 
20042010 l       .text	00000000 
20042014 l       .text	00000000 
20042014 l       .text	00000000 
2004201c l       .text	00000000 
2004201c l       .text	00000000 .LBB4_18
2004201e l       .text	00000000 
20042034 l       .text	00000000 .LBB4_20
2004201e l       .text	00000000 
20042020 l       .text	00000000 
20042024 l       .text	00000000 
20042028 l       .text	00000000 
20042030 l       .text	00000000 
20042032 l       .text	00000000 
20042032 l       .text	00000000 
20042034 l       .text	00000000 
20042038 l       .text	00000000 
2004203c l       .text	00000000 
2004203e l       .text	00000000 
20042044 l       .text	00000000 
20042044 l       .text	00000000 
20042044 l       .text	00000000 
20042044 l       .text	00000000 
20042044 l       .text	00000000 
20042044 l       .text	00000000 
20042074 l       .text	00000000 .LBB5_6
20042048 l       .text	00000000 
2004204c l       .text	00000000 
2004204e l       .text	00000000 
20042076 l       .text	00000000 .LBB5_7
20042052 l       .text	00000000 
20042054 l       .text	00000000 .LBB5_2
20042054 l       .text	00000000 
20042056 l       .text	00000000 
2004207a l       .text	00000000 .LBB5_8
2004205a l       .text	00000000 
2004205e l       .text	00000000 
20042060 l       .text	00000000 
20042064 l       .text	00000000 
20042064 l       .text	00000000 .LBB5_4
20042064 l       .text	00000000 
20042066 l       .text	00000000 
2004206a l       .text	00000000 
2004206e l       .text	00000000 
20042072 l       .text	00000000 
20042074 l       .text	00000000 
20042076 l       .text	00000000 
20042076 l       .text	00000000 
2004207a l       .text	00000000 
2004207a l       .text	00000000 
2004207c l       .text	00000000 
2004207c l       .text	00000000 
2004207c l       .text	00000000 
2004207c l       .text	00000000 
2004207c l       .text	00000000 
20042080 l       .text	00000000 
20042090 l       .text	00000000 .LBB6_2
20042080 l       .text	00000000 
20042082 l       .text	00000000 .LBB6_1
20042082 l       .text	00000000 
20042084 l       .text	00000000 
20042084 l       .text	00000000 
20042086 l       .text	00000000 
20042086 l       .text	00000000 
2004208a l       .text	00000000 
2004208e l       .text	00000000 
2004208e l       .text	00000000 
20042090 l       .text	00000000 
20042090 l       .text	00000000 
20042094 l       .text	00000000 
20042096 l       .text	00000000 
20042096 l       .text	00000000 
20042096 l       .text	00000000 
20042096 l       .text	00000000 
20042096 l       .text	00000000 
20042098 l       .text	00000000 
2004209e l       .text	00000000 
200420a0 l       .text	00000000 
200420a2 l       .text	00000000 
200420a4 l       .text	00000000 
200420a4 l       .text	00000000 .LBB7_1
200420ac l       .text	00000000 .LBB7_3
200420a6 l       .text	00000000 
200420aa l       .text	00000000 
200420ba l       .text	00000000 
2004217a l       .text	00000000 .LBB7_23
200420ba l       .text	00000000 
200420bc l       .text	00000000 
200420bc l       .text	00000000 .LBB7_4
200420bc l       .text	00000000 
200420be l       .text	00000000 
200420c0 l       .text	00000000 
200420c0 l       .text	00000000 
200420c6 l       .text	00000000 
200420c8 l       .text	00000000 
200420c8 l       .text	00000000 .LBB7_5
200420d8 l       .text	00000000 .LBB7_8
200420c8 l       .text	00000000 
200420cc l       .text	00000000 
200420ce l       .text	00000000 
200420d0 l       .text	00000000 
200420d0 l       .text	00000000 
200420d2 l       .text	00000000 
200420d6 l       .text	00000000 
200420da l       .text	00000000 .LBB7_9
200420d8 l       .text	00000000 
200420da l       .text	00000000 
200420dc l       .text	00000000 
200420dc l       .text	00000000 .LBB7_10
200420e0 l       .text	00000000 
200420e8 l       .text	00000000 
200420fa l       .text	00000000 .LBB7_13
200420e8 l       .text	00000000 
200420ec l       .text	00000000 
200420f0 l       .text	00000000 
20042168 l       .text	00000000 .LBB7_22
200420f6 l       .text	00000000 
20042154 l       .text	00000000 .LBB7_20
200420f8 l       .text	00000000 
200420fa l       .text	00000000 
20042102 l       .text	00000000 
2004212c l       .text	00000000 .LBB7_16
20042106 l       .text	00000000 
20042108 l       .text	00000000 
2004210a l       .text	00000000 
2004210c l       .text	00000000 
2004210c l       .text	00000000 
2004210e l       .text	00000000 
20042110 l       .text	00000000 
20042116 l       .text	00000000 
2004213c l       .text	00000000 .LBB7_17
20042116 l       .text	00000000 
2004211a l       .text	00000000 
2004211a l       .text	00000000 
2004211c l       .text	00000000 
2004211c l       .text	00000000 
2004211e l       .text	00000000 
20042120 l       .text	00000000 
20042120 l       .text	00000000 
20042128 l       .text	00000000 
2004214c l       .text	00000000 .LBB7_18
2004212c l       .text	00000000 
2004212c l       .text	00000000 
2004212e l       .text	00000000 
2004212e l       .text	00000000 
20042130 l       .text	00000000 
20042138 l       .text	00000000 
20042150 l       .text	00000000 .LBB7_19
20042138 l       .text	00000000 
20042164 l       .text	00000000 .LBB7_21
2004213c l       .text	00000000 
2004213c l       .text	00000000 
2004213e l       .text	00000000 
2004213e l       .text	00000000 
20042140 l       .text	00000000 
20042142 l       .text	00000000 
20042142 l       .text	00000000 
2004214a l       .text	00000000 
2004214c l       .text	00000000 
2004214e l       .text	00000000 
2004214e l       .text	00000000 
20042150 l       .text	00000000 
20042150 l       .text	00000000 
20042154 l       .text	00000000 
20042154 l       .text	00000000 
20042156 l       .text	00000000 
20042156 l       .text	00000000 
20042158 l       .text	00000000 
20042158 l       .text	00000000 
2004215a l       .text	00000000 
20042162 l       .text	00000000 
20042162 l       .text	00000000 
20042164 l       .text	00000000 
20042164 l       .text	00000000 
20042168 l       .text	00000000 
20042172 l       .text	00000000 
20042174 l       .text	00000000 
20042176 l       .text	00000000 
20042178 l       .text	00000000 
20042178 l       .text	00000000 
2004217a l       .text	00000000 
2004217a l       .text	00000000 
2004217e l       .text	00000000 
20042180 l       .text	00000000 
20042180 l       .text	00000000 
20042184 l       .text	00000000 
20042184 l       .text	00000000 
20042186 l       .text	00000000 
2004218a l       .text	00000000 
20042190 l       .text	00000000 
20042192 l       .text	00000000 
20042198 l       .text	00000000 
20042198 l       .text	00000000 
20042198 l       .text	00000000 
20042198 l       .text	00000000 
20042198 l       .text	00000000 
20042198 l       .text	00000000 
2004219a l       .text	00000000 
2004219a l       .text	00000000 
2004219c l       .text	00000000 
2004219e l       .text	00000000 
2004219e l       .text	00000000 
200421a0 l       .text	00000000 
200421a2 l       .text	00000000 
200421a4 l       .text	00000000 
200421a6 l       .text	00000000 
200421aa l       .text	00000000 
200421ae l       .text	00000000 
200421b0 l       .text	00000000 
200421b0 l       .text	00000000 
200421b0 l       .text	00000000 
200421b0 l       .text	00000000 
200421b0 l       .text	00000000 
200421b0 l       .text	00000000 
200421b2 l       .text	00000000 
200421b4 l       .text	00000000 
200421b4 l       .text	00000000 
200421b6 l       .text	00000000 
200421b8 l       .text	00000000 
200421ba l       .text	00000000 
200421bc l       .text	00000000 
200421be l       .text	00000000 
200421c0 l       .text	00000000 
200421c0 l       .text	00000000 
200421c0 l       .text	00000000 
200421c0 l       .text	00000000 
200421c0 l       .text	00000000 
200421c2 l       .text	00000000 
200421c8 l       .text	00000000 
200421ca l       .text	00000000 
200421cc l       .text	00000000 
200421d0 l       .text	00000000 
200421d4 l       .text	00000000 
200421d4 l       .text	00000000 
200421dc l       .text	00000000 
200421dc l       .text	00000000 
200421e4 l       .text	00000000 
200421e4 l       .text	00000000 
200421e8 l       .text	00000000 
200421ec l       .text	00000000 
200421f6 l       .text	00000000 
200421fa l       .text	00000000 
200421fe l       .text	00000000 
200421fe l       .text	00000000 
20042202 l       .text	00000000 
20042202 l       .text	00000000 
20042206 l       .text	00000000 
20042206 l       .text	00000000 
20042210 l       .text	00000000 
20042214 l       .text	00000000 
20042216 l       .text	00000000 
20042216 l       .text	00000000 
2004221a l       .text	00000000 
20042242 l       .text	00000000 .LBB10_2
2004221a l       .text	00000000 
2004221c l       .text	00000000 
20042222 l       .text	00000000 
20042226 l       .text	00000000 
20042226 l       .text	00000000 
2004222a l       .text	00000000 
2004222e l       .text	00000000 
2004222e l       .text	00000000 
20042230 l       .text	00000000 
20042230 l       .text	00000000 
20042238 l       .text	00000000 
20042246 l       .text	00000000 .LBB10_3
20042242 l       .text	00000000 
20042242 l       .text	00000000 
20042246 l       .text	00000000 
20042250 l       .text	00000000 
200422ac l       .text	00000000 .LBB10_7
20042250 l       .text	00000000 
20042254 l       .text	00000000 
20042254 l       .text	00000000 .LBB10_4
20042254 l       .text	00000000 
20042258 l       .text	00000000 
20042262 l       .text	00000000 
20042262 l       .text	00000000 
20042266 l       .text	00000000 
20042266 l       .text	00000000 
200422a6 l       .text	00000000 .LBB10_6
2004226c l       .text	00000000 
2004226c l       .text	00000000 
20042272 l       .text	00000000 
20042272 l       .text	00000000 
20042274 l       .text	00000000 
20042278 l       .text	00000000 
20042278 l       .text	00000000 
2004227a l       .text	00000000 
2004227e l       .text	00000000 
20042280 l       .text	00000000 
20042280 l       .text	00000000 
20042286 l       .text	00000000 
20042286 l       .text	00000000 
20042288 l       .text	00000000 
20042288 l       .text	00000000 
2004228a l       .text	00000000 
2004228e l       .text	00000000 
20042290 l       .text	00000000 
20042290 l       .text	00000000 
20042294 l       .text	00000000 
2004229e l       .text	00000000 
2004229e l       .text	00000000 
200422a2 l       .text	00000000 
200422a6 l       .text	00000000 
200422a6 l       .text	00000000 
200422a8 l       .text	00000000 
200422ac l       .text	00000000 
200422b8 l       .text	00000000 
200422b8 l       .text	00000000 .LBB10_8
200422b8 l       .text	00000000 
200422e0 l       .text	00000000 .LBB10_12
200422bc l       .text	00000000 
200422c0 l       .text	00000000 
200422d4 l       .text	00000000 .LBB10_11
200422c4 l       .text	00000000 
200422c4 l       .text	00000000 
200422c8 l       .text	00000000 
200422c8 l       .text	00000000 
200422ca l       .text	00000000 
200422ca l       .text	00000000 
200422d4 l       .text	00000000 
200422d4 l       .text	00000000 
200422da l       .text	00000000 
200422dc l       .text	00000000 
200422de l       .text	00000000 
200422de l       .text	00000000 
200422e0 l       .text	00000000 
200422e0 l       .text	00000000 .LBB10_13
200422e0 l       .text	00000000 
200422f8 l       .text	00000000 
200422f8 l       .text	00000000 
200422f8 l       .text	00000000 
200422f8 l       .text	00000000 
200422f8 l       .text	00000000 
200422f8 l       .text	00000000 
200422f8 l       .text	00000000 
200422fc l       .text	00000000 
2004234a l       .text	00000000 .LBB11_3
20042304 l       .text	00000000 
20042308 l       .text	00000000 
2004230a l       .text	00000000 
2004230a l       .text	00000000 
20042312 l       .text	00000000 
20042316 l       .text	00000000 
20042316 l       .text	00000000 
2004231a l       .text	00000000 
2004231c l       .text	00000000 
2004231c l       .text	00000000 
20042320 l       .text	00000000 
20042324 l       .text	00000000 
20042326 l       .text	00000000 
20042326 l       .text	00000000 
2004232a l       .text	00000000 
20042332 l       .text	00000000 
20042336 l       .text	00000000 
20042336 l       .text	00000000 
2004233a l       .text	00000000 
2004233e l       .text	00000000 
20042342 l       .text	00000000 
20042342 l       .text	00000000 
2004234a l       .text	00000000 
2004234a l       .text	00000000 
20042350 l       .text	00000000 
20042350 l       .text	00000000 
000025af l       .debug_loc	00000000 
000025e5 l       .debug_loc	00000000 
00002619 l       .debug_loc	00000000 
00002632 l       .debug_loc	00000000 
00002645 l       .debug_loc	00000000 
0000266e l       .debug_loc	00000000 
0000268c l       .debug_loc	00000000 
000026b6 l       .debug_loc	00000000 
000026c9 l       .debug_loc	00000000 
000026f2 l       .debug_loc	00000000 
00002710 l       .debug_loc	00000000 
00002723 l       .debug_loc	00000000 
00002736 l       .debug_loc	00000000 
00002749 l       .debug_loc	00000000 
0000275c l       .debug_loc	00000000 
0000276f l       .debug_loc	00000000 
00002782 l       .debug_loc	00000000 
000027b9 l       .debug_loc	00000000 
000027f0 l       .debug_loc	00000000 
00002881 l       .debug_loc	00000000 
000028d0 l       .debug_loc	00000000 
0000291f l       .debug_loc	00000000 
00002981 l       .debug_loc	00000000 
000029b7 l       .debug_loc	00000000 
000029ca l       .debug_loc	00000000 
000029fe l       .debug_loc	00000000 
00002a12 l       .debug_loc	00000000 
00002a31 l       .debug_loc	00000000 
00002a44 l       .debug_loc	00000000 
00002a57 l       .debug_loc	00000000 
00002a75 l       .debug_loc	00000000 
00002a9e l       .debug_loc	00000000 
00002ad3 l       .debug_loc	00000000 
00002af1 l       .debug_loc	00000000 
00002b3e l       .debug_loc	00000000 
00002b5d l       .debug_loc	00000000 
00002b7c l       .debug_loc	00000000 
00002ba6 l       .debug_loc	00000000 
00002c1c l       .debug_loc	00000000 
00002c8a l       .debug_loc	00000000 
00002cc0 l       .debug_loc	00000000 
00002cea l       .debug_loc	00000000 
00002d58 l       .debug_loc	00000000 
00002de4 l       .debug_loc	00000000 
00002e25 l       .debug_loc	00000000 
00002e85 l       .debug_loc	00000000 
00002e98 l       .debug_loc	00000000 
00002eab l       .debug_loc	00000000 
00002ebe l       .debug_loc	00000000 
00002ed1 l       .debug_loc	00000000 
00002ee4 l       .debug_loc	00000000 
00002f0d l       .debug_loc	00000000 
00002f2c l       .debug_loc	00000000 
00002f4b l       .debug_loc	00000000 
00002f5e l       .debug_loc	00000000 
00002f87 l       .debug_loc	00000000 
00002f9a l       .debug_loc	00000000 
00002fb9 l       .debug_loc	00000000 
00003150 l       .debug_loc	00000000 
0000316f l       .debug_loc	00000000 
000031a8 l       .debug_loc	00000000 
000031d2 l       .debug_loc	00000000 
0000325c l       .debug_loc	00000000 
00003287 l       .debug_loc	00000000 
000032a5 l       .debug_loc	00000000 
000032b8 l       .debug_loc	00000000 
000032cb l       .debug_loc	00000000 
000032de l       .debug_loc	00000000 
000032f1 l       .debug_loc	00000000 
00003304 l       .debug_loc	00000000 
00003317 l       .debug_loc	00000000 
0000332a l       .debug_loc	00000000 
0000333d l       .debug_loc	00000000 
00003e2c l       .debug_line	00000000 .Lline_table_start0
00000080 l       .debug_ranges	00000000 
00000098 l       .debug_ranges	00000000 
000000b0 l       .debug_ranges	00000000 
00000774 l       .debug_frame	00000000 
20042350 l       .text	00000000 
00000000 l    df *ABS*	00000000 core_matrix.cc
20042350 l       .text	00000000 
20042350 l       .text	00000000 
20042350 l       .text	00000000 
20042352 l       .text	00000000 
20042352 l       .text	00000000 
20042358 l       .text	00000000 
2004235c l       .text	00000000 
2004235c l       .text	00000000 
2004235e l       .text	00000000 
2004235e l       .text	00000000 
20042360 l       .text	00000000 
20042360 l       .text	00000000 
20042362 l       .text	00000000 
20042362 l       .text	00000000 
20042364 l       .text	00000000 
20042366 l       .text	00000000 
20042366 l       .text	00000000 
20042368 l       .text	00000000 
20042372 l       .text	00000000 
20042374 l       .text	00000000 
20042374 l       .text	00000000 
20042376 l       .text	00000000 
20042382 l       .text	00000000 
20042382 l       .text	00000000 
20042382 l       .text	00000000 
20042382 l       .text	00000000 
20042382 l       .text	00000000 
20042382 l       .text	00000000 
20042384 l       .text	00000000 
2004238a l       .text	00000000 
2004238c l       .text	00000000 
20042390 l       .text	00000000 
20042392 l       .text	00000000 
20042394 l       .text	00000000 
20042396 l       .text	00000000 
2004239a l       .text	00000000 
2004239a l       .text	00000000 
2004239c l       .text	00000000 
200423a6 l       .text	00000000 
200423a8 l       .text	00000000 
200423a8 l       .text	00000000 
200423b0 l       .text	00000000 
200423b4 l       .text	00000000 
200423b4 l       .text	00000000 
200423b8 l       .text	00000000 
200423c0 l       .text	00000000 
200423c0 l       .text	00000000 
200423c4 l       .text	00000000 
200423c6 l       .text	00000000 
200423c6 l       .text	00000000 
200423d2 l       .text	00000000 
200423d2 l       .text	00000000 
200423dc l       .text	00000000 
200423dc l       .text	00000000 
200423e0 l       .text	00000000 
200423e2 l       .text	00000000 
200423ee l       .text	00000000 
200423ee l       .text	00000000 
200423f8 l       .text	00000000 
200423f8 l       .text	00000000 
200423fc l       .text	00000000 
200423fe l       .text	00000000 
2004240a l       .text	00000000 
2004240a l       .text	00000000 
20042414 l       .text	00000000 
20042414 l       .text	00000000 
20042418 l       .text	00000000 
2004241a l       .text	00000000 
2004241a l       .text	00000000 
2004241c l       .text	00000000 
20042420 l       .text	00000000 
20042420 l       .text	00000000 
2004242c l       .text	00000000 
2004242c l       .text	00000000 
20042434 l       .text	00000000 
2004243c l       .text	00000000 
2004243c l       .text	00000000 
2004243c l       .text	00000000 
2004243c l       .text	00000000 
2004243c l       .text	00000000 
20042440 l       .text	00000000 
2004246a l       .text	00000000 .LBB2_4
20042440 l       .text	00000000 
20042444 l       .text	00000000 .LBB2_1
20042444 l       .text	00000000 
20042448 l       .text	00000000 
20042462 l       .text	00000000 .LBB2_3
20042448 l       .text	00000000 
2004244a l       .text	00000000 .LBB2_2
2004244a l       .text	00000000 
20042452 l       .text	00000000 
2004245c l       .text	00000000 
2004245c l       .text	00000000 
2004245e l       .text	00000000 
20042460 l       .text	00000000 
20042460 l       .text	00000000 
20042462 l       .text	00000000 
20042464 l       .text	00000000 
20042466 l       .text	00000000 
2004246a l       .text	00000000 
2004246a l       .text	00000000 
2004246c l       .text	00000000 
2004246c l       .text	00000000 
2004246c l       .text	00000000 
2004246c l       .text	00000000 
2004246c l       .text	00000000 
2004246e l       .text	00000000 
2004246e l       .text	00000000 
20042470 l       .text	00000000 
20042470 l       .text	00000000 
20042474 l       .text	00000000 
200424aa l       .text	00000000 .LBB3_4
20042474 l       .text	00000000 
20042478 l       .text	00000000 .LBB3_1
20042478 l       .text	00000000 
2004247c l       .text	00000000 
200424a2 l       .text	00000000 .LBB3_3
2004247c l       .text	00000000 
20042480 l       .text	00000000 .LBB3_2
20042480 l       .text	00000000 
2004248c l       .text	00000000 
20042490 l       .text	00000000 
20042498 l       .text	00000000 
2004249a l       .text	00000000 
2004249a l       .text	00000000 
2004249c l       .text	00000000 
2004249e l       .text	00000000 
2004249e l       .text	00000000 
200424a2 l       .text	00000000 
200424a4 l       .text	00000000 
200424a6 l       .text	00000000 
200424aa l       .text	00000000 
200424aa l       .text	00000000 
200424b0 l       .text	00000000 
200424b0 l       .text	00000000 
200424b0 l       .text	00000000 
200424b0 l       .text	00000000 
200424b0 l       .text	00000000 
200424b2 l       .text	00000000 
200424b2 l       .text	00000000 
200424b8 l       .text	00000000 
200424b8 l       .text	00000000 
200424c2 l       .text	00000000 
200424f8 l       .text	00000000 .LBB4_7
200424c2 l       .text	00000000 
200424c6 l       .text	00000000 
200424c6 l       .text	00000000 .LBB4_1
200424c6 l       .text	00000000 
200424ca l       .text	00000000 
200424f0 l       .text	00000000 .LBB4_6
200424ca l       .text	00000000 
200424cc l       .text	00000000 .LBB4_2
200424cc l       .text	00000000 
200424d6 l       .text	00000000 
200424d6 l       .text	00000000 
200424e2 l       .text	00000000 .LBB4_4
200424d8 l       .text	00000000 
200424dc l       .text	00000000 
200424e6 l       .text	00000000 .LBB4_5
200424e4 l       .text	00000000 
200424e6 l       .text	00000000 
200424e8 l       .text	00000000 
200424e8 l       .text	00000000 
200424ea l       .text	00000000 
200424ee l       .text	00000000 
200424ee l       .text	00000000 
200424f0 l       .text	00000000 
200424f0 l       .text	00000000 
200424f2 l       .text	00000000 
200424f4 l       .text	00000000 
200424f8 l       .text	00000000 
200424f8 l       .text	00000000 
200424fc l       .text	00000000 
20042504 l       .text	00000000 
20042508 l       .text	00000000 
20042508 l       .text	00000000 
20042508 l       .text	00000000 
20042508 l       .text	00000000 
20042508 l       .text	00000000 
2004250a l       .text	00000000 
2004250a l       .text	00000000 
2004250e l       .text	00000000 
2004250e l       .text	00000000 
20042512 l       .text	00000000 
20042558 l       .text	00000000 .LBB5_4
20042512 l       .text	00000000 
20042516 l       .text	00000000 .LBB5_1
20042516 l       .text	00000000 
2004251a l       .text	00000000 
20042522 l       .text	00000000 
2004254c l       .text	00000000 .LBB5_3
20042522 l       .text	00000000 
20042526 l       .text	00000000 .LBB5_2
20042526 l       .text	00000000 
20042534 l       .text	00000000 
20042540 l       .text	00000000 
20042544 l       .text	00000000 
20042546 l       .text	00000000 
20042548 l       .text	00000000 
2004254c l       .text	00000000 
20042550 l       .text	00000000 
20042552 l       .text	00000000 
20042554 l       .text	00000000 
20042558 l       .text	00000000 
20042558 l       .text	00000000 
20042560 l       .text	00000000 
20042560 l       .text	00000000 
20042560 l       .text	00000000 
20042560 l       .text	00000000 
20042560 l       .text	00000000 
20042562 l       .text	00000000 
20042568 l       .text	00000000 
2004256a l       .text	00000000 
2004256e l       .text	00000000 
200425d6 l       .text	00000000 .LBB6_6
2004256e l       .text	00000000 
20042572 l       .text	00000000 .LBB6_1
20042572 l       .text	00000000 
20042576 l       .text	00000000 
2004257c l       .text	00000000 
200425cc l       .text	00000000 .LBB6_5
2004257c l       .text	00000000 
20042580 l       .text	00000000 .LBB6_2
20042580 l       .text	00000000 
20042584 l       .text	00000000 
2004258a l       .text	00000000 
20042592 l       .text	00000000 
20042592 l       .text	00000000 
20042594 l       .text	00000000 
200425c2 l       .text	00000000 .LBB6_4
20042594 l       .text	00000000 
20042598 l       .text	00000000 .LBB6_3
20042598 l       .text	00000000 
200425a8 l       .text	00000000 
200425b4 l       .text	00000000 
200425b8 l       .text	00000000 
200425ba l       .text	00000000 
200425bc l       .text	00000000 
200425be l       .text	00000000 
200425c2 l       .text	00000000 
200425c6 l       .text	00000000 
200425c8 l       .text	00000000 
200425cc l       .text	00000000 
200425cc l       .text	00000000 
200425ce l       .text	00000000 
200425d0 l       .text	00000000 
200425d0 l       .text	00000000 
200425d2 l       .text	00000000 
200425d6 l       .text	00000000 
200425d6 l       .text	00000000 
200425e0 l       .text	00000000 
200425e0 l       .text	00000000 
200425e0 l       .text	00000000 
200425e0 l       .text	00000000 
200425e0 l       .text	00000000 
200425e2 l       .text	00000000 
200425e8 l       .text	00000000 
200425ea l       .text	00000000 
200425ee l       .text	00000000 
20042666 l       .text	00000000 .LBB7_6
200425ee l       .text	00000000 
200425f2 l       .text	00000000 .LBB7_1
200425f2 l       .text	00000000 
200425f6 l       .text	00000000 
200425fc l       .text	00000000 
2004265c l       .text	00000000 .LBB7_5
200425fc l       .text	00000000 
20042600 l       .text	00000000 .LBB7_2
20042600 l       .text	00000000 
20042604 l       .text	00000000 
2004260a l       .text	00000000 
20042612 l       .text	00000000 
20042612 l       .text	00000000 
20042614 l       .text	00000000 
20042652 l       .text	00000000 .LBB7_4
20042614 l       .text	00000000 
20042618 l       .text	00000000 
20042618 l       .text	00000000 .LBB7_3
20042618 l       .text	00000000 
20042628 l       .text	00000000 
20042634 l       .text	00000000 
20042638 l       .text	00000000 
20042638 l       .text	00000000 
2004263e l       .text	00000000 
20042640 l       .text	00000000 
20042644 l       .text	00000000 
20042648 l       .text	00000000 
2004264a l       .text	00000000 
2004264a l       .text	00000000 
2004264c l       .text	00000000 
2004264e l       .text	00000000 
20042652 l       .text	00000000 
20042652 l       .text	00000000 
20042656 l       .text	00000000 
20042656 l       .text	00000000 
20042658 l       .text	00000000 
2004265c l       .text	00000000 
2004265c l       .text	00000000 
2004265e l       .text	00000000 
20042660 l       .text	00000000 
20042660 l       .text	00000000 
20042662 l       .text	00000000 
20042666 l       .text	00000000 
20042666 l       .text	00000000 
20042670 l       .text	00000000 
20042670 l       .text	00000000 
20042670 l       .text	00000000 
20042670 l       .text	00000000 
20042670 l       .text	00000000 
20042672 l       .text	00000000 
20042678 l       .text	00000000 
2004267a l       .text	00000000 
2004267c l       .text	00000000 
2004267e l       .text	00000000 
20042686 l       .text	00000000 
2004269a l       .text	00000000 .LBB8_2
20042686 l       .text	00000000 
2004268a l       .text	00000000 
2004268a l       .text	00000000 .LBB8_1
2004268a l       .text	00000000 
2004268e l       .text	00000000 
2004268e l       .text	00000000 
20042692 l       .text	00000000 
20042692 l       .text	00000000 
20042696 l       .text	00000000 
2004269a l       .text	00000000 
2004269e l       .text	00000000 
200426a2 l       .text	00000000 .LBB8_4
2004269e l       .text	00000000 
200426a0 l       .text	00000000 
200426a2 l       .text	00000000 
200426a6 l       .text	00000000 
200426a6 l       .text	00000000 
200426b0 l       .text	00000000 
200426b6 l       .text	00000000 
200426b6 l       .text	00000000 
200426ba l       .text	00000000 
200426c2 l       .text	00000000 
200426c2 l       .text	00000000 
200426c8 l       .text	00000000 
2004272c l       .text	00000000 .LBB8_9
200426c8 l       .text	00000000 
200426cc l       .text	00000000 .LBB8_5
200426cc l       .text	00000000 
200426ce l       .text	00000000 
200426ce l       .text	00000000 
200426d4 l       .text	00000000 
200426d4 l       .text	00000000 .LBB8_6
200426d4 l       .text	00000000 
2004271e l       .text	00000000 .LBB8_8
200426dc l       .text	00000000 
200426e0 l       .text	00000000 
200426e4 l       .text	00000000 
200426e4 l       .text	00000000 
200426f2 l       .text	00000000 
200426f2 l       .text	00000000 
200426f8 l       .text	00000000 
20042704 l       .text	00000000 
20042708 l       .text	00000000 
20042710 l       .text	00000000 
20042710 l       .text	00000000 
20042714 l       .text	00000000 
20042718 l       .text	00000000 
20042718 l       .text	00000000 
2004271a l       .text	00000000 
2004271e l       .text	00000000 
2004271e l       .text	00000000 
20042720 l       .text	00000000 
20042722 l       .text	00000000 
20042722 l       .text	00000000 
20042724 l       .text	00000000 
20042728 l       .text	00000000 
20042728 l       .text	00000000 
2004272c l       .text	00000000 
2004272c l       .text	00000000 
2004272e l       .text	00000000 
20042730 l       .text	00000000 
20042734 l       .text	00000000 
20042746 l       .text	00000000 
20042748 l       .text	00000000 
2004274a l       .text	00000000 
2004274c l       .text	00000000 
20042750 l       .text	00000000 
20042754 l       .text	00000000 
20042754 l       .text	00000000 
00003350 l       .debug_loc	00000000 
00003363 l       .debug_loc	00000000 
0000338c l       .debug_loc	00000000 
000033b5 l       .debug_loc	00000000 
000033c8 l       .debug_loc	00000000 
000033db l       .debug_loc	00000000 
000033ee l       .debug_loc	00000000 
00003401 l       .debug_loc	00000000 
0000341f l       .debug_loc	00000000 
00003449 l       .debug_loc	00000000 
00003467 l       .debug_loc	00000000 
00003486 l       .debug_loc	00000000 
000034b0 l       .debug_loc	00000000 
000034c4 l       .debug_loc	00000000 
000034e3 l       .debug_loc	00000000 
00003502 l       .debug_loc	00000000 
00003546 l       .debug_loc	00000000 
00003565 l       .debug_loc	00000000 
000035a9 l       .debug_loc	00000000 
000035bc l       .debug_loc	00000000 
000035e6 l       .debug_loc	00000000 
0000361b l       .debug_loc	00000000 
0000363a l       .debug_loc	00000000 
00003659 l       .debug_loc	00000000 
00003678 l       .debug_loc	00000000 
000036bc l       .debug_loc	00000000 
000036db l       .debug_loc	00000000 
000036ee l       .debug_loc	00000000 
0000370d l       .debug_loc	00000000 
00003743 l       .debug_loc	00000000 
00003756 l       .debug_loc	00000000 
00003775 l       .debug_loc	00000000 
00003794 l       .debug_loc	00000000 
000037ca l       .debug_loc	00000000 
000037dd l       .debug_loc	00000000 
000037fc l       .debug_loc	00000000 
0000380f l       .debug_loc	00000000 
0000382d l       .debug_loc	00000000 
00003840 l       .debug_loc	00000000 
00003869 l       .debug_loc	00000000 
00003888 l       .debug_loc	00000000 
000038e5 l       .debug_loc	00000000 
00003963 l       .debug_loc	00000000 
000039c9 l       .debug_loc	00000000 
000039dd l       .debug_loc	00000000 
000039f0 l       .debug_loc	00000000 
00003a03 l       .debug_loc	00000000 
0000493c l       .debug_line	00000000 .Lline_table_start0
000000c8 l       .debug_ranges	00000000 
00000884 l       .debug_frame	00000000 
20042754 l       .text	00000000 
00000000 l    df *ABS*	00000000 core_state.cc
20042754 l       .text	00000000 
20042754 l       .text	00000000 
20042754 l       .text	00000000 
20042756 l       .text	00000000 
2004275c l       .text	00000000 
2004275e l       .text	00000000 
20042760 l       .text	00000000 
20042762 l       .text	00000000 
20042764 l       .text	00000000 
20042768 l       .text	00000000 
2004276a l       .text	00000000 
2004276c l       .text	00000000 
2004276e l       .text	00000000 
2004276e l       .text	00000000 
2004277c l       .text	00000000 
2004279a l       .text	00000000 .LBB0_2
2004277c l       .text	00000000 
20042780 l       .text	00000000 .LBB0_1
20042780 l       .text	00000000 
20042788 l       .text	00000000 
2004278c l       .text	00000000 
20042790 l       .text	00000000 
20042794 l       .text	00000000 
20042796 l       .text	00000000 
2004279a l       .text	00000000 
2004279c l       .text	00000000 
200427b4 l       .text	00000000 
200427b4 l       .text	00000000 .LBB0_3
200427b4 l       .text	00000000 
200427b8 l       .text	00000000 
200427d0 l       .text	00000000 .LBB0_5
200427b8 l       .text	00000000 
200427ba l       .text	00000000 
200427ba l       .text	00000000 
200427c0 l       .text	00000000 
200427c0 l       .text	00000000 
200427c2 l       .text	00000000 
200427c6 l       .text	00000000 
200427c8 l       .text	00000000 
200427c8 l       .text	00000000 
200427ca l       .text	00000000 
200427ca l       .text	00000000 
200427d0 l       .text	00000000 
200427d0 l       .text	00000000 
200427e0 l       .text	00000000 
200427fc l       .text	00000000 .LBB0_9
200427e0 l       .text	00000000 
200427e4 l       .text	00000000 .LBB0_6
200427e4 l       .text	00000000 
200427f2 l       .text	00000000 .LBB0_8
200427e8 l       .text	00000000 
200427ec l       .text	00000000 
200427f2 l       .text	00000000 
200427f8 l       .text	00000000 
200427fc l       .text	00000000 
200427fc l       .text	00000000 
20042812 l       .text	00000000 
20042812 l       .text	00000000 .LBB0_10
20042812 l       .text	00000000 
20042816 l       .text	00000000 
20042830 l       .text	00000000 .LBB0_12
20042816 l       .text	00000000 
20042818 l       .text	00000000 
20042818 l       .text	00000000 
2004281e l       .text	00000000 
2004281e l       .text	00000000 
20042820 l       .text	00000000 
20042826 l       .text	00000000 
20042828 l       .text	00000000 
20042828 l       .text	00000000 
2004282a l       .text	00000000 
2004282a l       .text	00000000 
20042830 l       .text	00000000 
20042830 l       .text	00000000 
20042836 l       .text	00000000 
20042852 l       .text	00000000 .LBB0_16
20042836 l       .text	00000000 
2004283a l       .text	00000000 
2004283a l       .text	00000000 .LBB0_13
2004283a l       .text	00000000 
20042848 l       .text	00000000 .LBB0_15
2004283e l       .text	00000000 
20042842 l       .text	00000000 
20042848 l       .text	00000000 
2004284e l       .text	00000000 
20042852 l       .text	00000000 
20042854 l       .text	00000000 
2004286c l       .text	00000000 
2004286c l       .text	00000000 .LBB0_17
2004286c l       .text	00000000 
2004289a l       .text	00000000 .LBB0_19
20042872 l       .text	00000000 
2004287e l       .text	00000000 
20042882 l       .text	00000000 
20042884 l       .text	00000000 
20042884 l       .text	00000000 
2004288c l       .text	00000000 
2004288e l       .text	00000000 
20042894 l       .text	00000000 
20042896 l       .text	00000000 
20042898 l       .text	00000000 
2004289a l       .text	00000000 
2004289e l       .text	00000000 
200428a4 l       .text	00000000 
200428aa l       .text	00000000 
200428aa l       .text	00000000 
200428aa l       .text	00000000 
200428aa l       .text	00000000 
200428aa l       .text	00000000 
200428ac l       .text	00000000 
200428b2 l       .text	00000000 
200428b6 l       .text	00000000 
200428b6 l       .text	00000000 
200428b8 l       .text	00000000 
200428b8 l       .text	00000000 
200428c4 l       .text	00000000 
200428c4 l       .text	00000000 .LBB1_1
200428c4 l       .text	00000000 
200428cc l       .text	00000000 
20042a1c l       .text	00000000 .LBB1_39
200428d6 l       .text	00000000 
200428da l       .text	00000000 
20042a18 l       .text	00000000 .LBB1_38
200428da l       .text	00000000 
2004292c l       .text	00000000 .LBB1_15
200428de l       .text	00000000 
20042986 l       .text	00000000 .LBB1_23
200429a6 l       .text	00000000 .LBB1_25
20042944 l       .text	00000000 .LBB1_17
20042956 l       .text	00000000 .LBB1_19
2004296c l       .text	00000000 .LBB1_21
20042a12 l       .text	00000000 .LBB1_37
200428fe l       .text	00000000 
200428fe l       .text	00000000 
20042908 l       .text	00000000 
20042908 l       .text	00000000 
20042a0c l       .text	00000000 .LBB1_36
2004290e l       .text	00000000 
20042910 l       .text	00000000 
20042a04 l       .text	00000000 .LBB1_35
20042928 l       .text	00000000 
20042928 l       .text	00000000 
2004292c l       .text	00000000 
2004292c l       .text	00000000 
20042936 l       .text	00000000 
20042936 l       .text	00000000 
2004293c l       .text	00000000 
2004293c l       .text	00000000 
20042a00 l       .text	00000000 .LBB1_34
20042944 l       .text	00000000 
20042944 l       .text	00000000 
200429c0 l       .text	00000000 .LBB1_28
2004294c l       .text	00000000 
2004294c l       .text	00000000 
20042956 l       .text	00000000 
20042956 l       .text	00000000 
2004295e l       .text	00000000 
200429e2 l       .text	00000000 .LBB1_31
20042962 l       .text	00000000 
20042962 l       .text	00000000 
2004296c l       .text	00000000 
2004296c l       .text	00000000 
2004296e l       .text	00000000 
2004296e l       .text	00000000 
20042972 l       .text	00000000 
20042976 l       .text	00000000 
20042976 l       .text	00000000 
20042986 l       .text	00000000 
20042986 l       .text	00000000 
2004298e l       .text	00000000 
2004298e l       .text	00000000 
20042990 l       .text	00000000 
200429d8 l       .text	00000000 .LBB1_30
20042994 l       .text	00000000 
200429a6 l       .text	00000000 
200429a6 l       .text	00000000 
200429b6 l       .text	00000000 .LBB1_27
200429fa l       .text	00000000 .LBB1_33
200429b6 l       .text	00000000 
200429b6 l       .text	00000000 
200429c0 l       .text	00000000 
200429c0 l       .text	00000000 
200429ca l       .text	00000000 
200429ca l       .text	00000000 
200429d0 l       .text	00000000 
200429d0 l       .text	00000000 
200429d8 l       .text	00000000 
200429d8 l       .text	00000000 
200429e2 l       .text	00000000 
200429e2 l       .text	00000000 
200429ec l       .text	00000000 
200429ec l       .text	00000000 
200429f2 l       .text	00000000 
200429f2 l       .text	00000000 
200429fa l       .text	00000000 
20042a00 l       .text	00000000 
20042a00 l       .text	00000000 
20042a04 l       .text	00000000 
20042a04 l       .text	00000000 
20042a0c l       .text	00000000 
20042a0c l       .text	00000000 
20042a12 l       .text	00000000 
20042a16 l       .text	00000000 
20042a18 l       .text	00000000 
20042a1c l       .text	00000000 
20042a1c l       .text	00000000 
20042a20 l       .text	00000000 
20042a2c l       .text	00000000 
20042a2c l       .text	00000000 
20042a2c l       .text	00000000 
20042a2c l       .text	00000000 
20042a2c l       .text	00000000 
20042a2e l       .text	00000000 
20042a2e l       .text	00000000 
20042a34 l       .text	00000000 
20042a34 l       .text	00000000 
20042a3e l       .text	00000000 
20042a3e l       .text	00000000 
20042a42 l       .text	00000000 
20042a42 l       .text	00000000 
20042a4a l       .text	00000000 
20042a4a l       .text	00000000 .LBB2_19
20043388 l     O .text	00000020 intpat
20042a5a l       .text	00000000 .LBB2_20
200433a8 l     O .text	00000020 floatpat
20042a68 l       .text	00000000 .LBB2_21
200433c8 l     O .text	00000020 scipat
20042a76 l       .text	00000000 .LBB2_22
200433e8 l     O .text	00000020 errpat
20042a84 l       .text	00000000 .LBB2_1
20042a84 l       .text	00000000 
20042a84 l       .text	00000000 
20042a88 l       .text	00000000 
20042b02 l       .text	00000000 .LBB2_14
20042a8a l       .text	00000000 
20042ac6 l       .text	00000000 .LBB2_6
20042a8e l       .text	00000000 
20042a92 l       .text	00000000 
20042a94 l       .text	00000000 
20042ab2 l       .text	00000000 .LBB2_5
20042a94 l       .text	00000000 
20042a98 l       .text	00000000 .LBB2_4
20042a98 l       .text	00000000 
20042aa0 l       .text	00000000 
20042aa8 l       .text	00000000 
20042aac l       .text	00000000 
20042aae l       .text	00000000 
20042ab2 l       .text	00000000 
20042aba l       .text	00000000 
20042abe l       .text	00000000 
20042ac2 l       .text	00000000 
20042ac2 l       .text	00000000 
20042ac4 l       .text	00000000 
20042ac6 l       .text	00000000 
20042ac6 l       .text	00000000 
20042ac8 l       .text	00000000 
20042acc l       .text	00000000 
20042ae6 l       .text	00000000 .LBB2_10
20042ad2 l       .text	00000000 
20042ad4 l       .text	00000000 
20042ad4 l       .text	00000000 
20042aec l       .text	00000000 .LBB2_11
20042af0 l       .text	00000000 .LBB2_12
20042ae2 l       .text	00000000 
20042af2 l       .text	00000000 .LBB2_13
20042ae6 l       .text	00000000 
20042ae8 l       .text	00000000 
20042aea l       .text	00000000 
20042aec l       .text	00000000 
20042af2 l       .text	00000000 
20042b00 l       .text	00000000 
20042b06 l       .text	00000000 
20042b18 l       .text	00000000 .LBB2_17
20042b06 l       .text	00000000 
20042b0a l       .text	00000000 
20042b0e l       .text	00000000 .LBB2_16
20042b0e l       .text	00000000 
20042b12 l       .text	00000000 
20042b16 l       .text	00000000 
20042b18 l       .text	00000000 
20042b1c l       .text	00000000 
20042b20 l       .text	00000000 
20042b26 l       .text	00000000 
20042b26 l       .text	00000000 
00003a16 l       .debug_loc	00000000 
00003a35 l       .debug_loc	00000000 
00003a53 l       .debug_loc	00000000 
00003a72 l       .debug_loc	00000000 
00003a91 l       .debug_loc	00000000 
00003ab0 l       .debug_loc	00000000 
00003ae5 l       .debug_loc	00000000 
00003b47 l       .debug_loc	00000000 
00003b71 l       .debug_loc	00000000 
00003b84 l       .debug_loc	00000000 
00003b97 l       .debug_loc	00000000 
00003bb6 l       .debug_loc	00000000 
00003c99 l       .debug_loc	00000000 
00003cac l       .debug_loc	00000000 
00003cbf l       .debug_loc	00000000 
00003cf4 l       .debug_loc	00000000 
00003d12 l       .debug_loc	00000000 
00003d30 l       .debug_loc	00000000 
00003d65 l       .debug_loc	00000000 
00003db2 l       .debug_loc	00000000 
00003de7 l       .debug_loc	00000000 
00004fed l       .debug_line	00000000 .Lline_table_start0
000000e0 l       .debug_ranges	00000000 
000000f8 l       .debug_ranges	00000000 
00000980 l       .debug_frame	00000000 
20042b26 l       .text	00000000 
00000000 l    df *ABS*	00000000 core_util.cc
20042b28 l       .text	00000000 
20042b28 l       .text	00000000 
20042b28 l       .text	00000000 
20042b34 l       .text	00000000 .LBB0_2
20042b2e l       .text	00000000 
20042b32 l       .text	00000000 
20042b3e l       .text	00000000 .LBB0_4
20042b38 l       .text	00000000 
20042b3c l       .text	00000000 
20042b3e l       .text	00000000 
20042b3e l       .text	00000000 
20042b40 l       .text	00000000 
20042b42 l       .text	00000000 
20042b42 l       .text	00000000 
20042b42 l       .text	00000000 
20042b42 l       .text	00000000 
20042b42 l       .text	00000000 
20042b4a l       .text	00000000 
20042b4a l       .text	00000000 .LBB1_1
20042b4a l       .text	00000000 
20042b6a l       .text	00000000 .LBB1_5
20042b4e l       .text	00000000 
20042b52 l       .text	00000000 
20042b58 l       .text	00000000 
20042b58 l       .text	00000000 
20042b60 l       .text	00000000 .LBB1_4
20042b5c l       .text	00000000 
20042b5e l       .text	00000000 
20042b66 l       .text	00000000 
20042b66 l       .text	00000000 
20042b68 l       .text	00000000 
20042b6a l       .text	00000000 
20042b6c l       .text	00000000 
20042b6e l       .text	00000000 
20042b72 l       .text	00000000 
20042b72 l       .text	00000000 
20042b72 l       .text	00000000 
20042b72 l       .text	00000000 
20042b72 l       .text	00000000 
20042b74 l       .text	00000000 
20042b78 l       .text	00000000 
20042b7a l       .text	00000000 
20042b7a l       .text	00000000 
20042b80 l       .text	00000000 
20042b80 l       .text	00000000 
20042b84 l       .text	00000000 
20042b86 l       .text	00000000 
20042b8c l       .text	00000000 
20042b92 l       .text	00000000 
20042b92 l       .text	00000000 
20042b92 l       .text	00000000 
20042b92 l       .text	00000000 
20042b92 l       .text	00000000 
20042b92 l       .text	00000000 
20042b94 l       .text	00000000 
20042b98 l       .text	00000000 
20042b9a l       .text	00000000 
20042b9e l       .text	00000000 
20042b9e l       .text	00000000 
20042ba0 l       .text	00000000 
20042ba2 l       .text	00000000 
20042ba2 l       .text	00000000 
20042ba6 l       .text	00000000 
20042ba6 l       .text	00000000 
20042ba8 l       .text	00000000 
20042ba8 l       .text	00000000 
20042bae l       .text	00000000 
20042bb4 l       .text	00000000 
20042bb4 l       .text	00000000 
20042bb4 l       .text	00000000 
20042bb4 l       .text	00000000 
20042bb4 l       .text	00000000 
20042bb4 l       .text	00000000 
20042bb8 l       .text	00000000 
20042bba l       .text	00000000 
20042bbc l       .text	00000000 
20042bbc l       .text	00000000 
20042bbc l       .text	00000000 
20042bbc l       .text	00000000 
20042bbc l       .text	00000000 
20042bbc l       .text	00000000 
20042bbc l       .text	00000000 
20042bc0 l       .text	00000000 
20042bc0 l       .text	00000000 
00003dfa l       .debug_loc	00000000 
00003e0d l       .debug_loc	00000000 
00003e20 l       .debug_loc	00000000 
00003e3e l       .debug_loc	00000000 
00003e5c l       .debug_loc	00000000 
00003e7b l       .debug_loc	00000000 
00003e9a l       .debug_loc	00000000 
00003eae l       .debug_loc	00000000 
00003ecc l       .debug_loc	00000000 
00003edf l       .debug_loc	00000000 
00003efd l       .debug_loc	00000000 
00003f10 l       .debug_loc	00000000 
00003f23 l       .debug_loc	00000000 
00005505 l       .debug_line	00000000 .Lline_table_start0
00000110 l       .debug_ranges	00000000 
000009e8 l       .debug_frame	00000000 
20042bc0 l       .text	00000000 
00000000 l    df *ABS*	00000000 core_portme.cc
20042bc0 l       .text	00000000 
20042bc0 l       .text	00000000 
20042bc0 l       .text	00000000 
20042bc2 l       .text	00000000 
20042bc4 l       .text	00000000 
20042bcc l       .text	00000000 
20042bd4 l       .text	00000000 
20042bd4 l       .text	00000000 
20042bd6 l       .text	00000000 
20042bd6 l       .text	00000000 
20042bdc l       .text	00000000 
20042bdc l       .text	00000000 
20042bdc l       .text	00000000 
20042bdc l       .text	00000000 
20042bdc l       .text	00000000 
20042bde l       .text	00000000 
20042bde l       .text	00000000 
20042be0 l       .text	00000000 
20042be2 l       .text	00000000 
200f0b0c l     O .data	00000004 start_time_val
20042bec l       .text	00000000 
20042bf2 l       .text	00000000 
20042bf2 l       .text	00000000 
20042bf2 l       .text	00000000 
20042bf2 l       .text	00000000 
20042bf2 l       .text	00000000 
20042bf4 l       .text	00000000 
20042bf4 l       .text	00000000 
20042bf6 l       .text	00000000 
20042bf8 l       .text	00000000 
200f0b10 l     O .data	00000004 stop_time_val
20042c02 l       .text	00000000 
20042c08 l       .text	00000000 
20042c08 l       .text	00000000 
20042c08 l       .text	00000000 
20042c08 l       .text	00000000 
20042c08 l       .text	00000000 
20042c08 l       .text	00000000 
20042c1e l       .text	00000000 
20042c1e l       .text	00000000 
20042c20 l       .text	00000000 
20042c20 l       .text	00000000 
20042c20 l       .text	00000000 
20042c20 l       .text	00000000 
20042c20 l       .text	00000000 
20042c28 l       .text	00000000 
20042c2c l       .text	00000000 
20042c2c l       .text	00000000 
20042c2e l       .text	00000000 
20042c2e l       .text	00000000 
20042c2e l       .text	00000000 
20042c2e l       .text	00000000 
20042c2e l       .text	00000000 
20042c30 l       .text	00000000 
20042c30 l       .text	00000000 
20042c34 l       .text	00000000 
20042c36 l       .text	00000000 
20042c36 l       .text	00000000 
20042c36 l       .text	00000000 
20042c36 l       .text	00000000 
20042c36 l       .text	00000000 
20042c36 l       .text	00000000 
20042c3a l       .text	00000000 
20042c3c l       .text	00000000 
20042c3c l       .text	00000000 
00003f36 l       .debug_loc	00000000 
00003f49 l       .debug_loc	00000000 
00003f5c l       .debug_loc	00000000 
00003f6f l       .debug_loc	00000000 
00003f82 l       .debug_loc	00000000 
00003f95 l       .debug_loc	00000000 
00005705 l       .debug_line	00000000 .Lline_table_start0
00000a6c l       .debug_frame	00000000 
20042c3c l       .text	00000000 
00000000 l    df *ABS*	00000000 UART_MSFT_16550.cc
20042c3c l       .text	00000000 
20042c3c l       .text	00000000 
20042c3c l       .text	00000000 
20042c3c l       .text	00000000 
20042c3e l       .text	00000000 
20042c3e l       .text	00000000 
20042c3e l       .text	00000000 
20042c3e l       .text	00000000 
20042c3e l       .text	00000000 
20042c3e l       .text	00000000 
20042c40 l       .text	00000000 
20042c40 l       .text	00000000 
20042c40 l       .text	00000000 
20042c40 l       .text	00000000 
200f0b18 l     O .data	00000008 UartBasePtr
20042c40 l       .text	00000000 
20042c40 l       .text	00000000 
20042c4a l       .text	00000000 .LBB2_1
20042c4a l       .text	00000000 
20042c4c l       .text	00000000 
20042c50 l       .text	00000000 
20042c52 l       .text	00000000 
20042c54 l       .text	00000000 
20042c58 l       .text	00000000 
20042c5a l       .text	00000000 
20042c5c l       .text	00000000 
20042c5c l       .text	00000000 
20042c5c l       .text	00000000 
20042c5c l       .text	00000000 
20042c5c l       .text	00000000 
20042c5e l       .text	00000000 
20042c66 l       .text	00000000 
20042c6c l       .text	00000000 .LBB3_2
20042c66 l       .text	00000000 
20042c6a l       .text	00000000 
20042c70 l       .text	00000000 
20042c8c l       .text	00000000 .LBB3_5
20042c70 l       .text	00000000 
20042c74 l       .text	00000000 .LBB3_3
20042c74 l       .text	00000000 
20042c76 l       .text	00000000 
20042c7a l       .text	00000000 
20042c7c l       .text	00000000 
20042c84 l       .text	00000000 
20042c86 l       .text	00000000 
20042c88 l       .text	00000000 
20042c8c l       .text	00000000 
20042c8c l       .text	00000000 
20042c8e l       .text	00000000 
20042c8e l       .text	00000000 
20042c8e l       .text	00000000 
20042c8e l       .text	00000000 
20042c8e l       .text	00000000 
20042c90 l       .text	00000000 
20042c9e l       .text	00000000 .LBB4_2
20042c98 l       .text	00000000 
20042c9c l       .text	00000000 
20042c9e l       .text	00000000 
20042ca2 l       .text	00000000 
20042cbc l       .text	00000000 .LBB4_5
20042ca2 l       .text	00000000 
20042ca6 l       .text	00000000 .LBB4_3
20042ca6 l       .text	00000000 
20042caa l       .text	00000000 
20042cac l       .text	00000000 
20042cae l       .text	00000000 
20042cb2 l       .text	00000000 
20042cb6 l       .text	00000000 
20042cb8 l       .text	00000000 
20042cbc l       .text	00000000 
20042cbe l       .text	00000000 
20042cbe l       .text	00000000 
20042cbe l       .text	00000000 
20042cbe l       .text	00000000 
20042cbe l       .text	00000000 
20042cc0 l       .text	00000000 
20042cc0 l       .text	00000000 
20042cc2 l       .text	00000000 
20042cce l       .text	00000000 .LBB5_1
20042cce l       .text	00000000 
20042cd2 l       .text	00000000 
20042cd6 l       .text	00000000 
20042cda l       .text	00000000 
20042cde l       .text	00000000 
20042ce2 l       .text	00000000 
20042ce6 l       .text	00000000 
20042ce8 l       .text	00000000 
20042cf0 l       .text	00000000 
20042cf4 l       .text	00000000 
20042d02 l       .text	00000000 
20042d06 l       .text	00000000 
20042d0e l       .text	00000000 
20042d12 l       .text	00000000 
20042d18 l       .text	00000000 
20042d1a l       .text	00000000 
20042d1c l       .text	00000000 
20042d1e l       .text	00000000 
20042d1e l       .text	00000000 
20042d28 l       .text	00000000 
20042d28 l       .text	00000000 
20042d2a l       .text	00000000 
20042d2e l       .text	00000000 
20042d2e l       .text	00000000 
20042d32 l       .text	00000000 
20042d32 l       .text	00000000 
20042d34 l       .text	00000000 
20042d34 l       .text	00000000 
20042d36 l       .text	00000000 
20042d36 l       .text	00000000 
20042d38 l       .text	00000000 
20042d38 l       .text	00000000 
20042d3c l       .text	00000000 
20042d3c l       .text	00000000 
20042d3e l       .text	00000000 
20042d42 l       .text	00000000 
20042d46 l       .text	00000000 
20042d48 l       .text	00000000 
20042d50 l       .text	00000000 
20042d52 l       .text	00000000 
20042d54 l       .text	00000000 
20042d56 l       .text	00000000 
20042d5e l       .text	00000000 
20042d60 l       .text	00000000 
20042d66 l       .text	00000000 
20042d66 l       .text	00000000 
20042d6e l       .text	00000000 
20042d6e l       .text	00000000 
20042d72 l       .text	00000000 
20042d76 l       .text	00000000 
20042d76 l       .text	00000000 
20042d7c l       .text	00000000 
20042d7c l       .text	00000000 
00003fa8 l       .debug_loc	00000000 
00003fbb l       .debug_loc	00000000 
00003fd9 l       .debug_loc	00000000 
00003ff9 l       .debug_loc	00000000 
0000400c l       .debug_loc	00000000 
0000402a l       .debug_loc	00000000 
0000404a l       .debug_loc	00000000 
0000405d l       .debug_loc	00000000 
00004070 l       .debug_loc	00000000 
00004083 l       .debug_loc	00000000 
00004096 l       .debug_loc	00000000 
000040a9 l       .debug_loc	00000000 
000040bc l       .debug_loc	00000000 
000040cf l       .debug_loc	00000000 
000040ed l       .debug_loc	00000000 
00004100 l       .debug_loc	00000000 
00005928 l       .debug_line	00000000 .Lline_table_start0
00000b08 l       .debug_frame	00000000 
20042d7c l       .text	00000000 
20040080 g     F .init	00000108 __start
200f7000 g       *ABS*	00000000 _stack_end
200f8000 g       *ABS*	00000000 _stack_start
200f0000 g       .data	00000000 _cgp_start
200f0c00 g       .data	00000000 _cgp_end
20040320 g       .text	00000000 _pcc_start
20043420 g       .text	00000000 _pcc_end
20041590 g     F .text	00000136 cstart
200f0c00 g       .data	00000000 _heap_start
200f7000 g       *ABS*	00000000 _heap_end
20040188 g       __cap_relocs	00000000 __cap_relocs
20040304 g       __cap_relocs	00000000 __cap_relocs_end
20040320 g     F .text	00000014 isctype(int, int)
200f0000 g     O .data	00000080 ctype_table
20040334 g     F .text	0000004e realloc(void*, unsigned int)
200404e4 g     F .text	000000c8 free(void*)
2004064a g     F .text	000000ac malloc(unsigned int)
20041060 g     F .text	0000001c memcpy(void*, void const*, unsigned int)
20040384 g     F .text	0000015e strtoul(char const*, char**, int)
200f00b0 g     O .data	00000008 HeapCap
200405ac g     F .text	00000024 setMallocDescriptor(malloc_s*, __uintcap_t, __uintcap_t, unsigned int)
200405d0 g     F .text	0000001c get_ptr(unsigned long, unsigned int)
200f02c0 g     O .data	00000008 globalRoot
200405ec g     F .text	0000005e malloc_init(void*, unsigned int)
200f0080 g     O .data	00000001 MallocInit
200406f8 g     F .text	00000002 operator delete(void*)
200406fa g     F .text	00000002 operator delete(void*, unsigned int)
200406fc g     F .text	00000016 shift_lfsr(unsigned int*, unsigned int)
20040712 g     F .text	0000005e rand()
200f0084 g     O .data	00000004 lfsr32
200f0088 g     O .data	00000004 lfsr31
20040770 g     F .text	00000018 srand(unsigned int)
20040788 g     F .text	00000024 random_range(unsigned int, unsigned int)
200407ac g     F .text	00000030 random_fill(unsigned int*, unsigned int)
200407dc g     F .text	00000002 operator new(unsigned int)
200407e0 g     F .text	00000030 calloc(unsigned int, unsigned int)
200410f8 g     F .text	00000014 memset(void*, int, unsigned int)
20040810 g     F .text	00000190 strtol(char const*, char**, int)
200409a0 g     F .text	00000378 pvsprintf(char*, char const*, void*)
20040fb0 g     F .text	00000014 strlen(char const*)
20040da0 g     F .text	00000062 cfprintf(unsigned int**, char const*, ...)
20042c5c g     F .text	00000032 _write(int, char const*, int)
20040e02 g     F .text	00000048 pfprintf(unsigned int**, char const*, ...)
20040e4a g     F .text	0000001a psprintf(char*, char const*, ...)
20040e64 g     F .text	0000003c print_test_header(char const*)
20040ea0 g     F .text	0000004a print_array(unsigned int*, char const*, unsigned int)
20040eec g     F .text	0000001e fputc(int, unsigned int**)
20040f0c g     F .text	00000026 fputs(char const*, unsigned int**)
20040f34 g     F .text	0000005a fgets(char*, int, unsigned int**)
20042c8e g     F .text	00000030 _read(int, char*, int)
20040f90 g     F .text	00000020 fgetc(unsigned int**)
20040fc4 g     F .text	00000026 strcmp(char const*, char const*)
20040fec g     F .text	00000032 memset_rand(void*, unsigned int)
20041020 g     F .text	00000024 memcmp(void const*, void const*, unsigned int)
20041044 g     F .text	0000001c strcpy(char*, char const*)
2004107c g     F .text	00000022 wordcmp(void const*, void const*, int)
200410a0 g     F .text	0000001c wordcpy(void*, void const*, int)
200410bc g     F .text	0000003a strncpy(char*, char const*, unsigned int)
2004110c g     F .text	00000012 wordset(void*, unsigned int, unsigned int)
20041120 g     F .text	00000022 memset_unique(void*, unsigned int)
20041144 g     F .text	0000002c register_handler(unsigned int, void (*)())
200f00e0 g     O .data	00000180 irq_array
200f0260 g     O .data	00000030 irq_vector_exists
20041170 g     F .text	0000002c unregister_handler(unsigned int)
2004119c g     F .text	00000056 dispatch_irqs(unsigned int)
200414dc g     F .text	00000012 _exit(int)
200411f4 g     F .text	00000228 GenerateECC(unsigned long long, ENCRYPTION_TYPE_E)
20041468 g     F .text	00000056 ConCatAddrData(unsigned int, unsigned int, unsigned int, ENCRYPTION_TYPE_E)
200414be g     F .text	0000001c ConstructECC(unsigned int, unsigned int, unsigned int, ENCRYPTION_TYPE_E)
200414dc g     F .text	00000000 __cxa_pure_virtual
200414ee g     F .text	00000010 from_root(unsigned int)
200414fe g     F .text	0000000e cap_build(void*, unsigned int, unsigned int, unsigned int)
2004150c g     F .text	00000084 populate_caprelocs(CapReloc*, unsigned int)
200f02c8 g     O .data	00000008 pccRoot
200f0000 g       .data	00000000 _data_start
200f00b0 g       .data	00000000 _bss_start
200f00b0 g       .data	00000000 _data_end
200f0b20 g       .data	00000000 _bss_end
200f02a0 g     O .data	00000008 simReg
200f0298 g     O .data	00000008 tmrReg
200f0290 g     O .data	00000008 uartReg
200f02a8 g     O .data	00000008 rngReg
200f02b0 g     O .data	00000008 cfgReg
200f02b8 g     O .data	00000008 memRands
20042cbe g     F .text	000000be uart_init(void*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)
20041730 g     F .text	0000068a main
20040000 g     O .init	00000080 mtvecArr
200416c8 g     F .text	00000068 iterate(void*)
20041ed2 g     F .text	00000172 core_bench_list(RESULTS_S*, short)
20042b72 g     F .text	00000020 crcu16(unsigned short, unsigned short)
20042c2e g     F .text	00000008 portable_init(CORE_PORTABLE_S*, int*, char**)
20042b28 g     F .text	0000001a get_seed_32(int)
200f0300 g     O .data	000007d0 static_memblk
200421c0 g     F .text	00000138 core_list_init(unsigned int, list_head_s*, short)
20042670 g     F .text	000000e4 core_init_matrix(unsigned int, void*, int, MAT_PARAMS_S*)
20042a2c g     F .text	000000fa core_init_state(unsigned int, short, unsigned char*)
20042bdc g     F .text	00000016 start_time()
20042bf2 g     F .text	00000016 stop_time()
20042c08 g     F .text	00000018 get_time()
20042c20 g     F .text	0000000e time_in_secs(unsigned int)
20042bb4 g     F .text	00000008 crc16(short, unsigned short)
20042bbc g     F .text	00000004 check_data_types()
20042c36 g     F .text	00000006 portable_fini(CORE_PORTABLE_S*)
200f0090 g     O .data	00000018 mem_name
20041dbc g     F .text	000000ac calc_func(short*, RESULTS_S*)
20042754 g     F .text	00000156 core_bench_state(unsigned int, unsigned char*, short, short, short, unsigned short)
20042350 g     F .text	00000032 core_bench_matrix(MAT_PARAMS_S*, short, unsigned short)
20041e68 g     F .text	0000003a cmp_complex(list_data_s*, list_data_s*, RESULTS_S*)
20041ea2 g     F .text	0000001e cmp_idx(list_data_s*, list_data_s*, RESULTS_S*)
20041ec0 g     F .text	00000012 copy_info(list_data_s*, list_data_s*)
20042044 g     F .text	00000038 core_list_find(list_head_s*, list_data_s*)
2004207c g     F .text	0000001a core_list_reverse(list_head_s*)
20042096 g     F .text	00000102 core_list_mergesort(list_head_s*, int (*)(list_data_s*, list_data_s*, RESULTS_S*), RESULTS_S*)
20042198 g     F .text	00000018 core_list_remove(list_head_s*)
200421b0 g     F .text	00000010 core_list_undo_remove(list_head_s*, list_head_s*)
200422f8 g     F .text	00000058 core_list_insert_new(list_head_s*, list_data_s*, list_head_s**, list_data_s**, list_head_s*, list_data_s*)
20042382 g     F .text	000000ba matrix_test(unsigned int, int*, short*, short*, short)
2004243c g     F .text	00000030 matrix_add_const(unsigned int, short*, short)
2004246c g     F .text	00000044 matrix_mul_const(unsigned int, int*, short*, short)
200424b0 g     F .text	00000058 matrix_sum(unsigned int, int*, short)
20042508 g     F .text	00000058 matrix_mul_vect(unsigned int, int*, short*, short*)
20042560 g     F .text	00000080 matrix_mul_matrix(unsigned int, int*, short*, short*)
200425e0 g     F .text	00000090 matrix_mul_matrix_bitextract(unsigned int, int*, short*, short*)
200428aa g     F .text	00000182 core_state_transition(unsigned char**, unsigned int*)
20042b92 g     F .text	00000022 crcu32(unsigned int, unsigned short)
20042b42 g     F .text	00000030 crcu8(unsigned char, unsigned short)
20042bc0 g     F .text	0000001c barebones_clock()
200f0b00 g     O .data	00000004 seed1_volatile
200f0b04 g     O .data	00000004 seed2_volatile
200f00a8 g     O .data	00000004 seed3_volatile
200f00ac g     O .data	00000004 seed4_volatile
200f0b08 g     O .data	00000004 seed5_volatile
20042c3c g     F .text	00000002 getLock(unsigned long*)
20042c3e g     F .text	00000002 releaseLock(unsigned long*)
20042c40 g     F .text	0000001c _flush(int)
00000008 g       *ABS*	00000000 CAPSIZE
00001000 g       *ABS*	00000000 __stack_size
20040320 g       .text	00000000 _code_start
20042d7c g       .text	00000000 _code_end
20042d7c g       .text	00000000 _rodata_start
20043408 g       .text	00000000 _rodata_end
CAPABILITY RELOCATION RECORDS:
0x20043388	Base: <Unnamed symbol> (0x20042deb)	Offset: 0x00000000	Length: 0x00000005	Permissions: 0x0000
0x20043390	Base: <Unnamed symbol> (0x20042e44)	Offset: 0x00000000	Length: 0x00000005	Permissions: 0x0000
0x20043398	Base: <Unnamed symbol> (0x20042d85)	Offset: 0x00000000	Length: 0x00000005	Permissions: 0x0000
0x200433a0	Base: <Unnamed symbol> (0x20042de6)	Offset: 0x00000000	Length: 0x00000005	Permissions: 0x0000
0x200433a8	Base: <Unnamed symbol> (0x20042df0)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x200433b0	Base: <Unnamed symbol> (0x20042d8a)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x200433b8	Base: <Unnamed symbol> (0x20042e5b)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x200433c0	Base: <Unnamed symbol> (0x20042e52)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x200433c8	Base: <Unnamed symbol> (0x20042d93)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x200433d0	Base: <Unnamed symbol> (0x20042d9c)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x200433d8	Base: <Unnamed symbol> (0x20042e49)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x200433e0	Base: <Unnamed symbol> (0x20042da5)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x200433e8	Base: <Unnamed symbol> (0x20042ddd)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x200433f0	Base: <Unnamed symbol> (0x20042e64)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x200433f8	Base: <Unnamed symbol> (0x20042e80)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x20043400	Base:  (0x20042d7c)	Offset: 0x00000000	Length: 0x00000009	Permissions: 0x0000
0x200f0090	Base: <Unnamed symbol> (0x20042f98)	Offset: 0x00000000	Length: 0x00000007	Permissions: 0x0000
0x200f0098	Base: <Unnamed symbol> (0x20043328)	Offset: 0x00000000	Length: 0x00000005	Permissions: 0x0000
0x200f00a0	Base: <Unnamed symbol> (0x20042fa0)	Offset: 0x00000000	Length: 0x00000006	Permissions: 0x0000


Disassembly of section .init:

20040000 <mtvecArr>:
20040000: 00 00 00 00 00 00 00 00         ........
20040008: 00 00 00 00 00 00 00 00         ........
20040010: 00 00 00 00 00 00 00 00         ........
20040018: 00 00 00 00 00 00 00 00         ........
20040020: 00 00 00 00 00 00 00 00         ........
20040028: 00 00 00 00 00 00 00 00         ........
20040030: 00 00 00 00 00 00 00 00         ........
20040038: 00 00 00 00 00 00 00 00         ........
20040040: 00 00 00 00 00 00 00 00         ........
20040048: 00 00 00 00 00 00 00 00         ........
20040050: 00 00 00 00 00 00 00 00         ........
20040058: 00 00 00 00 00 00 00 00         ........
20040060: 00 00 00 00 00 00 00 00         ........
20040068: 00 00 00 00 00 00 00 00         ........
20040070: 00 00 00 00 00 00 00 00         ........
20040078: 00 00 00 00 00 00 00 00         ........

20040080 <__start>:
; 	ZERO c1
20040080: db 00 a0 fe  	cmove	cra, cnull
; 	ZERO c2
20040084: 5b 01 a0 fe  	cmove	csp, cnull
; 	ZERO c3
20040088: db 01 a0 fe  	cmove	cgp, cnull
; 	ZERO c4
2004008c: 5b 02 a0 fe  	cmove	ctp, cnull
; 	ZERO c5
20040090: db 02 a0 fe  	cmove	ct0, cnull
; 	ZERO c6
20040094: 5b 03 a0 fe  	cmove	ct1, cnull
; 	ZERO c7
20040098: db 03 a0 fe  	cmove	ct2, cnull
; 	ZERO c8
2004009c: 5b 04 a0 fe  	cmove	cs0, cnull
; 	ZERO c9
200400a0: db 04 a0 fe  	cmove	cs1, cnull
; 	ZERO c10
200400a4: 5b 05 a0 fe  	cmove	ca0, cnull
; 	ZERO c11
200400a8: db 05 a0 fe  	cmove	ca1, cnull
; 	ZERO c12
200400ac: 5b 06 a0 fe  	cmove	ca2, cnull
; 	ZERO c13
200400b0: db 06 a0 fe  	cmove	ca3, cnull
; 	ZERO c14
200400b4: 5b 07 a0 fe  	cmove	ca4, cnull
; 	ZERO c15
200400b8: db 07 a0 fe  	cmove	ca5, cnull
; 	cspecialr		cs0, mtdc
200400bc: 5b 04 d0 03  	cspecialr	cs0, mtdc
; 	li				a1, ~CHERI_PERM_GLOBAL
200400c0: f9 55        	addi	a1, zero, -2
; 	candperm		ca0, cs0, a1
200400c2: 5b 05 b4 1a  	candperm	ca0, cs0, a1
; 	LA_ABS			a1, _stack_end
200400c6: b7 75 0f 20  	lui	a1, 131319
200400ca: 93 85 05 00  	mv	a1, a1
; 	LA_ABS			a2, _stack_start
200400ce: 37 86 0f 20  	lui	a2, 131320
200400d2: 13 06 06 00  	mv	a2, a2
; 	sub				a2, a2, a1
200400d6: 0d 8e        	sub	a2, a2, a1
; 	csetaddr		ca0, ca0, a1
200400d8: 5b 05 b5 20  	csetaddr	ca0, ca0, a1
; 	csetbounds		ca0, ca0, a2
200400dc: 5b 05 c5 10  	csetbounds	ca0, ca0, a2
; 	cincoffset		csp, ca0, a2
200400e0: 5b 01 c5 22  	cincoffset	csp, ca0, a2
; 	li				a1, ~0
200400e4: fd 55        	addi	a1, zero, -1
; 	candperm		ca0, cs0, a1
200400e6: 5b 05 b4 1a  	candperm	ca0, cs0, a1
; 	LA_ABS			a1, _cgp_start
200400ea: b7 05 0f 20  	lui	a1, 131312
200400ee: 93 85 05 00  	mv	a1, a1
; 	LA_ABS			a2, _cgp_end
200400f2: 37 16 0f 20  	lui	a2, 131313
200400f6: 13 06 06 c0  	addi	a2, a2, -1024
; 	sub				a2, a2, a1
200400fa: 0d 8e        	sub	a2, a2, a1
; 	csetaddr		ca0, ca0, a1
200400fc: 5b 05 b5 20  	csetaddr	ca0, ca0, a1
; 	csetbounds		ca0, ca0, a2
20040100: 5b 05 c5 10  	csetbounds	ca0, ca0, a2
; 	srli			a2, a2, 1
20040104: 05 82        	srli	a2, a2, 1
; 	cincoffset		cgp, ca0, a2
20040106: db 01 c5 22  	cincoffset	cgp, ca0, a2
; 	auipcc			cs1, 0
2004010a: 97 04 00 00  	auipcc	cs1, 0
; 	LA_ABS			a1, _pcc_start
2004010e: b7 05 04 20  	lui	a1, 131136
20040112: 93 85 05 32  	addi	a1, a1, 800
; 	LA_ABS			a2, _pcc_end
20040116: 37 36 04 20  	lui	a2, 131139
2004011a: 13 06 06 42  	addi	a2, a2, 1056
; 	sub				a2, a2, a1
2004011e: 0d 8e        	sub	a2, a2, a1
; 	csetaddr		ca0, cs1, a1
20040120: 5b 85 b4 20  	csetaddr	ca0, cs1, a1
; 	csetbounds		ca0, ca0, a2
20040124: 5b 05 c5 10  	csetbounds	ca0, ca0, a2
; 	LA_ABS			a1, cstart
20040128: b7 15 04 20  	lui	a1, 131137
2004012c: 93 85 05 59  	addi	a1, a1, 1424
; 	csetaddr		cra, ca0, a1
20040130: db 00 b5 20  	csetaddr	cra, ca0, a1
; 	cmove			ca0, cs1
20040134: 5b 85 a4 fe  	cmove	ca0, cs1
; 	cmove			ca1, cs0
20040138: db 05 a4 fe  	cmove	ca1, cs0
; 	LA_ABS			a3, _heap_start
2004013c: b7 16 0f 20  	lui	a3, 131313
20040140: 93 86 06 c0  	addi	a3, a3, -1024
; 	csetaddr		ca2, ca1, a3
20040144: 5b 86 d5 20  	csetaddr	ca2, ca1, a3
; 	LA_ABS			a4, _heap_end
20040148: 37 77 0f 20  	lui	a4, 131319
2004014c: 13 07 07 00  	mv	a4, a4
; 	sub				a3, a4, a3
20040150: b3 06 d7 40  	sub	a3, a4, a3
; 	LA_ABS			a5, __cap_relocs
20040154: b7 07 04 20  	lui	a5, 131136
20040158: 93 87 87 18  	addi	a5, a5, 392
; 	csetaddr		ca4, ca1, a5
2004015c: 5b 87 f5 20  	csetaddr	ca4, ca1, a5
; 	LA_ABS			t0, __cap_relocs_end
20040160: b7 02 04 20  	lui	t0, 131136
20040164: 93 82 42 30  	addi	t0, t0, 772
; 	sub				a5, t0, a5
20040168: b3 87 f2 40  	sub	a5, t0, a5
; 	li				t0, 20
2004016c: d1 42        	addi	t0, zero, 20
; 	divu			a5, a5, t0
2004016e: b3 d7 57 02  	divu	a5, a5, t0
;   li a0,  0x88                        # set mstatus.mie=1, mstatus.mpie=1
20040172: 13 05 80 08  	addi	a0, zero, 136
;   csrs mstatus, a0 
20040176: 73 20 05 30  	csrs	mstatus, a0
;   li a0,  0x1800                      # set mstatus.mpp=00
2004017a: 09 65        	lui	a0, 2
2004017c: 13 05 05 80  	addi	a0, a0, -2048
;   csrc mstatus, a0 
20040180: 73 30 05 30  	csrc	mstatus, a0
; 	cjalr			cra
20040184: 82 90        	cjalr	cra
; 	unimp
20040186: 00 00        	unimp	

Disassembly of section .text:

20040320 <_pcc_start>:
; 	return ctype_table[c] & type;
20040320: 5b 96 01 a0  	cincoffset	ca2, cgp, -1536
20040324: 5b 26 06 08  	csetbounds	ca2, ca2, 128
20040328: 5b 05 a6 22  	cincoffset	ca0, ca2, a0
2004032c: 03 45 05 00  	clbu	a0, 0(ca0)
20040330: 6d 8d        	and	a0, a0, a1
20040332: 82 80        	cret

20040334 <realloc(void*, unsigned int)>:
; {
20040334: 3d 71        	cincoffset	csp, csp, -32
20040336: 06 ec        	csc	cra, 24(csp)
20040338: 22 e8        	csc	cs0, 16(csp)
2004033a: 26 e4        	csc	cs1, 8(csp)
2004033c: ae 84        	mv	s1, a1
2004033e: 5b 04 a5 fe  	cmove	cs0, ca0
; 	if(size == 0) {
20040342: 81 e5        	bnez	a1, 0x2004034a <.LBB0_2>
; 		free(ptr);
20040344: 5b 05 a4 fe  	cmove	ca0, cs0
20040348: 71 2a        	cjal	0x200404e4 <free(void*)>

2004034a <.LBB0_2>:
; 	newptr = malloc(size);
2004034a: 26 85        	mv	a0, s1
2004034c: fd 2c        	cjal	0x2004064a <malloc(unsigned int)>
; 	if(newptr == NULL) {
2004034e: 13 36 15 00  	seqz	a2, a0
20040352: 93 35 14 00  	seqz	a1, s0
20040356: 4d 8e        	or	a2, a2, a1
20040358: 05 e2        	bnez	a2, 0x20040378 <.LBB0_6>
; 	if(size < pm->size) {
2004035a: 03 26 c4 ff  	clw	a2, -4(cs0)
2004035e: 63 e3 c4 00  	bltu	s1, a2, 0x20040364 <.LBB0_5>
20040362: b2 84        	mv	s1, a2

20040364 <.LBB0_5>:
; 	memcpy(newptr, ptr, csize);
20040364: db 05 a4 fe  	cmove	ca1, cs0
20040368: 2a e0        	csc	ca0, 0(csp)
2004036a: 26 86        	mv	a2, s1
2004036c: ef 00 50 4f  	cjal	0x20041060 <memcpy(void*, void const*, unsigned int)>
; 	free(ptr);
20040370: 5b 05 a4 fe  	cmove	ca0, cs0
20040374: 85 2a        	cjal	0x200404e4 <free(void*)>
20040376: 02 65        	clc	ca0, 0(csp)

20040378 <.LBB0_6>:
; }
20040378: a2 64        	clc	cs1, 8(csp)
2004037a: 42 64        	clc	cs0, 16(csp)
2004037c: e2 60        	clc	cra, 24(csp)
2004037e: 05 61        	cincoffset	csp, csp, 32
20040380: 82 80        	cret
20040382: 00 00        	unimp	

20040384 <strtoul(char const*, char**, int)>:
; {
20040384: 5d 71        	cincoffset	csp, csp, -80
20040386: 86 e4        	csc	cra, 72(csp)
20040388: a2 e0        	csc	cs0, 64(csp)
2004038a: 26 fc        	csc	cs1, 56(csp)
2004038c: 32 d6        	csw	a2, 44(csp)
2004038e: 2e ec        	csc	ca1, 24(csp)
20040390: 2a e4        	csc	ca0, 8(csp)
20040392: 5b 06 a5 fe  	cmove	ca2, ca0

20040396 <.LBB0_1>:
20040396: db 04 a6 fe  	cmove	cs1, ca2
;                 c = *s++;
2004039a: 03 44 06 00  	clbu	s0, 0(ca2)
2004039e: 5b 15 16 00  	cincoffset	ca0, ca2, 1
;         } while (isspace(c));
200403a2: 2a f8        	csc	ca0, 48(csp)
200403a4: 85 45        	addi	a1, zero, 1
200403a6: 22 85        	mv	a0, s0
200403a8: a5 3f        	cjal	0x20040320 <_pcc_start>
200403aa: 42 76        	clc	ca2, 48(csp)
;         } while (isspace(c));
200403ac: 6d f5        	bnez	a0, 0x20040396 <.LBB0_1>
200403ae: 93 05 d0 02  	addi	a1, zero, 45
;         if (c == '-') {
200403b2: 63 0b b4 00  	beq	s0, a1, 0x200403c8 <.LBB0_5>
200403b6: 22 85        	mv	a0, s0
200403b8: 93 05 b0 02  	addi	a1, zero, 43
200403bc: 85 46        	addi	a3, zero, 1
200403be: b2 57        	clw	a5, 44(csp)
;         if (c == '-') {
200403c0: 63 1a b4 00  	bne	s0, a1, 0x200403d4 <.LBB0_7>
200403c4: 85 46        	addi	a3, zero, 1
200403c6: 19 a0        	j	0x200403cc <.LBB0_6>

200403c8 <.LBB0_5>:
200403c8: 81 46        	mv	a3, zero
200403ca: b2 57        	clw	a5, 44(csp)

200403cc <.LBB0_6>:
200403cc: 03 c5 14 00  	clbu	a0, 1(cs1)
200403d0: 5b 96 24 00  	cincoffset	ca2, cs1, 2

200403d4 <.LBB0_7>:
;         if ((base == 0 || base == 16) &&
200403d4: 13 f7 f7 fe  	andi	a4, a5, -17
200403d8: 93 45 05 03  	xori	a1, a0, 48
200403dc: d9 8d        	or	a1, a1, a4
200403de: 36 ca        	csw	a3, 20(csp)
200403e0: 91 ed        	bnez	a1, 0x200403fc <.LBB0_10>
;             (c == '0') && (*s == 'x' || *s == 'X')) {
200403e2: 03 45 06 00  	clbu	a0, 0(ca2)
200403e6: 13 65 05 02  	ori	a0, a0, 32
200403ea: 93 05 80 07  	addi	a1, zero, 120
200403ee: 63 12 b5 02  	bne	a0, a1, 0x20040412 <.LBB0_12>
;                 c = s[1];
200403f2: 03 45 16 00  	clbu	a0, 1(ca2)
;                 s += 2;
200403f6: 5b 16 26 00  	cincoffset	ca2, ca2, 2
200403fa: c1 47        	addi	a5, zero, 16

200403fc <.LBB0_10>:
200403fc: 93 05 00 03  	addi	a1, zero, 48
;         if (base == 0)
20040400: 93 b6 17 00  	seqz	a3, a5
20040404: 63 09 b5 00  	beq	a0, a1, 0x20040416 <.LBB0_13>
20040408: 32 f8        	csc	ca2, 48(csp)
2004040a: a9 45        	addi	a1, zero, 10
2004040c: 2e d4        	csw	a1, 40(csp)
;         if (base == 0)
2004040e: 91 ca        	beqz	a3, 0x20040422 <.LBB0_14>
20040410: 11 a8        	j	0x20040424 <.LBB0_15>

20040412 <.LBB0_12>:
20040412: 93 b6 17 00  	seqz	a3, a5

20040416 <.LBB0_13>:
20040416: 32 f8        	csc	ca2, 48(csp)
20040418: 21 45        	addi	a0, zero, 8
2004041a: 2a d4        	csw	a0, 40(csp)
2004041c: 13 05 00 03  	addi	a0, zero, 48
;         if (base == 0)
20040420: 91 e2        	bnez	a3, 0x20040424 <.LBB0_15>

20040422 <.LBB0_14>:
20040422: 3e d4        	csw	a5, 40(csp)

20040424 <.LBB0_15>:
20040424: 02 d6        	csw	zero, 44(csp)
20040426: 01 44        	mv	s0, zero
20040428: fd 55        	addi	a1, zero, -1
2004042a: 22 56        	clw	a2, 40(csp)
;         cutoff = (uint32_t)ULONG_MAX / base;
2004042c: b3 d5 c5 02  	divu	a1, a1, a2
20040430: 2e d2        	csw	a1, 36(csp)
20040432: b3 85 c5 02  	mul	a1, a1, a2
20040436: 93 c5 f5 ff  	not	a1, a1
2004043a: 2e d0        	csw	a1, 32(csp)

2004043c <.LBB0_16>:
;                 if (isdigit(c))
2004043c: a1 45        	addi	a1, zero, 8
2004043e: aa 84        	mv	s1, a0
20040440: c5 35        	cjal	0x20040320 <_pcc_start>
20040442: 01 c5        	beqz	a0, 0x2004044a <.LBB0_18>
;                         c -= '0';
20040444: 13 85 04 fd  	addi	a0, s1, -48
20040448: 05 a0        	j	0x20040468 <.LBB0_22>

2004044a <.LBB0_18>:
;                 else if (isalpha(c))
2004044a: 93 05 00 04  	addi	a1, zero, 64
2004044e: 26 85        	mv	a0, s1
20040450: c1 3d        	cjal	0x20040320 <_pcc_start>
20040452: 2d c1        	beqz	a0, 0x200404b4 <.LBB0_28>
;                         c -= isupper(c) ? 'A' - 10 : 'a' - 10;
20040454: 91 45        	addi	a1, zero, 4
20040456: 26 85        	mv	a0, s1
20040458: e1 35        	cjal	0x20040320 <_pcc_start>
2004045a: 93 05 90 fa  	addi	a1, zero, -87
;                         c -= isupper(c) ? 'A' - 10 : 'a' - 10;
2004045e: 19 c1        	beqz	a0, 0x20040464 <.LBB0_21>
20040460: 93 05 90 fc  	addi	a1, zero, -55

20040464 <.LBB0_21>:
;                         c -= isupper(c) ? 'A' - 10 : 'a' - 10;
20040464: 33 85 95 00  	add	a0, a1, s1

20040468 <.LBB0_22>:
;                 if (c >= base)
20040468: a2 55        	clw	a1, 40(csp)
2004046a: 63 55 b5 04  	bge	a0, a1, 0x200404b4 <.LBB0_28>
;                 if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
2004046e: 93 25 04 00  	slti	a1, s0, 0
20040472: 32 54        	clw	s0, 44(csp)
20040474: 12 57        	clw	a4, 36(csp)
20040476: 33 36 87 00  	sltu	a2, a4, s0
;                 if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
2004047a: d1 8d        	or	a1, a1, a2
2004047c: fd 56        	addi	a3, zero, -1
2004047e: 99 c1        	beqz	a1, 0x20040484 <.LBB0_25>
20040480: a2 85        	mv	a1, s0
20040482: 05 a0        	j	0x200404a2 <.LBB0_27>

20040484 <.LBB0_25>:
;                 if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
20040484: b3 45 e4 00  	xor	a1, s0, a4
20040488: 93 b5 15 00  	seqz	a1, a1
2004048c: 02 56        	clw	a2, 32(csp)
2004048e: 33 26 a6 00  	slt	a2, a2, a0
20040492: 6d 8e        	and	a2, a2, a1
20040494: ba 85        	mv	a1, a4
20040496: 11 e6        	bnez	a2, 0x200404a2 <.LBB0_27>
;                         acc = acc * base;
20040498: a2 55        	clw	a1, 40(csp)
2004049a: b3 05 b4 02  	mul	a1, s0, a1
;                         acc += c;
2004049e: aa 95        	add	a1, a1, a0
200404a0: 85 46        	addi	a3, zero, 1

200404a2 <.LBB0_27>:
200404a2: 36 84        	mv	s0, a3
200404a4: c2 74        	clc	cs1, 48(csp)
;         for (acc = 0, any = 0;; c = *s++) {
200404a6: 03 c5 04 00  	clbu	a0, 0(cs1)
200404aa: 5b 96 14 00  	cincoffset	ca2, cs1, 1
200404ae: 2e d6        	csw	a1, 44(csp)
200404b0: 32 f8        	csc	ca2, 48(csp)
200404b2: 69 b7        	j	0x2004043c <.LBB0_16>

200404b4 <.LBB0_28>:
200404b4: e2 65        	clc	ca1, 24(csp)
200404b6: 22 86        	mv	a2, s0
;         if (endptr != 0)
200404b8: 99 c5        	beqz	a1, 0x200404c6 <.LBB0_32>
200404ba: 22 65        	clc	ca0, 8(csp)
;                 *endptr = (char *)(any ? s - 1 : nptr);
200404bc: 01 c6        	beqz	a2, 0x200404c4 <.LBB0_31>
200404be: 42 75        	clc	ca0, 48(csp)
200404c0: 5b 15 f5 ff  	cincoffset	ca0, ca0, -1

200404c4 <.LBB0_31>:
;                 *endptr = (char *)(any ? s - 1 : nptr);
200404c4: 88 e1        	csc	ca0, 0(ca1)

200404c6 <.LBB0_32>:
;         if (any < 0) {
200404c6: 52 45        	clw	a0, 20(csp)
200404c8: 32 54        	clw	s0, 44(csp)
200404ca: 19 e1        	bnez	a0, 0x200404d0 <.LBB0_34>
200404cc: 33 04 80 40  	neg	s0, s0

200404d0 <.LBB0_34>:
;         if (any < 0) {
200404d0: 63 53 06 00  	bgez	a2, 0x200404d6 <.LBB0_36>
200404d4: 7d 54        	addi	s0, zero, -1

200404d6 <.LBB0_36>:
;         return (acc);
200404d6: 22 85        	mv	a0, s0
200404d8: e2 74        	clc	cs1, 56(csp)
200404da: 06 64        	clc	cs0, 64(csp)
200404dc: a6 60        	clc	cra, 72(csp)
200404de: 61 61        	cincoffset	csp, csp, 80
200404e0: 82 80        	cret
200404e2: 00 00        	unimp	

200404e4 <free(void*)>:
; {
200404e4: 79 71        	cincoffset	csp, csp, -48
200404e6: 06 f4        	csc	cra, 40(csp)
200404e8: 22 f0        	csc	cs0, 32(csp)
200404ea: 26 ec        	csc	cs1, 24(csp)
200404ec: 5b 04 a5 fe  	cmove	cs0, ca0
; 	if(pm->magic_number == MALLOC_MAGIC_NUM && pm_nxt->magic_number == MALLOC_MAGIC_NUM && 
200404f0: 03 55 a5 ff  	clhu	a0, -6(ca0)
200404f4: a9 65        	lui	a1, 10
200404f6: 93 86 c5 53  	addi	a3, a1, 1340
200404fa: 63 14 d5 0a  	bne	a0, a3, 0x200405a2 <.LBB0_9>
200404fe: db 94 01 ab  	cincoffset	cs1, cgp, -1360
20040502: db a4 84 00  	csetbounds	cs1, cs1, 8
20040506: 90 60        	clc	ca2, 0(cs1)
20040508: 03 25 44 ff  	clw	a0, -12(cs0)
2004050c: db 05 a6 20  	csetaddr	ca1, ca2, a0
; 	if(pm->magic_number == MALLOC_MAGIC_NUM && pm_nxt->magic_number == MALLOC_MAGIC_NUM && 
20040510: 03 d7 a5 00  	clhu	a4, 10(ca1)
20040514: 63 17 d7 08  	bne	a4, a3, 0x200405a2 <.LBB0_9>
20040518: 03 27 04 ff  	clw	a4, -16(cs0)
2004051c: fd 56        	addi	a3, zero, -1
2004051e: db 07 e6 20  	csetaddr	ca5, ca2, a4
; 	   (pm->prev_addr == 0xffffffff || pm_prev->magic_number == MALLOC_MAGIC_NUM)) {
20040522: 63 09 d7 00  	beq	a4, a3, 0x20040534 <.LBB0_4>
20040526: 03 d6 a7 00  	clhu	a2, 10(ca5)
2004052a: a9 66        	lui	a3, 10
2004052c: 93 86 c6 53  	addi	a3, a3, 1340
; 	if(pm->magic_number == MALLOC_MAGIC_NUM && pm_nxt->magic_number == MALLOC_MAGIC_NUM && 
20040530: 63 19 d6 06  	bne	a2, a3, 0x200405a2 <.LBB0_9>

20040534 <.LBB0_4>:
; 		pm->status = HSP_FREE;
20040534: 23 1c 04 fe  	csh	zero, -8(cs0)
; 		if(pm_nxt->status == HSP_FREE) {
20040538: 83 d6 85 00  	clhu	a3, 8(ca1)
2004053c: 3a 86        	mv	a2, a4
2004053e: 9d ea        	bnez	a3, 0x20040574 <.LBB0_6>
20040540: 5b 05 f4 fe  	cgetaddr	a0, cs0
; 			setMallocDescriptor(pm,pm->prev_addr, pm_nxt->next_addr, HSP_FREE);
20040544: d0 41        	clw	a2, 4(ca1)
20040546: 41 15        	addi	a0, a0, -16
20040548: 2a c2        	csw	a0, 4(csp)
2004054a: 5b 15 04 ff  	cincoffset	ca0, cs0, -16
2004054e: db 05 e0 22  	cincoffset	ca1, cnull, a4
20040552: 5b 06 c0 22  	cincoffset	ca2, cnull, a2
20040556: 81 46        	mv	a3, zero
20040558: 3a ca        	csw	a4, 20(csp)
2004055a: 3e e4        	csc	ca5, 8(csp)
2004055c: 81 28        	cjal	0x200405ac <setMallocDescriptor(malloc_s*, __uintcap_t, __uintcap_t, unsigned int)>
2004055e: a2 67        	clc	ca5, 8(csp)
20040560: 52 47        	clw	a4, 20(csp)
; 			pm_nxt = (pmalloc_t)malloc_fromaddr(pm->next_addr);
20040562: 03 25 44 ff  	clw	a0, -12(cs0)
; 	return cheri_address_set(HeapCap, addr);
20040566: 8c 60        	clc	ca1, 0(cs1)
20040568: db 85 a5 20  	csetaddr	ca1, ca1, a0
; 			pm_nxt->prev_addr = (uintptr_t)pm;
2004056c: 12 46        	clw	a2, 4(csp)
2004056e: 90 c1        	csw	a2, 0(ca1)
; 		if(pm->prev_addr != 0xffffffff && pm_prev->status == HSP_FREE) {
20040570: 03 26 04 ff  	clw	a2, -16(cs0)

20040574 <.LBB0_6>:
20040574: fd 55        	addi	a1, zero, -1
; 		if(pm->prev_addr != 0xffffffff && pm_prev->status == HSP_FREE) {
20040576: 63 06 b6 02  	beq	a2, a1, 0x200405a2 <.LBB0_9>
2004057a: 83 d5 87 00  	clhu	a1, 8(ca5)
2004057e: 95 e1        	bnez	a1, 0x200405a2 <.LBB0_9>
; 			setMallocDescriptor(pm_prev,pm_prev->prev_addr, pm->next_addr, HSP_FREE);
20040580: 8c 43        	clw	a1, 0(ca5)
20040582: db 05 b0 22  	cincoffset	ca1, cnull, a1
20040586: 5b 06 a0 22  	cincoffset	ca2, cnull, a0
2004058a: 5b 85 a7 fe  	cmove	ca0, ca5
2004058e: 81 46        	mv	a3, zero
20040590: 3a ca        	csw	a4, 20(csp)
20040592: 29 28        	cjal	0x200405ac <setMallocDescriptor(malloc_s*, __uintcap_t, __uintcap_t, unsigned int)>
; 			pm_nxt = (pmalloc_t)malloc_fromaddr(pm->next_addr);
20040594: 03 25 44 ff  	clw	a0, -12(cs0)
; 	return cheri_address_set(HeapCap, addr);
20040598: 8c 60        	clc	ca1, 0(cs1)
2004059a: 5b 85 a5 20  	csetaddr	ca0, ca1, a0
; 			pm_nxt->prev_addr = (uintptr_t)pm_prev;
2004059e: d2 45        	clw	a1, 20(csp)
200405a0: 0c c1        	csw	a1, 0(ca0)

200405a2 <.LBB0_9>:
; }
200405a2: e2 64        	clc	cs1, 24(csp)
200405a4: 02 74        	clc	cs0, 32(csp)
200405a6: a2 70        	clc	cra, 40(csp)
200405a8: 45 61        	cincoffset	csp, csp, 48
200405aa: 82 80        	cret

200405ac <setMallocDescriptor(malloc_s*, __uintcap_t, __uintcap_t, unsigned int)>:
; 	ptr->prev_addr = prev;
200405ac: db 85 f5 fe  	cgetaddr	a1, ca1
200405b0: 0c c1        	csw	a1, 0(ca0)
; 	ptr->next_addr = next;
200405b2: db 05 f6 fe  	cgetaddr	a1, ca2
200405b6: 4c c1        	csw	a1, 4(ca0)
; 	ptr->status = status;
200405b8: 23 14 d5 00  	csh	a3, 8(ca0)
200405bc: a9 65        	lui	a1, 10
200405be: 93 85 c5 53  	addi	a1, a1, 1340
; 	ptr->magic_number = MALLOC_MAGIC_NUM;
200405c2: 23 15 b5 00  	csh	a1, 10(ca0)
; 	ptr->size = ((uintptr_t)next - (uintptr_t)ptr) - sizeof(struct malloc_s);
200405c6: db 05 a6 28  	csub	a1, ca2, ca0
200405ca: c1 15        	addi	a1, a1, -16
200405cc: 4c c5        	csw	a1, 12(ca0)
; }
200405ce: 82 80        	cret

200405d0 <get_ptr(unsigned long, unsigned int)>:
; 	void* ret = globalRoot;
200405d0: 5b 96 01 cc  	cincoffset	ca2, cgp, -832
200405d4: 5b 26 86 00  	csetbounds	ca2, ca2, 8
200405d8: 10 62        	clc	ca2, 0(ca2)
200405da: 93 06 40 06  	addi	a3, zero, 100
; 	ret = cheri_perms_and(ret, CHERI_PERMS);
200405de: 5b 06 d6 1a  	candperm	ca2, ca2, a3
; 	ret = cheri_address_set(ret, start);
200405e2: 5b 05 a6 20  	csetaddr	ca0, ca2, a0
; 	ret = cheri_bounds_set(ret, len);
200405e6: 5b 05 b5 10  	csetbounds	ca0, ca0, a1
; 	return ret;
200405ea: 82 80        	cret

200405ec <malloc_init(void*, unsigned int)>:
; {
200405ec: 3d 71        	cincoffset	csp, csp, -32
; 	if(MallocInit == 1) {
200405ee: 06 ec        	csc	cra, 24(csp)
200405f0: 22 e8        	csc	cs0, 16(csp)
200405f2: 26 e4        	csc	cs1, 8(csp)
200405f4: db 94 01 a8  	cincoffset	cs1, cgp, -1408
200405f8: db a4 14 00  	csetbounds	cs1, cs1, 1
200405fc: 03 c6 04 00  	clbu	a2, 0(cs1)
20040600: 85 46        	addi	a3, zero, 1
20040602: 63 1f d6 02  	bne	a2, a3, 0x20040640 <.LBB0_2>
; 		HeapCap = heap;
20040606: 5b 96 01 ab  	cincoffset	ca2, cgp, -1360
2004060a: 5b 26 86 00  	csetbounds	ca2, ca2, 8
2004060e: 08 e2        	csc	ca0, 0(ca2)
; 		pm_nxt = (pmalloc_t)((uintptr_t)heap + len - sizeof(struct malloc_s));
20040610: 5b 04 f5 fe  	cgetaddr	s0, ca0
20040614: 5b 06 b5 22  	cincoffset	ca2, ca0, a1
20040618: a2 95        	add	a1, a1, s0
2004061a: c1 15        	addi	a1, a1, -16
2004061c: 5b 06 b6 20  	csetaddr	ca2, ca2, a1
; 		setMallocDescriptor(pm, 0xffffffff, (uint32_t)pm_nxt, HSP_FREE);
20040620: 32 e0        	csc	ca2, 0(csp)
20040622: 5b 06 b0 22  	cincoffset	ca2, cnull, a1
20040626: db 15 f0 ff  	cincoffset	ca1, cnull, -1
2004062a: 81 46        	mv	a3, zero
2004062c: 41 37        	cjal	0x200405ac <setMallocDescriptor(malloc_s*, __uintcap_t, __uintcap_t, unsigned int)>
; 		setMallocDescriptor(pm_nxt, (uint32_t)pm, 0, HSP_END);
2004062e: db 05 80 22  	cincoffset	ca1, cnull, s0
20040632: 89 46        	addi	a3, zero, 2
20040634: 02 65        	clc	ca0, 0(csp)
20040636: 5b 06 a0 fe  	cmove	ca2, cnull
2004063a: 8d 3f        	cjal	0x200405ac <setMallocDescriptor(malloc_s*, __uintcap_t, __uintcap_t, unsigned int)>
; 		MallocInit = 0;
2004063c: 23 80 04 00  	csb	zero, 0(cs1)

20040640 <.LBB0_2>:
; }
20040640: a2 64        	clc	cs1, 8(csp)
20040642: 42 64        	clc	cs0, 16(csp)
20040644: e2 60        	clc	cra, 24(csp)
20040646: 05 61        	cincoffset	csp, csp, 32
20040648: 82 80        	cret

2004064a <malloc(unsigned int)>:
; {
2004064a: 79 71        	cincoffset	csp, csp, -48
; 	if(size == 0) {
2004064c: 06 f4        	csc	cra, 40(csp)
2004064e: 22 f0        	csc	cs0, 32(csp)
20040650: 26 ec        	csc	cs1, 24(csp)
20040652: 15 c9        	beqz	a0, 0x20040686 <.LBB1_5>
; 	pm = (pmalloc_t)HeapCap;
20040654: db 95 01 ab  	cincoffset	ca1, cgp, -1360
20040658: db a5 85 00  	csetbounds	ca1, ca1, 8
2004065c: 90 61        	clc	ca2, 0(ca1)
; 	size += (((size^0x7)+1)&0x7);
2004065e: b3 06 a0 40  	neg	a3, a0
20040662: 9d 8a        	andi	a3, a3, 7
20040664: 36 95        	add	a0, a0, a3
20040666: 89 46        	addi	a3, zero, 2
20040668: 5b 04 a6 fe  	cmove	cs0, ca2

2004066c <.LBB1_2>:
; 		if(pm->status == HSP_FREE && size <= pm->size) {
2004066c: 03 57 84 00  	clhu	a4, 8(cs0)
20040670: 01 e7        	bnez	a4, 0x20040678 <.LBB1_4>
20040672: 58 44        	clw	a4, 12(cs0)
20040674: 63 70 a7 02  	bgeu	a4, a0, 0x20040694 <.LBB1_7>

20040678 <.LBB1_4>:
; 		pm = (pmalloc_t)malloc_fromaddr(pm->next_addr);
20040678: 58 40        	clw	a4, 4(cs0)
; 	return cheri_address_set(HeapCap, addr);
2004067a: 5b 04 e6 20  	csetaddr	cs0, ca2, a4
; 	} while (pm->status != HSP_END);
2004067e: 03 57 84 00  	clhu	a4, 8(cs0)
20040682: e3 15 d7 fe  	bne	a4, a3, 0x2004066c <.LBB1_2>

20040686 <.LBB1_5>:
; }
20040686: 5b 05 a0 fe  	cmove	ca0, cnull

2004068a <.LBB1_6>:
2004068a: e2 64        	clc	cs1, 24(csp)
2004068c: 02 74        	clc	cs0, 32(csp)
2004068e: a2 70        	clc	cra, 40(csp)
20040690: 45 61        	cincoffset	csp, csp, 48
20040692: 82 80        	cret

20040694 <.LBB1_7>:
; 			if((pm->size - size) < sizeof(struct malloc_s) + sizeof(void *)) {
20040694: 33 06 a7 40  	sub	a2, a4, a0
20040698: dd 46        	addi	a3, zero, 23
2004069a: 63 e8 c6 00  	bltu	a3, a2, 0x200406aa <.LBB1_9>
2004069e: 05 45        	addi	a0, zero, 1
; 				pm->status = HSP_USED;
200406a0: 23 14 a4 00  	csh	a0, 8(cs0)
; 			return (void*)((uintptr_t)pm+sizeof(struct malloc_s));
200406a4: 5b 05 f4 fe  	cgetaddr	a0, cs0
200406a8: 99 a0        	j	0x200406ee <.LBB1_10>

200406aa <.LBB1_9>:
; 				pm_new = (pmalloc_t) ((uintptr_t)pm+sizeof(struct malloc_s)+size);
200406aa: 5b 06 f4 fe  	cgetaddr	a2, cs0
200406ae: 32 c8        	csw	a2, 16(csp)
200406b0: 32 95        	add	a0, a0, a2
; 				pm_nxt = (pmalloc_t) malloc_fromaddr(pm->next_addr);
200406b2: 58 40        	clw	a4, 4(cs0)
; 	return cheri_address_set(HeapCap, addr);
200406b4: 8c 61        	clc	ca1, 0(ca1)
; 				setMallocDescriptor(pm, (uintptr_t)malloc_fromaddr(pm->prev_addr), (uintptr_t)pm_new, HSP_USED);
200406b6: 14 40        	clw	a3, 0(cs0)
; 				pm_new = (pmalloc_t) ((uintptr_t)pm+sizeof(struct malloc_s)+size);
200406b8: 41 05        	addi	a0, a0, 16
200406ba: 2a ca        	csw	a0, 20(csp)
200406bc: db 04 a4 20  	csetaddr	cs1, cs0, a0
; 	return cheri_address_set(HeapCap, addr);
200406c0: 5b 85 e5 20  	csetaddr	ca0, ca1, a4
200406c4: 2a e4        	csc	ca0, 8(csp)
200406c6: db 85 d5 20  	csetaddr	ca1, ca1, a3
; 				setMallocDescriptor(pm, (uintptr_t)malloc_fromaddr(pm->prev_addr), (uintptr_t)pm_new, HSP_USED);
200406ca: 85 46        	addi	a3, zero, 1
200406cc: 5b 05 a4 fe  	cmove	ca0, cs0
200406d0: 5b 86 a4 fe  	cmove	ca2, cs1
200406d4: e1 3d        	cjal	0x200405ac <setMallocDescriptor(malloc_s*, __uintcap_t, __uintcap_t, unsigned int)>
; 				setMallocDescriptor(pm_new, (uintptr_t)pm, (uintptr_t)pm_nxt,HSP_FREE);
200406d6: 5b 85 a4 fe  	cmove	ca0, cs1
200406da: db 05 a4 fe  	cmove	ca1, cs0
200406de: a2 64        	clc	cs1, 8(csp)
200406e0: 5b 86 a4 fe  	cmove	ca2, cs1
200406e4: 81 46        	mv	a3, zero
200406e6: d9 35        	cjal	0x200405ac <setMallocDescriptor(malloc_s*, __uintcap_t, __uintcap_t, unsigned int)>
; 				pm_nxt->prev_addr = (uintptr_t) pm_new;
200406e8: 52 45        	clw	a0, 20(csp)
200406ea: 88 c0        	csw	a0, 0(cs1)
200406ec: 42 45        	clw	a0, 16(csp)

200406ee <.LBB1_10>:
; 			return (void*)((uintptr_t)pm+sizeof(struct malloc_s));
200406ee: 41 05        	addi	a0, a0, 16
200406f0: 5b 05 a4 20  	csetaddr	ca0, cs0, a0
200406f4: 59 bf        	j	0x2004068a <.LBB1_6>
200406f6: 00 00        	unimp	

200406f8 <operator delete(void*)>:
;   free(ptr);
200406f8: f5 b3        	j	0x200404e4 <free(void*)>

200406fa <operator delete(void*, unsigned int)>:
;   free(ptr);
200406fa: ed b3        	j	0x200404e4 <free(void*)>

200406fc <shift_lfsr(unsigned int*, unsigned int)>:
;   feedback = *lfsr&1;
200406fc: 10 41        	clw	a2, 0(ca0)
200406fe: 93 76 16 00  	andi	a3, a2, 1
20040702: b3 06 d0 40  	neg	a3, a3
;   *lfsr >>=1;
20040706: 05 82        	srli	a2, a2, 1
;   if(feedback ==1) {
20040708: f5 8d        	and	a1, a1, a3
2004070a: b1 8d        	xor	a1, a1, a2
2004070c: 0c c1        	csw	a1, 0(ca0)
;   return *lfsr;
2004070e: 2e 85        	mv	a0, a1
20040710: 82 80        	cret

20040712 <rand()>:
;   feedback = *lfsr&1;
20040712: 5b 95 41 a8  	cincoffset	ca0, cgp, -1404
20040716: 5b 25 45 00  	csetbounds	ca0, ca0, 4
2004071a: 0c 41        	clw	a1, 0(ca0)
2004071c: 13 f6 15 00  	andi	a2, a1, 1
20040720: 33 06 c0 40  	neg	a2, a2
;   *lfsr >>=1;
20040724: 93 d6 25 00  	srli	a3, a1, 2
20040728: 37 77 5e 5a  	lui	a4, 370151
2004072c: 13 07 e7 9a  	addi	a4, a4, -1618
;   if(feedback ==1) {
20040730: 79 8e        	and	a2, a2, a4
20040732: 35 8e        	xor	a2, a2, a3
20040734: fa 05        	slli	a1, a1, 30
20040736: fd 85        	srai	a1, a1, 31
20040738: b7 d6 bc b4  	lui	a3, 740301
2004073c: 93 86 c6 35  	addi	a3, a3, 860
;   feedback = *lfsr&1;
20040740: 5b 97 81 a8  	cincoffset	ca4, cgp, -1400
20040744: 5b 27 47 00  	csetbounds	ca4, ca4, 4
20040748: 1c 43        	clw	a5, 0(ca4)
;   if(feedback ==1) {
2004074a: f5 8d        	and	a1, a1, a3
2004074c: b1 8d        	xor	a1, a1, a2
2004074e: 0c c1        	csw	a1, 0(ca0)
;   feedback = *lfsr&1;
20040750: 13 f5 17 00  	andi	a0, a5, 1
20040754: 33 05 a0 40  	neg	a0, a0
;   *lfsr >>=1;
20040758: 13 d6 17 00  	srli	a2, a5, 1
2004075c: b7 c6 5b 7a  	lui	a3, 501180
20040760: 93 86 36 2e  	addi	a3, a3, 739
;   if(feedback ==1) {
20040764: 75 8d        	and	a0, a0, a3
20040766: 29 8e        	xor	a2, a2, a0
;   return (shift_lfsr(&lfsr32, POLY_MASK_32) ^ shift_lfsr(&lfsr31, POLY_MASK_31));
20040768: 33 45 b6 00  	xor	a0, a2, a1
2004076c: 10 c3        	csw	a2, 0(ca4)
;   return (shift_lfsr(&lfsr32, POLY_MASK_32) ^ shift_lfsr(&lfsr31, POLY_MASK_31));
2004076e: 82 80        	cret

20040770 <srand(unsigned int)>:
; 	lfsr32 = seed;
20040770: db 95 41 a8  	cincoffset	ca1, cgp, -1404
20040774: db a5 45 00  	csetbounds	ca1, ca1, 4
20040778: 88 c1        	csw	a0, 0(ca1)
; 	lfsr31 = seed/2;
2004077a: 05 81        	srli	a0, a0, 1
2004077c: db 95 81 a8  	cincoffset	ca1, cgp, -1400
20040780: db a5 45 00  	csetbounds	ca1, ca1, 4
20040784: 88 c1        	csw	a0, 0(ca1)
; }
20040786: 82 80        	cret

20040788 <random_range(unsigned int, unsigned int)>:
; {
20040788: 3d 71        	cincoffset	csp, csp, -32
2004078a: 06 ec        	csc	cra, 24(csp)
2004078c: 22 e8        	csc	cs0, 16(csp)
2004078e: 26 e4        	csc	cs1, 8(csp)
20040790: 2e 84        	mv	s0, a1
20040792: aa 84        	mv	s1, a0
;     random_val = (rand() % (max+1-min))+min;
20040794: bd 3f        	cjal	0x20040712 <rand()>
20040796: b3 05 94 40  	sub	a1, s0, s1
2004079a: 85 05        	addi	a1, a1, 1
2004079c: 33 75 b5 02  	remu	a0, a0, a1
200407a0: 26 95        	add	a0, a0, s1
;     return random_val;
200407a2: a2 64        	clc	cs1, 8(csp)
200407a4: 42 64        	clc	cs0, 16(csp)
200407a6: e2 60        	clc	cra, 24(csp)
200407a8: 05 61        	cincoffset	csp, csp, 32
200407aa: 82 80        	cret

200407ac <random_fill(unsigned int*, unsigned int)>:
; void random_fill(uint32_t * arr, uint32_t num) {
200407ac: 79 71        	cincoffset	csp, csp, -48
200407ae: 06 f4        	csc	cra, 40(csp)
200407b0: 22 f0        	csc	cs0, 32(csp)
200407b2: 26 ec        	csc	cs1, 24(csp)
200407b4: 2e ca        	csw	a1, 20(csp)
200407b6: 2a e4        	csc	ca0, 8(csp)
200407b8: 81 44        	mv	s1, zero

200407ba <.LBB4_1>:
; 	for(i=0;i<num;i++) 
200407ba: 52 45        	clw	a0, 20(csp)
200407bc: 63 0b 95 00  	beq	a0, s1, 0x200407d2 <.LBB4_3>
; 		hw_write32(arr+i,rand());
200407c0: 13 95 24 00  	slli	a0, s1, 2
200407c4: a2 65        	clc	ca1, 8(csp)
200407c6: 5b 84 a5 22  	cincoffset	cs0, ca1, a0
200407ca: a1 37        	cjal	0x20040712 <rand()>
; inline void hw_write32(volatile uint32_t* addr, uint32_t data) { *addr = data; }
200407cc: 08 c0        	csw	a0, 0(cs0)
; 	for(i=0;i<num;i++) 
200407ce: 85 04        	addi	s1, s1, 1
200407d0: ed b7        	j	0x200407ba <.LBB4_1>

200407d2 <.LBB4_3>:
; }
200407d2: e2 64        	clc	cs1, 24(csp)
200407d4: 02 74        	clc	cs0, 32(csp)
200407d6: a2 70        	clc	cra, 40(csp)
200407d8: 45 61        	cincoffset	csp, csp, 48
200407da: 82 80        	cret

200407dc <operator new(unsigned int)>:
;   ptr = (void*) malloc(size);
200407dc: bd b5        	j	0x2004064a <malloc(unsigned int)>
200407de: 00 00        	unimp	

200407e0 <calloc(unsigned int, unsigned int)>:
; {
200407e0: 3d 71        	cincoffset	csp, csp, -32
;   int bytes = num*size;
200407e2: 06 ec        	csc	cra, 24(csp)
200407e4: 22 e8        	csc	cs0, 16(csp)
200407e6: 26 e4        	csc	cs1, 8(csp)
200407e8: 33 84 a5 02  	mul	s0, a1, a0
;   void *ptr = malloc(bytes);
200407ec: 22 85        	mv	a0, s0
200407ee: b1 3d        	cjal	0x2004064a <malloc(unsigned int)>
200407f0: db 04 a5 fe  	cmove	cs1, ca0
;   if(ptr != NULL) {
200407f4: 99 c4        	beqz	s1, 0x20040802 <.LBB0_2>
;     memset(ptr, 0, bytes);
200407f6: 5b 85 a4 fe  	cmove	ca0, cs1
200407fa: 81 45        	mv	a1, zero
200407fc: 22 86        	mv	a2, s0
200407fe: ef 00 b0 0f  	cjal	0x200410f8 <memset(void*, int, unsigned int)>

20040802 <.LBB0_2>:
; 	return ptr;
20040802: 5b 85 a4 fe  	cmove	ca0, cs1
20040806: a2 64        	clc	cs1, 8(csp)
20040808: 42 64        	clc	cs0, 16(csp)
2004080a: e2 60        	clc	cra, 24(csp)
2004080c: 05 61        	cincoffset	csp, csp, 32
2004080e: 82 80        	cret

20040810 <strtol(char const*, char**, int)>:
; {
20040810: 5d 71        	cincoffset	csp, csp, -80
20040812: 86 e4        	csc	cra, 72(csp)
20040814: a2 e0        	csc	cs0, 64(csp)
20040816: 26 fc        	csc	cs1, 56(csp)
20040818: 32 d4        	csw	a2, 40(csp)
2004081a: 2e e8        	csc	ca1, 16(csp)
2004081c: 5b 04 a5 fe  	cmove	cs0, ca0
20040820: 2a e0        	csc	ca0, 0(csp)

20040822 <.LBB0_1>:
20040822: db 04 a4 fe  	cmove	cs1, cs0
; 		c = *s++;
20040826: 03 45 04 00  	clbu	a0, 0(cs0)
2004082a: 5b 14 14 00  	cincoffset	cs0, cs0, 1
; 	} while (isspace(c));
2004082e: 85 45        	addi	a1, zero, 1
20040830: 2a da        	csw	a0, 52(csp)
20040832: fd 34        	cjal	0x20040320 <_pcc_start>
20040834: 7d f5        	bnez	a0, 0x20040822 <.LBB0_1>
20040836: db 85 a4 fe  	cmove	ca1, cs1
2004083a: 13 05 d0 02  	addi	a0, zero, 45
2004083e: d2 57        	clw	a5, 52(csp)
; 	if (c == '-') {
20040840: 63 8c a7 00  	beq	a5, a0, 0x20040858 <.LBB0_5>
20040844: db 04 a4 fe  	cmove	cs1, cs0
20040848: 13 05 b0 02  	addi	a0, zero, 43
2004084c: 05 47        	addi	a4, zero, 1
2004084e: 22 54        	clw	s0, 40(csp)
; 	if (c == '-') {
20040850: 63 9a a7 00  	bne	a5, a0, 0x20040864 <.LBB0_7>
20040854: 05 47        	addi	a4, zero, 1
20040856: 19 a0        	j	0x2004085c <.LBB0_6>

20040858 <.LBB0_5>:
20040858: 01 47        	mv	a4, zero
2004085a: 22 54        	clw	s0, 40(csp)

2004085c <.LBB0_6>:
2004085c: 83 c7 15 00  	clbu	a5, 1(ca1)
20040860: db 94 25 00  	cincoffset	cs1, ca1, 2

20040864 <.LBB0_7>:
; 	if ((base == 0 || base == 16) &&
20040864: 13 75 f4 fe  	andi	a0, s0, -17
20040868: 93 35 15 00  	seqz	a1, a0
2004086c: 13 85 07 fd  	addi	a0, a5, -48
20040870: 13 35 15 00  	seqz	a0, a0
20040874: e9 8d        	and	a1, a1, a0
20040876: 91 c9        	beqz	a1, 0x2004088a <.LBB0_9>
; 	    c == '0' && (*s == 'x' || *s == 'X')) {
20040878: 83 c5 04 00  	clbu	a1, 0(cs1)
2004087c: 13 e6 05 02  	ori	a2, a1, 32
20040880: 93 06 80 07  	addi	a3, zero, 120
20040884: c1 45        	addi	a1, zero, 16
20040886: 63 01 d6 02  	beq	a2, a3, 0x200408a8 <.LBB0_11>

2004088a <.LBB0_9>:
; 	} else if ((base == 0 || base == 2) &&
2004088a: 93 75 d4 ff  	andi	a1, s0, -3
2004088e: 93 b5 15 00  	seqz	a1, a1
20040892: 6d 8d        	and	a0, a0, a1
20040894: 19 cd        	beqz	a0, 0x200408b2 <.LBB0_12>
; 	    c == '0' && (*s == 'b' || *s == 'B')) {
20040896: 03 c5 04 00  	clbu	a0, 0(cs1)
2004089a: 13 65 05 02  	ori	a0, a0, 32
2004089e: 13 06 20 06  	addi	a2, zero, 98
200408a2: 89 45        	addi	a1, zero, 2
200408a4: 63 10 c5 02  	bne	a0, a2, 0x200408c4 <.LBB0_14>

200408a8 <.LBB0_11>:
200408a8: 83 c7 14 00  	clbu	a5, 1(cs1)
200408ac: db 94 24 00  	cincoffset	cs1, cs1, 2
200408b0: 2e 84        	mv	s0, a1

200408b2 <.LBB0_12>:
200408b2: 93 05 00 03  	addi	a1, zero, 48
; 	if (base == 0)
200408b6: 13 35 14 00  	seqz	a0, s0
200408ba: 63 87 b7 00  	beq	a5, a1, 0x200408c8 <.LBB0_15>
200408be: a9 45        	addi	a1, zero, 10
200408c0: 2e d2        	csw	a1, 36(csp)
200408c2: 39 a0        	j	0x200408d0 <.LBB0_16>

200408c4 <.LBB0_14>:
; 	if (base == 0)
200408c4: 13 35 14 00  	seqz	a0, s0

200408c8 <.LBB0_15>:
200408c8: a1 45        	addi	a1, zero, 8
200408ca: 2e d2        	csw	a1, 36(csp)
200408cc: 93 07 00 03  	addi	a5, zero, 48

200408d0 <.LBB0_16>:
200408d0: 26 f4        	csc	cs1, 40(csp)
; 	if (base == 0)
200408d2: 11 e1        	bnez	a0, 0x200408d6 <.LBB0_18>
200408d4: 22 d2        	csw	s0, 36(csp)

200408d6 <.LBB0_18>:
200408d6: 81 44        	mv	s1, zero
200408d8: 02 da        	csw	zero, 52(csp)
200408da: 37 05 00 80  	lui	a0, 524288
200408de: 3a c6        	csw	a4, 12(csp)
; 	cutoff = neg ? -(unsigned long)LONG_MIN : LONG_MAX;
200408e0: b3 05 e5 40  	sub	a1, a0, a4
200408e4: 12 55        	clw	a0, 36(csp)
; 	cutoff /= (unsigned long)base;
200408e6: 33 d6 a5 02  	divu	a2, a1, a0
200408ea: 32 d0        	csw	a2, 32(csp)
200408ec: 33 05 a6 02  	mul	a0, a2, a0
200408f0: 2e c4        	csw	a1, 8(csp)
200408f2: 33 85 a5 40  	sub	a0, a1, a0
200408f6: 2a ce        	csw	a0, 28(csp)

200408f8 <.LBB0_19>:
; 		if (isdigit(c))
200408f8: a1 45        	addi	a1, zero, 8
200408fa: 3e 85        	mv	a0, a5
200408fc: 3e 84        	mv	s0, a5
200408fe: 0d 34        	cjal	0x20040320 <_pcc_start>
20040900: 01 c5        	beqz	a0, 0x20040908 <.LBB0_21>
; 			c -= '0';
20040902: 13 05 04 fd  	addi	a0, s0, -48
20040906: 05 a0        	j	0x20040926 <.LBB0_25>

20040908 <.LBB0_21>:
; 		else if (isalpha(c))
20040908: 93 05 00 04  	addi	a1, zero, 64
2004090c: 22 85        	mv	a0, s0
2004090e: 09 3c        	cjal	0x20040320 <_pcc_start>
20040910: 2d c1        	beqz	a0, 0x20040972 <.LBB0_31>
; 			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
20040912: 91 45        	addi	a1, zero, 4
20040914: 22 85        	mv	a0, s0
20040916: 29 34        	cjal	0x20040320 <_pcc_start>
20040918: 93 05 90 fa  	addi	a1, zero, -87
; 			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
2004091c: 19 c1        	beqz	a0, 0x20040922 <.LBB0_24>
2004091e: 93 05 90 fc  	addi	a1, zero, -55

20040922 <.LBB0_24>:
; 			c -= isupper(c) ? 'A' - 10 : 'a' - 10;
20040922: 33 85 85 00  	add	a0, a1, s0

20040926 <.LBB0_25>:
; 		if (c >= base)
20040926: 92 55        	clw	a1, 36(csp)
20040928: 63 55 b5 04  	bge	a0, a1, 0x20040972 <.LBB0_31>
; 		if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
2004092c: d2 55        	clw	a1, 52(csp)
2004092e: 93 a5 05 00  	slti	a1, a1, 0
20040932: 02 57        	clw	a4, 32(csp)
20040934: 33 36 97 00  	sltu	a2, a4, s1
20040938: d1 8d        	or	a1, a1, a2
2004093a: fd 56        	addi	a3, zero, -1
2004093c: 99 c1        	beqz	a1, 0x20040942 <.LBB0_28>
2004093e: a6 85        	mv	a1, s1
20040940: 05 a0        	j	0x20040960 <.LBB0_30>

20040942 <.LBB0_28>:
; 		if (any < 0 || acc > cutoff || (acc == cutoff && c > cutlim))
20040942: b3 c5 e4 00  	xor	a1, s1, a4
20040946: 93 b5 15 00  	seqz	a1, a1
2004094a: 72 46        	clw	a2, 28(csp)
2004094c: 33 26 a6 00  	slt	a2, a2, a0
20040950: 6d 8e        	and	a2, a2, a1
20040952: ba 85        	mv	a1, a4
20040954: 11 e6        	bnez	a2, 0x20040960 <.LBB0_30>
; 			acc *= base;
20040956: 92 55        	clw	a1, 36(csp)
20040958: b3 85 b4 02  	mul	a1, s1, a1
; 			acc += c;
2004095c: aa 95        	add	a1, a1, a0
2004095e: 85 46        	addi	a3, zero, 1

20040960 <.LBB0_30>:
20040960: 36 da        	csw	a3, 52(csp)
20040962: 22 75        	clc	ca0, 40(csp)
; 	for (acc = 0, any = 0;; c = *s++) {
20040964: 83 47 05 00  	clbu	a5, 0(ca0)
20040968: 5b 15 15 00  	cincoffset	ca0, ca0, 1
2004096c: 2a f4        	csc	ca0, 40(csp)
2004096e: ae 84        	mv	s1, a1
20040970: 61 b7        	j	0x200408f8 <.LBB0_19>

20040972 <.LBB0_31>:
20040972: 42 65        	clc	ca0, 16(csp)
20040974: 32 44        	clw	s0, 12(csp)
; 	if (endptr != 0)
20040976: 01 c9        	beqz	a0, 0x20040986 <.LBB0_35>
20040978: 82 65        	clc	ca1, 0(csp)
; 		*endptr = (char *)(any ? s - 1 : nptr);
2004097a: 52 56        	clw	a2, 52(csp)
2004097c: 01 c6        	beqz	a2, 0x20040984 <.LBB0_34>
2004097e: a2 75        	clc	ca1, 40(csp)
20040980: db 95 f5 ff  	cincoffset	ca1, ca1, -1

20040984 <.LBB0_34>:
; 		*endptr = (char *)(any ? s - 1 : nptr);
20040984: 0c e1        	csc	ca1, 0(ca0)

20040986 <.LBB0_35>:
; 	if (any < 0) {
20040986: 19 e0        	bnez	s0, 0x2004098c <.LBB0_37>
20040988: b3 04 90 40  	neg	s1, s1

2004098c <.LBB0_37>:
2004098c: 22 45        	clw	a0, 8(csp)
2004098e: d2 55        	clw	a1, 52(csp)
; 	if (any < 0) {
20040990: 63 c3 05 00  	bltz	a1, 0x20040996 <.LBB0_39>
20040994: 26 85        	mv	a0, s1

20040996 <.LBB0_39>:
; 	return (acc);
20040996: e2 74        	clc	cs1, 56(csp)
20040998: 06 64        	clc	cs0, 64(csp)
2004099a: a6 60        	clc	cra, 72(csp)
2004099c: 61 61        	cincoffset	csp, csp, 80
2004099e: 82 80        	cret

200409a0 <pvsprintf(char*, char const*, void*)>:
; {
200409a0: 59 71        	cincoffset	csp, csp, -112
200409a2: 86 f4        	csc	cra, 104(csp)
200409a4: a2 f0        	csc	cs0, 96(csp)
200409a6: a6 ec        	csc	cs1, 88(csp)
200409a8: b2 e4        	csc	ca2, 72(csp)
200409aa: db 02 a5 fe  	cmove	ct0, ca0
200409ae: 01 46        	mv	a2, zero
200409b0: 81 40        	mv	ra, zero
200409b2: 81 44        	mv	s1, zero
200409b4: 81 46        	mv	a3, zero
200409b6: 02 d6        	csw	zero, 44(csp)
200409b8: 0d 43        	addi	t1, zero, 3
200409ba: 5b 97 81 ab  	cincoffset	ca4, cgp, -1352
200409be: 5b 27 17 01  	csetbounds	ca4, ca4, 17
200409c2: 3a f0        	csc	ca4, 32(csp)
200409c4: 5b 17 f7 00  	cincoffset	ca4, ca4, 15
200409c8: 3a e4        	csc	ca4, 8(csp)

200409ca <.LBB0_58>:
200409ca: 17 47 00 00  	auipcc	ca4, 4
200409ce: 5b 17 f7 4b  	cincoffset	ca4, ca4, 1215
200409d2: 5b 27 07 02  	csetbounds	ca4, ca4, 32
200409d6: 3a ec        	csc	ca4, 24(csp)
200409d8: 2a e0        	csc	ca0, 0(csp)
200409da: 5b 87 a5 fe  	cmove	ca4, ca1

200409de <.LBB0_1>:
; 	while((cval=*format++)) {
200409de: 03 45 07 00  	clbu	a0, 0(ca4)
200409e2: 63 03 05 30  	beqz	a0, 0x20040ce8 <.LBB0_53>
200409e6: db 13 17 00  	cincoffset	ct2, ca4, 1
; 		switch(state) {
200409ea: 25 c6        	beqz	a2, 0x20040a52 <.LBB0_13>
200409ec: 63 01 66 06  	beq	a2, t1, 0x20040a4e <.LBB0_12>
200409f0: 89 47        	addi	a5, zero, 2
200409f2: 63 00 f6 08  	beq	a2, a5, 0x20040a72 <.LBB0_15>
;                 for(x=0;x<fmt_cnt;x++) { *lptr++ = *pfmt++; }
200409f6: 63 43 90 00  	bgtz	s1, 0x200409fc <.LBB0_7>
200409fa: 81 44        	mv	s1, zero

200409fc <.LBB0_7>:
200409fc: db 87 a5 fe  	cmove	ca5, ca1
;                 for(x=0;x<fmt_cnt;x++) { *lptr++ = *pfmt++; }
20040a00: 99 c8        	beqz	s1, 0x20040a16 <.LBB0_9>

20040a02 <.LBB0_8>:
20040a02: 83 85 07 00  	clb	a1, 0(ca5)
20040a06: db 97 17 00  	cincoffset	ca5, ca5, 1
20040a0a: 23 80 b2 00  	csb	a1, 0(ct0)
20040a0e: db 92 12 00  	cincoffset	ct0, ct0, 1
20040a12: fd 14        	addi	s1, s1, -1
20040a14: fd f4        	bnez	s1, 0x20040a02 <.LBB0_8>

20040a16 <.LBB0_9>:
20040a16: 01 46        	mv	a2, zero
20040a18: 85 44        	addi	s1, zero, 1
20040a1a: db 05 a7 fe  	cmove	ca1, ca4
20040a1e: 81 40        	mv	ra, zero
20040a20: 81 46        	mv	a3, zero
20040a22: 02 d6        	csw	zero, 44(csp)
20040a24: 5b 87 a3 fe  	cmove	ca4, ct2
; 				if(cval == '%') {
20040a28: 13 04 50 02  	addi	s0, zero, 37
20040a2c: e3 09 85 fa  	beq	a0, s0, 0x200409de <.LBB0_1>
20040a30: 93 05 30 02  	addi	a1, zero, 35
20040a34: 63 19 b5 02  	bne	a0, a1, 0x20040a66 <.LBB0_14>
20040a38: 81 40        	mv	ra, zero
20040a3a: 81 44        	mv	s1, zero
20040a3c: 81 46        	mv	a3, zero
20040a3e: 05 45        	addi	a0, zero, 1
20040a40: 2a d6        	csw	a0, 44(csp)
20040a42: 09 46        	addi	a2, zero, 2
20040a44: db 85 a7 fe  	cmove	ca1, ca5
20040a48: 5b 87 a3 fe  	cmove	ca4, ct2
20040a4c: 49 bf        	j	0x200409de <.LBB0_1>

20040a4e <.LBB0_12>:
20040a4e: 36 84        	mv	s0, a3
20040a50: 15 a8        	j	0x20040a84 <.LBB0_16>

20040a52 <.LBB0_13>:
; 				if(cval == '%') {
20040a52: 13 05 b5 fd  	addi	a0, a0, -37
20040a56: 13 36 15 00  	seqz	a2, a0
20040a5a: 33 35 a0 00  	snez	a0, a0
20040a5e: aa 94        	add	s1, s1, a0
20040a60: 5b 87 a3 fe  	cmove	ca4, ct2
20040a64: ad bf        	j	0x200409de <.LBB0_1>

20040a66 <.LBB0_14>:
20040a66: db 85 a7 fe  	cmove	ca1, ca5
20040a6a: b2 80        	mv	ra, a2
20040a6c: b2 84        	mv	s1, a2
20040a6e: b2 86        	mv	a3, a2
20040a70: 32 d6        	csw	a2, 44(csp)

20040a72 <.LBB0_15>:
20040a72: 36 84        	mv	s0, a3
20040a74: 85 46        	addi	a3, zero, 1
20040a76: 0d 46        	addi	a2, zero, 3
20040a78: 5b 87 a3 fe  	cmove	ca4, ct2
; 				if(cval == '0') {
20040a7c: 93 07 00 03  	addi	a5, zero, 48
20040a80: e3 0f f5 f4  	beq	a0, a5, 0x200409de <.LBB0_1>

20040a84 <.LBB0_16>:
; 				switch(cval) {
20040a84: 13 06 80 05  	addi	a2, zero, 88
20040a88: a6 66        	clc	ca3, 72(csp)
20040a8a: 63 07 c5 04  	beq	a0, a2, 0x20040ad8 <.LBB0_25>
20040a8e: 13 06 30 06  	addi	a2, zero, 99
20040a92: 63 00 c5 18  	beq	a0, a2, 0x20040c12 <.LBB0_43>
20040a96: 13 06 40 06  	addi	a2, zero, 100
20040a9a: 63 02 c5 02  	beq	a0, a2, 0x20040abe <.LBB0_23>
20040a9e: 13 06 90 06  	addi	a2, zero, 105
20040aa2: 63 0e c5 00  	beq	a0, a2, 0x20040abe <.LBB0_23>
20040aa6: 13 06 30 07  	addi	a2, zero, 115
20040aaa: 63 08 c5 1a  	beq	a0, a2, 0x20040c5a <.LBB0_44>
20040aae: 13 06 80 07  	addi	a2, zero, 120
20040ab2: 63 03 c5 02  	beq	a0, a2, 0x20040ad8 <.LBB0_25>
20040ab6: 13 06 50 07  	addi	a2, zero, 117
20040aba: 63 16 c5 20  	bne	a0, a2, 0x20040cc6 <.LBB0_50>

20040abe <.LBB0_23>:
; 						d = va_arg(ap, int);
20040abe: 90 42        	clw	a2, 0(ca3)
; 	if(sign != 0 && value < 0) {
20040ac0: 13 05 b5 f8  	addi	a0, a0, -117
20040ac4: 33 35 a0 00  	snez	a0, a0
20040ac8: 93 25 06 00  	slti	a1, a2, 0
20040acc: 6d 8d        	and	a0, a0, a1
20040ace: a6 c2        	csw	s1, 68(csp)
20040ad0: a2 ca        	csw	s0, 84(csp)
20040ad2: 51 e9        	bnez	a0, 0x20040b66 <.LBB0_32>
20040ad4: b2 85        	mv	a1, a2
20040ad6: 51 a8        	j	0x20040b6a <.LBB0_33>

20040ad8 <.LBB0_25>:
20040ad8: a2 ca        	csw	s0, 84(csp)
20040ada: a6 c2        	csw	s1, 68(csp)
; 						u = va_arg(ap, uint32_t);
20040adc: db 95 46 00  	cincoffset	ca1, ca3, 4
20040ae0: 2e e8        	csc	ca1, 16(csp)
20040ae2: 8c 42        	clw	a1, 0(ca3)
; 						s = int2ascihex(u, (cval=='X'?16:0),&count);
20040ae4: 13 05 85 fa  	addi	a0, a0, -88
20040ae8: 13 35 15 00  	seqz	a0, a0
20040aec: 12 05        	slli	a0, a0, 4
; 	*ptr-- = '\0';
20040aee: 02 76        	clc	ca2, 32(csp)
20040af0: 23 08 06 00  	csb	zero, 16(ca2)
20040af4: 05 44        	addi	s0, zero, 1
20040af6: a2 64        	clc	cs1, 8(csp)
20040af8: e2 66        	clc	ca3, 24(csp)
20040afa: 41 47        	addi	a4, zero, 16
20040afc: 1e f8        	csc	ct2, 48(csp)

20040afe <.LBB0_26>:
; 		*ptr = HexTable[(value&0xf)+ulcase];
20040afe: 13 f6 f5 00  	andi	a2, a1, 15
20040b02: 49 8e        	or	a2, a2, a0
20040b04: 5b 86 c6 22  	cincoffset	ca2, ca3, a2
20040b08: 03 06 06 00  	clb	a2, 0(ca2)
20040b0c: 23 80 c4 00  	csb	a2, 0(cs1)
; 		if(value == 0) break;
20040b10: 63 e9 e5 00  	bltu	a1, a4, 0x20040b22 <.LBB0_29>
; 		value =(value>>4) &0x0fffffff;	
20040b14: 91 81        	srli	a1, a1, 4
; 	} while(ptr > str);
20040b16: 05 04        	addi	s0, s0, 1
; 		ptr--;
20040b18: db 94 f4 ff  	cincoffset	cs1, cs1, -1
; 	} while(ptr > str);
20040b1c: e3 11 e4 fe  	bne	s0, a4, 0x20040afe <.LBB0_26>
20040b20: 3d 44        	addi	s0, zero, 15

20040b22 <.LBB0_29>:
; 						lptr += write_char_cnt(lptr, size, count, hex_str, lead_zero);
20040b22: 5b 85 a2 fe  	cmove	ca0, ct0
20040b26: 86 c0        	csw	ra, 64(csp)
20040b28: 86 85        	mv	a1, ra
20040b2a: 22 86        	mv	a2, s0
20040b2c: b2 56        	clw	a3, 44(csp)
20040b2e: 56 47        	clw	a4, 84(csp)
20040b30: 16 fc        	csc	ct0, 56(csp)
20040b32: dd 22        	cjal	0x20040d18 <write_char_cnt(char*, int, int, int, int)>
20040b34: e2 72        	clc	ct0, 56(csp)
; 						lptr += write_char_cnt(lptr, size, count, hex_str, lead_zero);
20040b36: db 82 a2 22  	cincoffset	ct0, ct0, a0
20040b3a: 0d 43        	addi	t1, zero, 3
20040b3c: 42 77        	clc	ca4, 48(csp)
;                         for(x=0;x<count;x++) { *lptr++ = *s++; }
20040b3e: 19 c8        	beqz	s0, 0x20040b54 <.LBB0_31>

20040b40 <.LBB0_30>:
20040b40: 03 85 04 00  	clb	a0, 0(cs1)
20040b44: db 94 14 00  	cincoffset	cs1, cs1, 1
20040b48: 23 80 a2 00  	csb	a0, 0(ct0)
20040b4c: db 92 12 00  	cincoffset	ct0, ct0, 1
20040b50: 7d 14        	addi	s0, s0, -1
20040b52: 7d f4        	bnez	s0, 0x20040b40 <.LBB0_30>

20040b54 <.LBB0_31>:
20040b54: 01 46        	mv	a2, zero
20040b56: db 05 a7 fe  	cmove	ca1, ca4
20040b5a: 42 65        	clc	ca0, 16(csp)
20040b5c: aa e4        	csc	ca0, 72(csp)
20040b5e: d6 46        	clw	a3, 84(csp)
20040b60: 96 44        	clw	s1, 68(csp)
20040b62: 86 40        	clw	ra, 64(csp)
20040b64: ad bd        	j	0x200409de <.LBB0_1>

20040b66 <.LBB0_32>:
20040b66: b3 05 c0 40  	neg	a1, a2

20040b6a <.LBB0_33>:
20040b6a: 62 67        	clc	ca4, 24(csp)
20040b6c: 41 43        	addi	t1, zero, 16
20040b6e: 29 44        	addi	s0, zero, 10
20040b70: cd 47        	addi	a5, zero, 19
20040b72: db 96 46 00  	cincoffset	ca3, ca3, 4
20040b76: b6 e4        	csc	ca3, 72(csp)
20040b78: 13 55 f6 01  	srli	a0, a2, 31
20040b7c: 02 76        	clc	ca2, 32(csp)
; 	*ptr-- = '\0';
20040b7e: 23 08 06 00  	csb	zero, 16(ca2)
20040b82: db 14 f6 00  	cincoffset	cs1, ca2, 15

20040b86 <.LBB0_34>:
20040b86: 2e 86        	mv	a2, a1
; 		lvalue = lvalue/10;	
20040b88: b3 c5 85 02  	div	a1, a1, s0
20040b8c: b3 86 85 02  	mul	a3, a1, s0
20040b90: b3 06 d6 40  	sub	a3, a2, a3
; 		*ptr = HexTable[lvalue%10];
20040b94: db 06 d7 22  	cincoffset	ca3, ca4, a3
20040b98: 83 86 06 00  	clb	a3, 0(ca3)
; 		if(lvalue == 0) break;
20040b9c: 25 06        	addi	a2, a2, 9
; 		*ptr = HexTable[lvalue%10];
20040b9e: 23 80 d4 00  	csb	a3, 0(cs1)
; 		if(lvalue == 0) break;
20040ba2: 63 6a f6 00  	bltu	a2, a5, 0x20040bb6 <.LBB0_36>
; 		ptr--;
20040ba6: db 94 f4 ff  	cincoffset	cs1, cs1, -1
; 	} while(ptr >  str);
20040baa: 5b 96 81 ab  	cincoffset	ca2, cgp, -1352
20040bae: 5b 26 16 01  	csetbounds	ca2, ca2, 17
20040bb2: e3 6a 96 fc  	bltu	a2, s1, 0x20040b86 <.LBB0_34>

20040bb6 <.LBB0_36>:
; 	if(value < 0) {
20040bb6: 1e f8        	csc	ct2, 48(csp)
20040bb8: 09 c9        	beqz	a0, 0x20040bca <.LBB0_38>
; 		ptr--;
20040bba: 5b 95 f4 ff  	cincoffset	ca0, cs1, -1
; 		*ptr = '-';
20040bbe: 93 05 d0 02  	addi	a1, zero, 45
20040bc2: a3 8f b4 fe  	csb	a1, -1(cs1)
20040bc6: db 04 a5 fe  	cmove	cs1, ca0

20040bca <.LBB0_38>:
; 	*count = 16-(ptr-str);
20040bca: 02 75        	clc	ca0, 32(csp)
20040bcc: 5b 85 a4 28  	csub	a0, cs1, ca0
20040bd0: 33 04 a3 40  	sub	s0, t1, a0
; 						lptr += write_char_cnt(lptr, size, count, 0, lead_zero);
20040bd4: 5b 85 a2 fe  	cmove	ca0, ct0
20040bd8: 86 c0        	csw	ra, 64(csp)
20040bda: 86 85        	mv	a1, ra
20040bdc: 22 86        	mv	a2, s0
20040bde: 81 46        	mv	a3, zero
20040be0: 56 47        	clw	a4, 84(csp)
20040be2: 16 fc        	csc	ct0, 56(csp)
20040be4: 15 2a        	cjal	0x20040d18 <write_char_cnt(char*, int, int, int, int)>
;                         for(x=0;x<count;x++) { *lptr++ = *s++; }
20040be6: 63 43 80 00  	bgtz	s0, 0x20040bec <.LBB0_40>
20040bea: 01 44        	mv	s0, zero

20040bec <.LBB0_40>:
20040bec: e2 72        	clc	ct0, 56(csp)
20040bee: db 82 a2 22  	cincoffset	ct0, ct0, a0
20040bf2: 0d 43        	addi	t1, zero, 3
20040bf4: 42 77        	clc	ca4, 48(csp)
20040bf6: 86 40        	clw	ra, 64(csp)
;                         for(x=0;x<count;x++) { *lptr++ = *s++; }
20040bf8: 19 c8        	beqz	s0, 0x20040c0e <.LBB0_42>

20040bfa <.LBB0_41>:
20040bfa: 03 85 04 00  	clb	a0, 0(cs1)
20040bfe: db 94 14 00  	cincoffset	cs1, cs1, 1
20040c02: 23 80 a2 00  	csb	a0, 0(ct0)
20040c06: db 92 12 00  	cincoffset	ct0, ct0, 1
20040c0a: 7d 14        	addi	s0, s0, -1
20040c0c: 7d f4        	bnez	s0, 0x20040bfa <.LBB0_41>

20040c0e <.LBB0_42>:
20040c0e: 01 46        	mv	a2, zero
20040c10: 75 a0        	j	0x20040cbc <.LBB0_49>

20040c12 <.LBB0_43>:
; 						c = (char) va_arg(ap, int);
20040c12: 88 42        	clw	a0, 0(ca3)
20040c14: aa c0        	csw	a0, 64(csp)
20040c16: a6 c2        	csw	s1, 68(csp)
; 						c = (char) va_arg(ap, int);
20040c18: 5b 95 46 00  	cincoffset	ca0, ca3, 4
; 						lptr += write_char_cnt(lptr, size, 1, 0, 0);
20040c1c: aa e4        	csc	ca0, 72(csp)
20040c1e: 05 46        	addi	a2, zero, 1
20040c20: 5b 85 a2 fe  	cmove	ca0, ct0
20040c24: 86 85        	mv	a1, ra
20040c26: 81 46        	mv	a3, zero
20040c28: 01 47        	mv	a4, zero
20040c2a: 16 fc        	csc	ct0, 56(csp)
20040c2c: a2 ca        	csw	s0, 84(csp)
20040c2e: 5b 84 a3 fe  	cmove	cs0, ct2
20040c32: 86 84        	mv	s1, ra
; 						lptr += write_char_cnt(lptr, size, 1, 0, 0);
20040c34: d5 20        	cjal	0x20040d18 <write_char_cnt(char*, int, int, int, int)>
20040c36: a6 80        	mv	ra, s1
20040c38: 0d 43        	addi	t1, zero, 3
20040c3a: 01 46        	mv	a2, zero
; 						lptr += write_char_cnt(lptr, size, 1, 0, 0);
20040c3c: e2 75        	clc	ca1, 56(csp)
20040c3e: 5b 85 a5 22  	cincoffset	ca0, ca1, a0
;                         *lptr++ = c;
20040c42: 86 45        	clw	a1, 64(csp)
20040c44: 23 00 b5 00  	csb	a1, 0(ca0)
20040c48: db 12 15 00  	cincoffset	ct0, ca0, 1
20040c4c: db 05 a4 fe  	cmove	ca1, cs0
20040c50: 96 44        	clw	s1, 68(csp)
20040c52: d6 46        	clw	a3, 84(csp)
20040c54: 5b 07 a4 fe  	cmove	ca4, cs0
20040c58: 59 b3        	j	0x200409de <.LBB0_1>

20040c5a <.LBB0_44>:
20040c5a: a2 ca        	csw	s0, 84(csp)
20040c5c: 1e f8        	csc	ct2, 48(csp)
20040c5e: a6 c2        	csw	s1, 68(csp)
; 						s = va_arg(ap, char *);
20040c60: 5b 85 f6 fe  	cgetaddr	a0, ca3
20040c64: 1d 05        	addi	a0, a0, 7
20040c66: 61 99        	andi	a0, a0, -8
20040c68: 5b 85 a6 20  	csetaddr	ca0, ca3, a0
20040c6c: aa e4        	csc	ca0, 72(csp)
20040c6e: 08 61        	clc	ca0, 0(ca0)
20040c70: 2a fc        	csc	ca0, 56(csp)
20040c72: db 84 a2 fe  	cmove	cs1, ct0
20040c76: 86 c0        	csw	ra, 64(csp)
; 						count = (int)strlen(s);
20040c78: 25 2e        	cjal	0x20040fb0 <strlen(char const*)>
20040c7a: 2a 84        	mv	s0, a0
; 						lptr += write_char_cnt(lptr, size, count, 0, 0);
20040c7c: 5b 85 a4 fe  	cmove	ca0, cs1
20040c80: 86 45        	clw	a1, 64(csp)
20040c82: 22 86        	mv	a2, s0
20040c84: 81 46        	mv	a3, zero
20040c86: 01 47        	mv	a4, zero
20040c88: 41 28        	cjal	0x20040d18 <write_char_cnt(char*, int, int, int, int)>
;                         for(x=0;x<count;x++) { *lptr++ = *s++; }
20040c8a: 63 43 80 00  	bgtz	s0, 0x20040c90 <.LBB0_46>
20040c8e: 01 44        	mv	s0, zero

20040c90 <.LBB0_46>:
20040c90: db 82 a4 22  	cincoffset	ct0, cs1, a0
20040c94: 0d 43        	addi	t1, zero, 3
20040c96: 42 77        	clc	ca4, 48(csp)
20040c98: 86 40        	clw	ra, 64(csp)
20040c9a: e2 75        	clc	ca1, 56(csp)
;                         for(x=0;x<count;x++) { *lptr++ = *s++; }
20040c9c: 19 c8        	beqz	s0, 0x20040cb2 <.LBB0_48>

20040c9e <.LBB0_47>:
20040c9e: 03 85 05 00  	clb	a0, 0(ca1)
20040ca2: db 95 15 00  	cincoffset	ca1, ca1, 1
20040ca6: 23 80 a2 00  	csb	a0, 0(ct0)
20040caa: db 92 12 00  	cincoffset	ct0, ct0, 1
20040cae: 7d 14        	addi	s0, s0, -1
20040cb0: 7d f4        	bnez	s0, 0x20040c9e <.LBB0_47>

20040cb2 <.LBB0_48>:
20040cb2: 01 46        	mv	a2, zero
; 						s = va_arg(ap, char *);
20040cb4: 26 65        	clc	ca0, 72(csp)
20040cb6: 5b 15 85 00  	cincoffset	ca0, ca0, 8
20040cba: aa e4        	csc	ca0, 72(csp)

20040cbc <.LBB0_49>:
20040cbc: db 05 a7 fe  	cmove	ca1, ca4
20040cc0: d6 46        	clw	a3, 84(csp)
20040cc2: 96 44        	clw	s1, 68(csp)
20040cc4: 29 bb        	j	0x200409de <.LBB0_1>

20040cc6 <.LBB0_50>:
; 						if(cval >= 0x30 && cval < 0x3a) {
20040cc6: 13 06 05 fd  	addi	a2, a0, -48
20040cca: 13 76 f6 0f  	andi	a2, a2, 255
20040cce: a9 46        	addi	a3, zero, 10
20040cd0: 63 77 d6 00  	bgeu	a2, a3, 0x20040cde <.LBB0_52>
20040cd4: 33 86 d0 02  	mul	a2, ra, a3
20040cd8: 32 95        	add	a0, a0, a2
20040cda: 93 00 05 fd  	addi	ra, a0, -48

20040cde <.LBB0_52>:
20040cde: 0d 46        	addi	a2, zero, 3
20040ce0: a2 86        	mv	a3, s0
20040ce2: 5b 87 a3 fe  	cmove	ca4, ct2
20040ce6: e5 b9        	j	0x200409de <.LBB0_1>

20040ce8 <.LBB0_53>:
;     for(x=0;x<fmt_cnt;x++) { *lptr++ = *pfmt++; }
20040ce8: 63 4d 90 00  	bgtz	s1, 0x20040d02 <.LBB0_56>
20040cec: 81 44        	mv	s1, zero
20040cee: 11 a8        	j	0x20040d02 <.LBB0_56>

20040cf0 <.LBB0_55>:
;     for(x=0;x<fmt_cnt;x++) { *lptr++ = *pfmt++; }
20040cf0: 03 85 05 00  	clb	a0, 0(ca1)
20040cf4: db 95 15 00  	cincoffset	ca1, ca1, 1
20040cf8: 23 80 a2 00  	csb	a0, 0(ct0)
20040cfc: db 92 12 00  	cincoffset	ct0, ct0, 1
20040d00: fd 14        	addi	s1, s1, -1

20040d02 <.LBB0_56>:
20040d02: fd f4        	bnez	s1, 0x20040cf0 <.LBB0_55>
;     return( (int)(lptr-line));
20040d04: 02 65        	clc	ca0, 0(csp)
20040d06: 5b 85 a2 28  	csub	a0, ct0, ca0
;     *lptr = '\0';
20040d0a: 23 80 02 00  	csb	zero, 0(ct0)
;     return( (int)(lptr-line));
20040d0e: e6 64        	clc	cs1, 88(csp)
20040d10: 06 74        	clc	cs0, 96(csp)
20040d12: a6 70        	clc	cra, 104(csp)
20040d14: 65 61        	cincoffset	csp, csp, 112
20040d16: 82 80        	cret

20040d18 <write_char_cnt(char*, int, int, int, int)>:
; {
20040d18: 7d 71        	cincoffset	csp, csp, -16
20040d1a: 22 e4        	csc	cs0, 8(csp)
; 	char c = (lead_zero != 0) ? '0' : ' ';
20040d1c: 33 33 e0 00  	snez	t1, a4
20040d20: 93 07 00 03  	addi	a5, zero, 48
20040d24: 19 e3        	bnez	a4, 0x20040d2a <.LBB1_2>
20040d26: 93 07 00 02  	addi	a5, zero, 32

20040d2a <.LBB1_2>:
; 	if(hex_str != 0 && lead_zero != 0) {
20040d2a: b3 32 d0 00  	snez	t0, a3
20040d2e: b3 f6 62 00  	and	a3, t0, t1
20040d32: 99 ce        	beqz	a3, 0x20040d50 <.LBB1_4>
20040d34: 93 06 00 03  	addi	a3, zero, 48
;         *str++ = '0';
20040d38: 23 00 d5 00  	csb	a3, 0(ca0)
20040d3c: 93 06 80 07  	addi	a3, zero, 120
;         *str++ = 'x';
20040d40: a3 00 d5 00  	csb	a3, 1(ca0)
20040d44: 5b 15 25 00  	cincoffset	ca0, ca0, 2
20040d48: 09 43        	addi	t1, zero, 2
; 	if(leading > used) {
20040d4a: 63 46 b6 00  	blt	a2, a1, 0x20040d56 <.LBB1_5>
20040d4e: 3d a0        	j	0x20040d7c <.LBB1_9>

20040d50 <.LBB1_4>:
20040d50: 01 43        	mv	t1, zero
; 	if(leading > used) {
20040d52: 63 55 b6 02  	bge	a2, a1, 0x20040d7c <.LBB1_9>

20040d56 <.LBB1_5>:
20040d56: 81 46        	mv	a3, zero
; 		fill = leading-used;
20040d58: 91 8d        	sub	a1, a1, a2
20040d5a: 93 03 d0 07  	addi	t2, zero, 125

20040d5e <.LBB1_6>:
; 		for(i=0;(i<fill)&&(i<126);i++) {
20040d5e: 33 a6 b6 00  	slt	a2, a3, a1
20040d62: 13 46 16 00  	xori	a2, a2, 1
20040d66: 33 b4 d3 00  	sltu	s0, t2, a3
20040d6a: 41 8e        	or	a2, a2, s0
20040d6c: 19 e6        	bnez	a2, 0x20040d7a <.LBB1_8>
; 			*str++ = c;
20040d6e: 23 00 f5 00  	csb	a5, 0(ca0)
20040d72: 5b 15 15 00  	cincoffset	ca0, ca0, 1
; 		for(i=0;(i<fill)&&(i<126);i++) {
20040d76: 85 06        	addi	a3, a3, 1
20040d78: dd b7        	j	0x20040d5e <.LBB1_6>

20040d7a <.LBB1_8>:
20040d7a: 36 93        	add	t1, t1, a3

20040d7c <.LBB1_9>:
20040d7c: 93 35 17 00  	seqz	a1, a4
; 	if(hex_str != 0 && lead_zero == 0) {
20040d80: b3 f5 b2 00  	and	a1, t0, a1
20040d84: 91 c9        	beqz	a1, 0x20040d98 <.LBB1_11>
20040d86: 93 05 00 03  	addi	a1, zero, 48
;         *str++ = '0';
20040d8a: 23 00 b5 00  	csb	a1, 0(ca0)
20040d8e: 93 05 80 07  	addi	a1, zero, 120
;         *str++ = 'x';
20040d92: a3 00 b5 00  	csb	a1, 1(ca0)
;         cnt+=2;
20040d96: 09 03        	addi	t1, t1, 2

20040d98 <.LBB1_11>:
; 	return cnt;
20040d98: 1a 85        	mv	a0, t1
20040d9a: 22 64        	clc	cs0, 8(csp)
20040d9c: 41 61        	cincoffset	csp, csp, 16
20040d9e: 82 80        	cret

20040da0 <cfprintf(unsigned int**, char const*, ...)>:
; {
20040da0: 5b 11 01 b0  	cincoffset	csp, csp, -1280
20040da4: 23 3c 11 4e  	csc	cra, 1272(csp)
20040da8: 23 38 81 4e  	csc	cs0, 1264(csp)
20040dac: 23 34 91 4e  	csc	cs1, 1256(csp)
20040db0: 5b 14 01 50  	cincoffset	cs0, csp, 1280
20040db4: 5b 06 f1 fe  	cgetaddr	a2, csp
20040db8: 13 76 06 f8  	andi	a2, a2, -128
20040dbc: 5b 01 c1 20  	csetaddr	csp, csp, a2
20040dc0: b0 18        	cincoffset	ca2, csp, 120
20040dc2: 5b 26 86 00  	csetbounds	ca2, ca2, 8
20040dc6: db 16 04 00  	cincoffset	ca3, cs0, 0
; 		va_start(ap, format);
20040dca: 14 e2        	csc	ca3, 0(ca2)
; 		int c_cnt = pvsprintf(ptr, format, ap);
20040dcc: 66 76        	clc	ca2, 120(csp)
20040dce: aa f4        	csc	ca0, 104(csp)
20040dd0: 08 01        	cincoffset	ca0, csp, 128
20040dd2: 5b 25 05 40  	csetbounds	ca0, ca0, 1024
; 		int c_cnt = pvsprintf(ptr, format, ap);
20040dd6: aa f8        	csc	ca0, 112(csp)
20040dd8: e1 36        	cjal	0x200409a0 <pvsprintf(char*, char const*, void*)>
20040dda: aa 84        	mv	s1, a0
; 		write((int)stream, line, c_cnt);
20040ddc: 26 75        	clc	ca0, 104(csp)
20040dde: 5b 05 f5 fe  	cgetaddr	a0, ca0
20040de2: c6 75        	clc	ca1, 112(csp)
20040de4: 26 86        	mv	a2, s1
20040de6: ef 10 70 67  	cjal	0x20042c5c <_write(int, char const*, int)>
; 		return c_cnt;
20040dea: 26 85        	mv	a0, s1
20040dec: 5b 11 04 b0  	cincoffset	csp, cs0, -1280
20040df0: 83 34 81 4e  	clc	cs1, 1256(csp)
20040df4: 03 34 01 4f  	clc	cs0, 1264(csp)
20040df8: 83 30 81 4f  	clc	cra, 1272(csp)
20040dfc: 5b 11 01 50  	cincoffset	csp, csp, 1280
20040e00: 82 80        	cret

20040e02 <pfprintf(unsigned int**, char const*, ...)>:
; {
20040e02: 09 71        	cincoffset	csp, csp, -384
20040e04: 86 fe        	csc	cra, 376(csp)
20040e06: a2 fa        	csc	cs0, 368(csp)
20040e08: 00 03        	cincoffset	cs0, csp, 384
20040e0a: 5b 05 f1 fe  	cgetaddr	a0, csp
20040e0e: 01 99        	andi	a0, a0, -32
20040e10: 5b 01 a1 20  	csetaddr	csp, csp, a0
20040e14: 13 05 00 05  	addi	a0, zero, 80
; 		*ptr++ = 'P';
20040e18: 23 00 a1 02  	csb	a0, 32(csp)
20040e1c: 08 10        	cincoffset	ca0, csp, 32
20040e1e: 5b 25 05 14  	csetbounds	ca0, ca0, 320
20040e22: 30 08        	cincoffset	ca2, csp, 24
20040e24: 5b 26 86 00  	csetbounds	ca2, ca2, 8
20040e28: db 16 04 00  	cincoffset	ca3, cs0, 0
; 		va_start(ap, format);
20040e2c: 14 e2        	csc	ca3, 0(ca2)
; 		int c_cnt = pvsprintf(ptr, format, ap);
20040e2e: 62 66        	clc	ca2, 24(csp)
; 		*ptr++ = '0';  //hardcode to 0 for git psi_libc, cpu id is/was for print server
20040e30: 5b 15 25 00  	cincoffset	ca0, ca0, 2
20040e34: 93 06 00 03  	addi	a3, zero, 48
; 		*ptr++ = '0';  //hardcode to 0 for git psi_libc, cpu id is/was for print server
20040e38: a3 00 d1 02  	csb	a3, 33(csp)
; 		int c_cnt = pvsprintf(ptr, format, ap);
20040e3c: 95 36        	cjal	0x200409a0 <pvsprintf(char*, char const*, void*)>
; 		return c_cnt;
20040e3e: 5b 11 04 e8  	cincoffset	csp, cs0, -384
20040e42: 56 74        	clc	cs0, 368(csp)
20040e44: f6 70        	clc	cra, 376(csp)
20040e46: 19 61        	cincoffset	csp, csp, 384
20040e48: 82 80        	cret

20040e4a <psprintf(char*, char const*, ...)>:
; {
20040e4a: 7d 71        	cincoffset	csp, csp, -16
20040e4c: 06 e4        	csc	cra, 8(csp)
20040e4e: 5b 16 01 00  	cincoffset	ca2, csp, 0
20040e52: 5b 26 86 00  	csetbounds	ca2, ca2, 8
20040e56: 14 08        	cincoffset	ca3, csp, 16
;     va_start(ap, format);
20040e58: 14 e2        	csc	ca3, 0(ca2)
;     int c_cnt = pvsprintf(line, format, ap);
20040e5a: 02 66        	clc	ca2, 0(csp)
20040e5c: 91 36        	cjal	0x200409a0 <pvsprintf(char*, char const*, void*)>
;     return c_cnt;
20040e5e: a2 60        	clc	cra, 8(csp)
20040e60: 41 61        	cincoffset	csp, csp, 16
20040e62: 82 80        	cret

20040e64 <print_test_header(char const*)>:
; {
20040e64: 3d 71        	cincoffset	csp, csp, -32
20040e66: 06 ec        	csc	cra, 24(csp)
20040e68: 22 e8        	csc	cs0, 16(csp)
20040e6a: 26 e4        	csc	cs1, 8(csp)
20040e6c: 5b 04 a5 fe  	cmove	cs0, ca0

20040e70 <.LBB5_1>:
; 	pprintf("===================================================\n");
20040e70: 97 34 00 00  	auipcc	cs1, 3
20040e74: db 94 94 78  	cincoffset	cs1, cs1, 1929
20040e78: db a4 54 03  	csetbounds	cs1, cs1, 53
20040e7c: db 85 a4 fe  	cmove	ca1, cs1
20040e80: 49 37        	cjal	0x20040e02 <pfprintf(unsigned int**, char const*, ...)>

20040e82 <.LBB5_2>:
; 	pprintf(" Starting Test %s\n", test);
20040e82: 97 35 00 00  	auipcc	ca1, 3
20040e86: db 95 b5 7e  	cincoffset	ca1, ca1, 2027
20040e8a: db a5 35 01  	csetbounds	ca1, ca1, 19
20040e8e: 22 e0        	csc	cs0, 0(csp)
20040e90: 8d 3f        	cjal	0x20040e02 <pfprintf(unsigned int**, char const*, ...)>
; 	pprintf("===================================================\n");
20040e92: db 85 a4 fe  	cmove	ca1, cs1
20040e96: a2 64        	clc	cs1, 8(csp)
20040e98: 42 64        	clc	cs0, 16(csp)
20040e9a: e2 60        	clc	cra, 24(csp)
20040e9c: 05 61        	cincoffset	csp, csp, 32
20040e9e: 95 b7        	j	0x20040e02 <pfprintf(unsigned int**, char const*, ...)>

20040ea0 <print_array(unsigned int*, char const*, unsigned int)>:
; void print_array(uint32_t * arr, const char * str, uint32_t num) {
20040ea0: 39 71        	cincoffset	csp, csp, -64
20040ea2: 06 fc        	csc	cra, 56(csp)
20040ea4: 22 f8        	csc	cs0, 48(csp)
20040ea6: 26 f4        	csc	cs1, 40(csp)
20040ea8: 32 d2        	csw	a2, 36(csp)
20040eaa: 2e ec        	csc	ca1, 24(csp)
20040eac: 2a e8        	csc	ca0, 16(csp)
20040eae: 81 44        	mv	s1, zero

20040eb0 <.LBB6_4>:
20040eb0: 17 34 00 00  	auipcc	cs0, 3
20040eb4: 5b 14 e4 77  	cincoffset	cs0, cs0, 1918
20040eb8: 5b 24 64 01  	csetbounds	cs0, cs0, 22

20040ebc <.LBB6_1>:
; 	for(i=0;i<num;i++) 
20040ebc: 12 55        	clw	a0, 36(csp)
20040ebe: 63 01 95 02  	beq	a0, s1, 0x20040ee0 <.LBB6_3>
; 		pprintf("%s word %d is 0x%08x\n",str,i,hw_read32(arr+i));
20040ec2: 13 95 24 00  	slli	a0, s1, 2
20040ec6: c2 65        	clc	ca1, 16(csp)
20040ec8: 5b 85 a5 22  	cincoffset	ca0, ca1, a0
; inline uint32_t hw_read32(volatile uint32_t* addr) { return *addr; }
20040ecc: 08 41        	clw	a0, 0(ca0)
; 		pprintf("%s word %d is 0x%08x\n",str,i,hw_read32(arr+i));
20040ece: 2a c6        	csw	a0, 12(csp)
20040ed0: 26 c4        	csw	s1, 8(csp)
20040ed2: 62 65        	clc	ca0, 24(csp)
20040ed4: 2a e0        	csc	ca0, 0(csp)
20040ed6: db 05 a4 fe  	cmove	ca1, cs0
20040eda: 25 37        	cjal	0x20040e02 <pfprintf(unsigned int**, char const*, ...)>
; 	for(i=0;i<num;i++) 
20040edc: 85 04        	addi	s1, s1, 1
20040ede: f9 bf        	j	0x20040ebc <.LBB6_1>

20040ee0 <.LBB6_3>:
; }
20040ee0: a2 74        	clc	cs1, 40(csp)
20040ee2: 42 74        	clc	cs0, 48(csp)
20040ee4: e2 70        	clc	cra, 56(csp)
20040ee6: 21 61        	cincoffset	csp, csp, 64
20040ee8: 82 80        	cret
20040eea: 00 00        	unimp	

20040eec <fputc(int, unsigned int**)>:
; {
20040eec: 7d 71        	cincoffset	csp, csp, -16
20040eee: 06 e4        	csc	cra, 8(csp)
20040ef0: 2a c2        	csw	a0, 4(csp)
; 	write((int)stream, (const char*)&c, 1);
20040ef2: 5b 85 f5 fe  	cgetaddr	a0, ca1
20040ef6: 4c 00        	cincoffset	ca1, csp, 4
20040ef8: db a5 45 00  	csetbounds	ca1, ca1, 4
; 	write((int)stream, (const char*)&c, 1);
20040efc: 05 46        	addi	a2, zero, 1
20040efe: ef 10 f0 55  	cjal	0x20042c5c <_write(int, char const*, int)>
; 	return c;
20040f02: 12 45        	clw	a0, 4(csp)
20040f04: a2 60        	clc	cra, 8(csp)
20040f06: 41 61        	cincoffset	csp, csp, 16
20040f08: 82 80        	cret
20040f0a: 00 00        	unimp	

20040f0c <fputs(char const*, unsigned int**)>:
; {
20040f0c: 3d 71        	cincoffset	csp, csp, -32
20040f0e: 06 ec        	csc	cra, 24(csp)
20040f10: 22 e8        	csc	cs0, 16(csp)
20040f12: 26 e4        	csc	cs1, 8(csp)
20040f14: 5b 04 a5 fe  	cmove	cs0, ca0
; 	return write((int)stream, (char *)s, strlen(s));
20040f18: db 84 f5 fe  	cgetaddr	s1, ca1
20040f1c: 51 28        	cjal	0x20040fb0 <strlen(char const*)>
20040f1e: 2a 86        	mv	a2, a0
20040f20: 26 85        	mv	a0, s1
20040f22: db 05 a4 fe  	cmove	ca1, cs0
20040f26: a2 64        	clc	cs1, 8(csp)
20040f28: 42 64        	clc	cs0, 16(csp)
20040f2a: e2 60        	clc	cra, 24(csp)
20040f2c: 05 61        	cincoffset	csp, csp, 32
20040f2e: 6f 10 f0 52  	j	0x20042c5c <_write(int, char const*, int)>
20040f32: 00 00        	unimp	

20040f34 <fgets(char*, int, unsigned int**)>:
; {
20040f34: 39 71        	cincoffset	csp, csp, -64
20040f36: 06 fc        	csc	cra, 56(csp)
20040f38: 22 f8        	csc	cs0, 48(csp)
20040f3a: 26 f4        	csc	cs1, 40(csp)
20040f3c: 2e d0        	csw	a1, 32(csp)
20040f3e: db 04 a5 fe  	cmove	cs1, ca0
20040f42: 01 44        	mv	s0, zero
20040f44: db 05 f6 fe  	cgetaddr	a1, ca2
20040f48: 2e ce        	csw	a1, 28(csp)
20040f4a: db 15 71 02  	cincoffset	ca1, csp, 39
20040f4e: db a5 15 00  	csetbounds	ca1, ca1, 1
20040f52: 2e e8        	csc	ca1, 16(csp)
20040f54: 2a e4        	csc	ca0, 8(csp)

20040f56 <.LBB0_1>:
; 		read((int)stream, &c, 1);
20040f56: 05 46        	addi	a2, zero, 1
20040f58: 72 45        	clw	a0, 28(csp)
20040f5a: c2 65        	clc	ca1, 16(csp)
20040f5c: ef 10 30 53  	cjal	0x20042c8e <_read(int, char*, int)>
; 		*ptr++ = c;
20040f60: 03 45 71 02  	clbu	a0, 39(csp)
20040f64: 23 80 a4 00  	csb	a0, 0(cs1)
; 	} while(cnt++ < size && c != '\n');
20040f68: 82 55        	clw	a1, 32(csp)
20040f6a: b3 25 b4 00  	slt	a1, s0, a1
20040f6e: 05 04        	addi	s0, s0, 1
20040f70: 59 15        	addi	a0, a0, -10
20040f72: 33 35 a0 00  	snez	a0, a0
20040f76: e9 8d        	and	a1, a1, a0
; 		*ptr++ = c;
20040f78: db 94 14 00  	cincoffset	cs1, cs1, 1
; 	} while(cnt++ < size && c != '\n');
20040f7c: e9 fd        	bnez	a1, 0x20040f56 <.LBB0_1>
; 	*ptr = '\0';
20040f7e: 23 80 04 00  	csb	zero, 0(cs1)
; 	return s;
20040f82: 22 65        	clc	ca0, 8(csp)
20040f84: a2 74        	clc	cs1, 40(csp)
20040f86: 42 74        	clc	cs0, 48(csp)
20040f88: e2 70        	clc	cra, 56(csp)
20040f8a: 21 61        	cincoffset	csp, csp, 64
20040f8c: 82 80        	cret
20040f8e: 00 00        	unimp	

20040f90 <fgetc(unsigned int**)>:
; {
20040f90: 7d 71        	cincoffset	csp, csp, -16
; 	read((int)stream, &buf, 1);
20040f92: 06 e4        	csc	cra, 8(csp)
20040f94: 5b 05 f5 fe  	cgetaddr	a0, ca0
20040f98: db 15 71 00  	cincoffset	ca1, csp, 7
20040f9c: db a5 15 00  	csetbounds	ca1, ca1, 1
; 	read((int)stream, &buf, 1);
20040fa0: 05 46        	addi	a2, zero, 1
20040fa2: ef 10 d0 4e  	cjal	0x20042c8e <_read(int, char*, int)>
; 	return (int) buf;
20040fa6: 03 45 71 00  	clbu	a0, 7(csp)
20040faa: a2 60        	clc	cra, 8(csp)
20040fac: 41 61        	cincoffset	csp, csp, 16
20040fae: 82 80        	cret

20040fb0 <strlen(char const*)>:
; {
20040fb0: 81 45        	mv	a1, zero

20040fb2 <.LBB0_1>:
; 	while(*s++ != 0)i++;
20040fb2: 03 46 05 00  	clbu	a2, 0(ca0)
20040fb6: 09 c6        	beqz	a2, 0x20040fc0 <.LBB0_3>
20040fb8: 5b 15 15 00  	cincoffset	ca0, ca0, 1
20040fbc: 85 05        	addi	a1, a1, 1
20040fbe: d5 bf        	j	0x20040fb2 <.LBB0_1>

20040fc0 <.LBB0_3>:
; 	return i;
20040fc0: 2e 85        	mv	a0, a1
20040fc2: 82 80        	cret

20040fc4 <strcmp(char const*, char const*)>:
; 	for(;*s1 == *s2;++s1, ++s2) {
20040fc4: 03 46 05 00  	clbu	a2, 0(ca0)
20040fc8: 83 c6 05 00  	clbu	a3, 0(ca1)
20040fcc: 63 18 d6 00  	bne	a2, a3, 0x20040fdc <.LBB0_4>
; 		if(*s1 == 0) return 0;
20040fd0: 19 ca        	beqz	a2, 0x20040fe6 <.LBB0_7>
; 	for(;*s1 == *s2;++s1, ++s2) {
20040fd2: 5b 15 15 00  	cincoffset	ca0, ca0, 1
20040fd6: db 95 15 00  	cincoffset	ca1, ca1, 1
20040fda: ed b7        	j	0x20040fc4 <strcmp(char const*, char const*)>

20040fdc <.LBB0_4>:
20040fdc: 7d 55        	addi	a0, zero, -1
; 	return *(uint8_t *)s1 < *(uint8_t *)s2 ? -1 : 1;	
20040fde: 63 63 d6 00  	bltu	a2, a3, 0x20040fe4 <.LBB0_6>
20040fe2: 05 45        	addi	a0, zero, 1

20040fe4 <.LBB0_6>:
; }
20040fe4: 82 80        	cret

20040fe6 <.LBB0_7>:
20040fe6: 01 45        	mv	a0, zero
; }
20040fe8: 82 80        	cret
20040fea: 00 00        	unimp	

20040fec <memset_rand(void*, unsigned int)>:
; {
20040fec: 3d 71        	cincoffset	csp, csp, -32
20040fee: 06 ec        	csc	cra, 24(csp)
20040ff0: 22 e8        	csc	cs0, 16(csp)
20040ff2: 26 e4        	csc	cs1, 8(csp)
20040ff4: ae 84        	mv	s1, a1
20040ff6: 5b 04 a5 fe  	cmove	cs0, ca0
20040ffa: 2a e0        	csc	ca0, 0(csp)
; 	while (len-- > 0) {
20040ffc: 99 c8        	beqz	s1, 0x20041012 <.LBB0_2>

20040ffe <.LBB0_1>:
20040ffe: fd 14        	addi	s1, s1, -1
; 		*dest++ = rand();
20041000: ef f0 2f f1  	cjal	0x20040712 <rand()>
20041004: db 15 14 00  	cincoffset	ca1, cs0, 1
20041008: 23 00 a4 00  	csb	a0, 0(cs0)
2004100c: 5b 84 a5 fe  	cmove	cs0, ca1
; 	while (len-- > 0) {
20041010: fd f4        	bnez	s1, 0x20040ffe <.LBB0_1>

20041012 <.LBB0_2>:
; 	return destaddr;
20041012: 02 65        	clc	ca0, 0(csp)
20041014: a2 64        	clc	cs1, 8(csp)
20041016: 42 64        	clc	cs0, 16(csp)
20041018: e2 60        	clc	cra, 24(csp)
2004101a: 05 61        	cincoffset	csp, csp, 32
2004101c: 82 80        	cret
2004101e: 00 00        	unimp	

20041020 <memcmp(void const*, void const*, unsigned int)>:
;   while (len-- > 0 && (retval=*dest++-*src++) == 0);
20041020: 93 06 16 00  	addi	a3, a2, 1

20041024 <.LBB0_1>:
20041024: fd 16        	addi	a3, a3, -1
20041026: 81 ce        	beqz	a3, 0x2004103e <.LBB0_3>
20041028: 03 46 05 00  	clbu	a2, 0(ca0)
2004102c: 03 c7 05 00  	clbu	a4, 0(ca1)
20041030: 5b 15 15 00  	cincoffset	ca0, ca0, 1
20041034: db 95 15 00  	cincoffset	ca1, ca1, 1
20041038: 19 8e        	sub	a2, a2, a4
2004103a: 6d d6        	beqz	a2, 0x20041024 <.LBB0_1>
2004103c: 11 a0        	j	0x20041040 <.LBB0_4>

2004103e <.LBB0_3>:
2004103e: 01 46        	mv	a2, zero

20041040 <.LBB0_4>:
;   return retval;
20041040: 32 85        	mv	a0, a2
20041042: 82 80        	cret

20041044 <strcpy(char*, char const*)>:
; {
20041044: 5b 06 a5 fe  	cmove	ca2, ca0

20041048 <.LBB0_1>:
; 	while((*dst++ = *src++) != '\0');
20041048: 83 c6 05 00  	clbu	a3, 0(ca1)
2004104c: db 95 15 00  	cincoffset	ca1, ca1, 1
20041050: 5b 17 16 00  	cincoffset	ca4, ca2, 1
20041054: 23 00 d6 00  	csb	a3, 0(ca2)
20041058: 5b 06 a7 fe  	cmove	ca2, ca4
2004105c: f5 f6        	bnez	a3, 0x20041048 <.LBB0_1>
; 	return dest;
2004105e: 82 80        	cret

20041060 <memcpy(void*, void const*, unsigned int)>:
; {
20041060: db 06 a5 fe  	cmove	ca3, ca0
;   while (len-- > 0)
20041064: 19 ca        	beqz	a2, 0x2004107a <.LBB0_2>

20041066 <.LBB0_1>:
;     *dest++ = *src++;
20041066: 03 87 05 00  	clb	a4, 0(ca1)
2004106a: db 95 15 00  	cincoffset	ca1, ca1, 1
2004106e: 23 80 e6 00  	csb	a4, 0(ca3)
20041072: db 96 16 00  	cincoffset	ca3, ca3, 1
;   while (len-- > 0)
20041076: 7d 16        	addi	a2, a2, -1
20041078: 7d f6        	bnez	a2, 0x20041066 <.LBB0_1>

2004107a <.LBB0_2>:
;   return destaddr;
2004107a: 82 80        	cret

2004107c <wordcmp(void const*, void const*, int)>:
;   while (len-- > 0 && (retval=*dest++-*src++) == 0);
2004107c: 93 06 16 00  	addi	a3, a2, 1

20041080 <.LBB0_1>:
20041080: fd 16        	addi	a3, a3, -1
20041082: 63 5b d0 00  	blez	a3, 0x20041098 <.LBB0_3>
20041086: 10 41        	clw	a2, 0(ca0)
20041088: 98 41        	clw	a4, 0(ca1)
2004108a: 5b 15 45 00  	cincoffset	ca0, ca0, 4
2004108e: db 95 45 00  	cincoffset	ca1, ca1, 4
20041092: 19 8e        	sub	a2, a2, a4
20041094: 75 d6        	beqz	a2, 0x20041080 <.LBB0_1>
20041096: 11 a0        	j	0x2004109a <.LBB0_4>

20041098 <.LBB0_3>:
20041098: 01 46        	mv	a2, zero

2004109a <.LBB0_4>:
;   return retval;
2004109a: 32 85        	mv	a0, a2
2004109c: 82 80        	cret
2004109e: 00 00        	unimp	

200410a0 <wordcpy(void*, void const*, int)>:
; {
200410a0: db 06 a5 fe  	cmove	ca3, ca0
;   while (len-- > 0)
200410a4: 63 5b c0 00  	blez	a2, 0x200410ba <.LBB0_2>

200410a8 <.LBB0_1>:
;     *dest++ = *src++;
200410a8: 98 41        	clw	a4, 0(ca1)
200410aa: db 95 45 00  	cincoffset	ca1, ca1, 4
200410ae: 98 c2        	csw	a4, 0(ca3)
200410b0: db 96 46 00  	cincoffset	ca3, ca3, 4
;   while (len-- > 0)
200410b4: 7d 16        	addi	a2, a2, -1
200410b6: e3 49 c0 fe  	bgtz	a2, 0x200410a8 <.LBB0_1>

200410ba <.LBB0_2>:
;   return destaddr;
200410ba: 82 80        	cret

200410bc <strncpy(char*, char const*, unsigned int)>:
; {
200410bc: 81 46        	mv	a3, zero
; 	for (i = 0 ; i < n && src[i] != '\0' ; i++)
200410be: 63 0e d6 00  	beq	a2, a3, 0x200410da <.LBB0_3>

200410c2 <.LBB0_1>:
200410c2: 5b 87 d5 22  	cincoffset	ca4, ca1, a3
200410c6: 03 47 07 00  	clbu	a4, 0(ca4)
200410ca: 09 cb        	beqz	a4, 0x200410dc <.LBB0_4>
; 		dest[i] = src[i];
200410cc: db 07 d5 22  	cincoffset	ca5, ca0, a3
200410d0: 23 80 e7 00  	csb	a4, 0(ca5)
; 	for (i = 0 ; i < n && src[i] != '\0' ; i++)
200410d4: 85 06        	addi	a3, a3, 1
200410d6: e3 16 d6 fe  	bne	a2, a3, 0x200410c2 <.LBB0_1>

200410da <.LBB0_3>:
200410da: b2 86        	mv	a3, a2

200410dc <.LBB0_4>:
200410dc: b6 85        	mv	a1, a3
200410de: 63 69 d6 00  	bltu	a2, a3, 0x200410f0 <.LBB0_7>
200410e2: b2 85        	mv	a1, a2
200410e4: 31 a0        	j	0x200410f0 <.LBB0_7>

200410e6 <.LBB0_6>:
; 		dest[i] = '\0';
200410e6: 5b 06 d5 22  	cincoffset	ca2, ca0, a3
200410ea: 23 00 06 00  	csb	zero, 0(ca2)
; 	for ( ; i < n ; i++)
200410ee: 85 06        	addi	a3, a3, 1

200410f0 <.LBB0_7>:
200410f0: e3 9b d5 fe  	bne	a1, a3, 0x200410e6 <.LBB0_6>
; 	return dest;
200410f4: 82 80        	cret
200410f6: 00 00        	unimp	

200410f8 <memset(void*, int, unsigned int)>:
; {
200410f8: db 06 a5 fe  	cmove	ca3, ca0
; 	while (len-- > 0) {
200410fc: 19 c6        	beqz	a2, 0x2004110a <.LBB0_2>

200410fe <.LBB0_1>:
; 		*dest++ = c;
200410fe: 23 80 b6 00  	csb	a1, 0(ca3)
20041102: db 96 16 00  	cincoffset	ca3, ca3, 1
; 	while (len-- > 0) {
20041106: 7d 16        	addi	a2, a2, -1
20041108: 7d fa        	bnez	a2, 0x200410fe <.LBB0_1>

2004110a <.LBB0_2>:
; 	return destaddr;
2004110a: 82 80        	cret

2004110c <wordset(void*, unsigned int, unsigned int)>:
; {
2004110c: db 06 a5 fe  	cmove	ca3, ca0
; 	while (len-- > 0) {
20041110: 11 c6        	beqz	a2, 0x2004111c <.LBB0_2>

20041112 <.LBB0_1>:
; 		*dest++ = c;
20041112: 8c c2        	csw	a1, 0(ca3)
20041114: db 96 46 00  	cincoffset	ca3, ca3, 4
; 	while (len-- > 0) {
20041118: 7d 16        	addi	a2, a2, -1
2004111a: 65 fe        	bnez	a2, 0x20041112 <.LBB0_1>

2004111c <.LBB0_2>:
; 	return destaddr;
2004111c: 82 80        	cret
2004111e: 00 00        	unimp	

20041120 <memset_unique(void*, unsigned int)>:
; {
20041120: 81 46        	mv	a3, zero
20041122: 5b 06 a5 fe  	cmove	ca2, ca0
; 	while (len-- > 0) {
20041126: 63 8d d5 00  	beq	a1, a3, 0x20041140 <.LBB0_2>

2004112a <.LBB0_1>:
; 		*dest++ = i++;
2004112a: 13 87 16 00  	addi	a4, a3, 1
2004112e: db 17 16 00  	cincoffset	ca5, ca2, 1
20041132: 23 00 d6 00  	csb	a3, 0(ca2)
20041136: 5b 86 a7 fe  	cmove	ca2, ca5
2004113a: ba 86        	mv	a3, a4
; 	while (len-- > 0) {
2004113c: e3 97 d5 fe  	bne	a1, a3, 0x2004112a <.LBB0_1>

20041140 <.LBB0_2>:
; 	return destaddr;
20041140: 82 80        	cret
20041142: 00 00        	unimp	

20041144 <register_handler(unsigned int, void (*)())>:
;     old = irq_array[irq_bit_number];
20041144: 13 16 35 00  	slli	a2, a0, 3
20041148: db 96 01 ae  	cincoffset	ca3, cgp, -1312
2004114c: db a6 06 18  	csetbounds	ca3, ca3, 384
20041150: db 86 c6 22  	cincoffset	ca3, ca3, a2
20041154: 90 62        	clc	ca2, 0(ca3)
;     irq_array[irq_bit_number] = handler;
20041156: 8c e2        	csc	ca1, 0(ca3)
;     irq_vector_exists[irq_bit_number] = 1;
20041158: db 95 01 c6  	cincoffset	ca1, cgp, -928
2004115c: db a5 05 03  	csetbounds	ca1, ca1, 48
20041160: 5b 85 a5 22  	cincoffset	ca0, ca1, a0
20041164: 85 45        	addi	a1, zero, 1
;     irq_vector_exists[irq_bit_number] = 1;
20041166: 23 00 b5 00  	csb	a1, 0(ca0)
;     return old;
2004116a: 5b 05 a6 fe  	cmove	ca0, ca2
2004116e: 82 80        	cret

20041170 <unregister_handler(unsigned int)>:
;     old = irq_array[irq_bit_number];
20041170: 93 15 35 00  	slli	a1, a0, 3
20041174: 5b 96 01 ae  	cincoffset	ca2, cgp, -1312
20041178: 5b 26 06 18  	csetbounds	ca2, ca2, 384
2004117c: 5b 06 b6 22  	cincoffset	ca2, ca2, a1
20041180: 0c 62        	clc	ca1, 0(ca2)
;     irq_array[irq_bit_number] = NULL;
20041182: 23 30 06 00  	csc	cnull, 0(ca2)
;     irq_vector_exists[irq_bit_number] = 0;
20041186: 5b 96 01 c6  	cincoffset	ca2, cgp, -928
2004118a: 5b 26 06 03  	csetbounds	ca2, ca2, 48
2004118e: 5b 05 a6 22  	cincoffset	ca0, ca2, a0
20041192: 23 00 05 00  	csb	zero, 0(ca0)
;     return old;
20041196: 5b 85 a5 fe  	cmove	ca0, ca1
2004119a: 82 80        	cret

2004119c <dispatch_irqs(unsigned int)>:
; {
2004119c: 7d 71        	cincoffset	csp, csp, -16
;     if(irq_vector_exists[irq_bit_number] && irq_bit_number < _NUM_IRQ ) {
2004119e: 06 e4        	csc	cra, 8(csp)
200411a0: db 95 01 c6  	cincoffset	ca1, cgp, -928
200411a4: db a5 05 03  	csetbounds	ca1, ca1, 48
200411a8: db 85 a5 22  	cincoffset	ca1, ca1, a0
200411ac: 83 c5 05 00  	clbu	a1, 0(ca1)
200411b0: b3 35 b0 00  	snez	a1, a1
200411b4: 13 36 05 03  	sltiu	a2, a0, 48
200411b8: f1 8d        	and	a1, a1, a2
200411ba: 81 cd        	beqz	a1, 0x200411d2 <.LBB2_4>
;             irq_array[irq_bit_number]();
200411bc: 0e 05        	slli	a0, a0, 3
200411be: db 95 01 ae  	cincoffset	ca1, cgp, -1312
200411c2: db a5 05 18  	csetbounds	ca1, ca1, 384
200411c6: 5b 85 a5 22  	cincoffset	ca0, ca1, a0
200411ca: 08 61        	clc	ca0, 0(ca0)
200411cc: 02 95        	cjalr	ca0
200411ce: 05 45        	addi	a0, zero, 1
200411d0: 31 a8        	j	0x200411ec <.LBB2_3>

200411d2 <.LBB2_4>:
;             pprintf("Error...Unhandled Exception(%d). Exiting test\n", irq_bit_number);
200411d2: 97 35 00 00  	auipcc	ca1, 3
200411d6: db 95 c5 3d  	cincoffset	ca1, ca1, 988
200411da: db a5 f5 02  	csetbounds	ca1, ca1, 47
200411de: 2a c0        	csw	a0, 0(csp)
200411e0: 5b 05 a0 fe  	cmove	ca0, cnull
200411e4: 39 39        	cjal	0x20040e02 <pfprintf(unsigned int**, char const*, ...)>
;             exit(1);
200411e6: 05 45        	addi	a0, zero, 1
200411e8: d5 2c        	cjal	0x200414dc <__cxa_pure_virtual>
200411ea: 01 45        	mv	a0, zero

200411ec <.LBB2_3>:
; }
200411ec: a2 60        	clc	cra, 8(csp)
200411ee: 41 61        	cincoffset	csp, csp, 16
200411f0: 82 80        	cret
200411f2: 00 00        	unimp	

200411f4 <GenerateECC(unsigned long long, ENCRYPTION_TYPE_E)>:
; {
200411f4: 39 71        	cincoffset	csp, csp, -64
200411f6: 06 fc        	csc	cra, 56(csp)
200411f8: 22 f8        	csc	cs0, 48(csp)
200411fa: 26 f4        	csc	cs1, 40(csp)
200411fc: 36 84        	mv	s0, a3
200411fe: 32 cc        	csw	a2, 24(csp)
20041200: 2e ce        	csw	a1, 28(csp)
20041202: aa 87        	mv	a5, a0
20041204: 37 55 55 00  	lui	a0, 1365
20041208: 13 05 55 55  	addi	a0, a0, 1365
; 	p1  = ComputeParity(data & (PARITY1  | secded_mode));
2004120c: 33 e7 a6 00  	or	a4, a3, a0
20041210: 37 b5 aa 56  	lui	a0, 354987
20041214: 13 05 b5 d5  	addi	a0, a0, -677
20041218: 51 8d        	or	a0, a0, a2
2004121a: 7d 8d        	and	a0, a0, a5
2004121c: be 84        	mv	s1, a5
2004121e: 3e d2        	csw	a5, 36(csp)
20041220: f9 8d        	and	a1, a1, a4
20041222: ed 2a        	cjal	0x2004141c <ComputeParity(unsigned long long)>
20041224: 2a c8        	csw	a0, 16(csp)
20041226: 37 a5 99 00  	lui	a0, 2458
2004122a: 13 05 95 99  	addi	a0, a0, -1639
; 	p2  = ComputeParity(data & (PARITY2  | secded_mode));
2004122e: 22 d0        	csw	s0, 32(csp)
20041230: b3 65 a4 00  	or	a1, s0, a0
20041234: 37 35 33 9b  	lui	a0, 635699
20041238: 13 05 d5 66  	addi	a0, a0, 1645
2004123c: 62 46        	clw	a2, 24(csp)
2004123e: 51 8d        	or	a0, a0, a2
20041240: 65 8d        	and	a0, a0, s1
20041242: f2 44        	clw	s1, 28(csp)
; 	p2  = ComputeParity(data & (PARITY2  | secded_mode));
20041244: e5 8d        	and	a1, a1, s1
20041246: d9 2a        	cjal	0x2004141c <ComputeParity(unsigned long long)>
20041248: 2a c6        	csw	a0, 12(csp)
2004124a: 37 e5 e1 00  	lui	a0, 3614
2004124e: 13 05 15 1e  	addi	a0, a0, 481
; 	p4  = ComputeParity(data & (PARITY4  | secded_mode));
20041252: b3 65 a4 00  	or	a1, s0, a0
20041256: 37 c5 c3 e3  	lui	a0, 932924
2004125a: 13 05 e5 78  	addi	a0, a0, 1934
2004125e: 62 44        	clw	s0, 24(csp)
; 	p4  = ComputeParity(data & (PARITY4  | secded_mode));
20041260: 41 8d        	or	a0, a0, s0
20041262: 12 56        	clw	a2, 36(csp)
20041264: 71 8d        	and	a0, a0, a2
20041266: e5 8d        	and	a1, a1, s1
20041268: 55 2a        	cjal	0x2004141c <ComputeParity(unsigned long long)>
2004126a: 2a c4        	csw	a0, 8(csp)
2004126c: 37 05 fe 00  	lui	a0, 4064
20041270: 13 05 e5 1f  	addi	a0, a0, 510
; 	p8  = ComputeParity(data & (PARITY8  | secded_mode));
20041274: 82 55        	clw	a1, 32(csp)
20041276: c9 8d        	or	a1, a1, a0
20041278: 37 05 fc 03  	lui	a0, 16320
2004127c: 13 05 05 7f  	addi	a0, a0, 2032
; 	p8  = ComputeParity(data & (PARITY8  | secded_mode));
20041280: 41 8d        	or	a0, a0, s0
20041282: 12 56        	clw	a2, 36(csp)
20041284: 71 8d        	and	a0, a0, a2
20041286: e5 8d        	and	a1, a1, s1
20041288: 51 2a        	cjal	0x2004141c <ComputeParity(unsigned long long)>
2004128a: 2a c2        	csw	a0, 4(csp)
2004128c: 37 05 00 01  	lui	a0, 4096
20041290: 13 05 05 e0  	addi	a0, a0, -512
; 	p16 = ComputeParity(data & (PARITY16 | secded_mode));
20041294: 82 55        	clw	a1, 32(csp)
20041296: c9 8d        	or	a1, a1, a0
20041298: 37 05 00 04  	lui	a0, 16384
2004129c: 13 05 05 80  	addi	a0, a0, -2048
; 	p16 = ComputeParity(data & (PARITY16 | secded_mode));
200412a0: 41 8d        	or	a0, a0, s0
200412a2: 12 56        	clw	a2, 36(csp)
200412a4: 71 8d        	and	a0, a0, a2
200412a6: e5 8d        	and	a1, a1, s1
200412a8: 95 2a        	cjal	0x2004141c <ComputeParity(unsigned long long)>
200412aa: 2a ca        	csw	a0, 20(csp)
200412ac: 37 05 00 01  	lui	a0, 4096
200412b0: 7d 15        	addi	a0, a0, -1
200412b2: 82 54        	clw	s1, 32(csp)
; 	p32 = ComputeParity(data & (PARITY32 | secded_mode));
200412b4: b3 e5 a4 00  	or	a1, s1, a0
200412b8: 37 05 00 fc  	lui	a0, 1032192
200412bc: 41 8d        	or	a0, a0, s0
200412be: 12 56        	clw	a2, 36(csp)
200412c0: 71 8d        	and	a0, a0, a2
200412c2: 72 46        	clw	a2, 28(csp)
200412c4: f1 8d        	and	a1, a1, a2
200412c6: 99 2a        	cjal	0x2004141c <ComputeParity(unsigned long long)>
;   if(secded_mode == 0) {
200412c8: b3 65 94 00  	or	a1, s0, s1
; 	p32 = ComputeParity(data & (PARITY32 | secded_mode));
200412cc: aa 87        	mv	a5, a0
;   if(secded_mode == 0) {
200412ce: e1 c1        	beqz	a1, 0x2004138e <.LBB0_2>
200412d0: 37 05 00 02  	lui	a0, 8192
200412d4: 7d 15        	addi	a0, a0, -1
;   p64 = ComputeParity(data & (PARITY64 | secded_mode)) ^ p1 ^ p2 ^ p4 ^ p8 ^ p16 ^ p32;
200412d6: 45 8d        	or	a0, a0, s1
200412d8: f2 45        	clw	a1, 28(csp)
200412da: e9 8d        	and	a1, a1, a0
200412dc: 12 54        	clw	s0, 36(csp)
200412de: 22 85        	mv	a0, s0
200412e0: be 84        	mv	s1, a5
200412e2: 2d 2a        	cjal	0x2004141c <ComputeParity(unsigned long long)>
200412e4: c2 42        	clw	t0, 16(csp)
200412e6: 32 43        	clw	t1, 12(csp)
;   p64 = ComputeParity(data & (PARITY64 | secded_mode)) ^ p1 ^ p2 ^ p4 ^ p8 ^ p16 ^ p32;
200412e8: b3 45 53 00  	xor	a1, t1, t0
200412ec: a2 43        	clw	t2, 8(csp)
200412ee: b3 c5 75 00  	xor	a1, a1, t2
200412f2: 92 40        	clw	ra, 4(csp)
200412f4: b3 c5 15 00  	xor	a1, a1, ra
200412f8: 52 46        	clw	a2, 20(csp)
200412fa: b1 8d        	xor	a1, a1, a2
200412fc: a5 8d        	xor	a1, a1, s1
200412fe: a9 8d        	xor	a1, a1, a0
; 				  ((data&0xf8000000)<<6) | ((data&0x7800000)<<5) | ((data&0x07C0000)<<4)  | ((data&0x03C000)<<3) | 
20041300: 13 15 54 00  	slli	a0, s0, 5
20041304: 37 06 00 f0  	lui	a2, 983040
20041308: 71 8d        	and	a0, a0, a2
2004130a: 13 16 44 00  	slli	a2, s0, 4
2004130e: b7 06 c0 07  	lui	a3, 31744
20041312: 75 8e        	and	a2, a2, a3
20041314: 93 16 34 00  	slli	a3, s0, 3
20041318: 37 07 1e 00  	lui	a4, 480
2004131c: f9 8e        	and	a3, a3, a4
; 				  ((data&0x3E00)<<2)     | ((data&0x1E0)<<1)      |  (data&0x1F);
2004131e: 13 17 24 00  	slli	a4, s0, 2
20041322: c1 67        	lui	a5, 16
20041324: 93 87 07 80  	addi	a5, a5, -2048
20041328: 7d 8f        	and	a4, a4, a5
2004132a: 93 77 f4 01  	andi	a5, s0, 31
; 	  addr_data = (p64<<38) | (p32<<32) | (p16<<27) | (p8<<21) | (p4<<16) | (p2<<10) | (p1<<5) | 
2004132e: 5d 8d        	or	a0, a0, a5
20041330: 51 8d        	or	a0, a0, a2
20041332: 55 8d        	or	a0, a0, a3
20041334: 59 8d        	or	a0, a0, a4
; 				  ((data&0x3E00)<<2)     | ((data&0x1E0)<<1)      |  (data&0x1F);
20041336: 13 16 14 00  	slli	a2, s0, 1
2004133a: 13 76 06 3c  	andi	a2, a2, 960
; 	  addr_data = (p64<<38) | (p32<<32) | (p16<<27) | (p8<<21) | (p4<<16) | (p2<<10) | (p1<<5) | 
2004133e: 51 8d        	or	a0, a0, a2
20041340: 13 96 52 00  	slli	a2, t0, 5
20041344: 51 8d        	or	a0, a0, a2
20041346: 13 d6 b2 01  	srli	a2, t0, 27
; 				  ((data&0xf8000000)<<6) | ((data&0x7800000)<<5) | ((data&0x07C0000)<<4)  | ((data&0x03C000)<<3) | 
2004134a: 93 56 a4 01  	srli	a3, s0, 26
2004134e: 93 f6 e6 03  	andi	a3, a3, 62
; 	  addr_data = (p64<<38) | (p32<<32) | (p16<<27) | (p8<<21) | (p4<<16) | (p2<<10) | (p1<<5) | 
20041352: 55 8e        	or	a2, a2, a3
20041354: 93 16 a3 00  	slli	a3, t1, 10
; 				  ((data&0xf8000000)<<6) | ((data&0x7800000)<<5) | ((data&0x07C0000)<<4)  | ((data&0x03C000)<<3) | 
20041358: 55 8d        	or	a0, a0, a3
; 	  addr_data = (p64<<38) | (p32<<32) | (p16<<27) | (p8<<21) | (p4<<16) | (p2<<10) | (p1<<5) | 
2004135a: 93 56 63 01  	srli	a3, t1, 22
; 				  ((data&0xf8000000)<<6) | ((data&0x7800000)<<5) | ((data&0x07C0000)<<4)  | ((data&0x03C000)<<3) | 
2004135e: 55 8e        	or	a2, a2, a3
; 	  addr_data = (p64<<38) | (p32<<32) | (p16<<27) | (p8<<21) | (p4<<16) | (p2<<10) | (p1<<5) | 
20041360: 93 96 03 01  	slli	a3, t2, 16
; 				  ((data&0xf8000000)<<6) | ((data&0x7800000)<<5) | ((data&0x07C0000)<<4)  | ((data&0x03C000)<<3) | 
20041364: 55 8d        	or	a0, a0, a3
; 	  addr_data = (p64<<38) | (p32<<32) | (p16<<27) | (p8<<21) | (p4<<16) | (p2<<10) | (p1<<5) | 
20041366: 93 d6 03 01  	srli	a3, t2, 16
; 				  ((data&0xf8000000)<<6) | ((data&0x7800000)<<5) | ((data&0x07C0000)<<4)  | ((data&0x03C000)<<3) | 
2004136a: 55 8e        	or	a2, a2, a3
; 	  addr_data = (p64<<38) | (p32<<32) | (p16<<27) | (p8<<21) | (p4<<16) | (p2<<10) | (p1<<5) | 
2004136c: 93 96 50 01  	slli	a3, ra, 21
; 				  ((data&0xf8000000)<<6) | ((data&0x7800000)<<5) | ((data&0x07C0000)<<4)  | ((data&0x03C000)<<3) | 
20041370: 55 8d        	or	a0, a0, a3
; 	  addr_data = (p64<<38) | (p32<<32) | (p16<<27) | (p8<<21) | (p4<<16) | (p2<<10) | (p1<<5) | 
20041372: 93 d6 b0 00  	srli	a3, ra, 11
; 				  ((data&0xf8000000)<<6) | ((data&0x7800000)<<5) | ((data&0x07C0000)<<4)  | ((data&0x03C000)<<3) | 
20041376: 55 8e        	or	a2, a2, a3
20041378: 52 47        	clw	a4, 20(csp)
; 	  addr_data = (p64<<38) | (p32<<32) | (p16<<27) | (p8<<21) | (p4<<16) | (p2<<10) | (p1<<5) | 
2004137a: 93 16 b7 01  	slli	a3, a4, 27
; 				  ((data&0xf8000000)<<6) | ((data&0x7800000)<<5) | ((data&0x07C0000)<<4)  | ((data&0x03C000)<<3) | 
2004137e: 55 8d        	or	a0, a0, a3
; 	  addr_data = (p64<<38) | (p32<<32) | (p16<<27) | (p8<<21) | (p4<<16) | (p2<<10) | (p1<<5) | 
20041380: 93 56 57 00  	srli	a3, a4, 5
; 				  ((data&0xf8000000)<<6) | ((data&0x7800000)<<5) | ((data&0x07C0000)<<4)  | ((data&0x03C000)<<3) | 
20041384: 55 8e        	or	a2, a2, a3
; 				  ((data&0x3E00)<<2)     | ((data&0x1E0)<<1)      |  (data&0x1F);
20041386: 45 8e        	or	a2, a2, s1
; 	  addr_data = (p64<<38) | (p32<<32) | (p16<<27) | (p8<<21) | (p4<<16) | (p2<<10) | (p1<<5) | 
20041388: 9a 05        	slli	a1, a1, 6
; 				  ((data&0x3E00)<<2)     | ((data&0x1E0)<<1)      |  (data&0x1F);
2004138a: d1 8d        	or	a1, a1, a2
2004138c: 59 a0        	j	0x20041412 <.LBB0_3>

2004138e <.LBB0_2>:
2004138e: 92 54        	clw	s1, 36(csp)
; 				  ((data&0xF8000000)<<5) | ((data&0x7E00000)<<4)  | ((data&0x1F0000)<<3) | 
20041390: 13 95 44 00  	slli	a0, s1, 4
20041394: b7 05 00 7e  	lui	a1, 516096
20041398: 6d 8d        	and	a0, a0, a1
2004139a: 93 95 34 00  	slli	a1, s1, 3
2004139e: 37 06 f8 00  	lui	a2, 3968
200413a2: f1 8d        	and	a1, a1, a2
; 				  ((data&0xF800)<<2)     | ((data&0x7E0)<<1)      |  (data&0x1F);
200413a4: 13 96 24 00  	slli	a2, s1, 2
200413a8: b7 e6 03 00  	lui	a3, 62
200413ac: 75 8e        	and	a2, a2, a3
200413ae: 93 96 14 00  	slli	a3, s1, 1
200413b2: 05 67        	lui	a4, 1
200413b4: 13 07 07 fc  	addi	a4, a4, -64
200413b8: f9 8e        	and	a3, a3, a4
200413ba: 13 f7 f4 01  	andi	a4, s1, 31
; 	  addr_data = (p32<<37) | (p16<<31) | (p8<<24) | (p4<<18) | (p2<<12) | (p1<<5) | 
200413be: 59 8d        	or	a0, a0, a4
200413c0: 4d 8d        	or	a0, a0, a1
200413c2: 51 8d        	or	a0, a0, a2
200413c4: 55 8d        	or	a0, a0, a3
200413c6: 42 46        	clw	a2, 16(csp)
200413c8: 93 15 56 00  	slli	a1, a2, 5
200413cc: 4d 8d        	or	a0, a0, a1
200413ce: b3 e5 c4 00  	or	a1, s1, a2
200413d2: b2 46        	clw	a3, 12(csp)
200413d4: 13 96 c6 00  	slli	a2, a3, 12
; 				  ((data&0xF8000000)<<5) | ((data&0x7E00000)<<4)  | ((data&0x1F0000)<<3) | 
200413d8: 51 8d        	or	a0, a0, a2
; 	  addr_data = (p32<<37) | (p16<<31) | (p8<<24) | (p4<<18) | (p2<<12) | (p1<<5) | 
200413da: 13 d6 46 01  	srli	a2, a3, 20
200413de: ed 81        	srli	a1, a1, 27
; 				  ((data&0xF8000000)<<5) | ((data&0x7E00000)<<4)  | ((data&0x1F0000)<<3) | 
200413e0: d1 8d        	or	a1, a1, a2
200413e2: a2 46        	clw	a3, 8(csp)
; 	  addr_data = (p32<<37) | (p16<<31) | (p8<<24) | (p4<<18) | (p2<<12) | (p1<<5) | 
200413e4: 13 96 26 01  	slli	a2, a3, 18
; 				  ((data&0xF8000000)<<5) | ((data&0x7E00000)<<4)  | ((data&0x1F0000)<<3) | 
200413e8: 51 8d        	or	a0, a0, a2
; 	  addr_data = (p32<<37) | (p16<<31) | (p8<<24) | (p4<<18) | (p2<<12) | (p1<<5) | 
200413ea: 13 d6 e6 00  	srli	a2, a3, 14
; 				  ((data&0xF8000000)<<5) | ((data&0x7E00000)<<4)  | ((data&0x1F0000)<<3) | 
200413ee: d1 8d        	or	a1, a1, a2
200413f0: 92 46        	clw	a3, 4(csp)
; 	  addr_data = (p32<<37) | (p16<<31) | (p8<<24) | (p4<<18) | (p2<<12) | (p1<<5) | 
200413f2: 13 96 86 01  	slli	a2, a3, 24
; 				  ((data&0xF8000000)<<5) | ((data&0x7E00000)<<4)  | ((data&0x1F0000)<<3) | 
200413f6: 51 8d        	or	a0, a0, a2
; 	  addr_data = (p32<<37) | (p16<<31) | (p8<<24) | (p4<<18) | (p2<<12) | (p1<<5) | 
200413f8: 13 d6 86 00  	srli	a2, a3, 8
; 				  ((data&0xF8000000)<<5) | ((data&0x7E00000)<<4)  | ((data&0x1F0000)<<3) | 
200413fc: d1 8d        	or	a1, a1, a2
200413fe: d2 46        	clw	a3, 20(csp)
; 	  addr_data = (p32<<37) | (p16<<31) | (p8<<24) | (p4<<18) | (p2<<12) | (p1<<5) | 
20041400: 13 96 f6 01  	slli	a2, a3, 31
; 				  ((data&0xF800)<<2)     | ((data&0x7E0)<<1)      |  (data&0x1F);
20041404: 51 8d        	or	a0, a0, a2
; 	  addr_data = (p32<<37) | (p16<<31) | (p8<<24) | (p4<<18) | (p2<<12) | (p1<<5) | 
20041406: 13 d6 16 00  	srli	a2, a3, 1
; 				  ((data&0xF800)<<2)     | ((data&0x7E0)<<1)      |  (data&0x1F);
2004140a: d1 8d        	or	a1, a1, a2
; 	  addr_data = (p32<<37) | (p16<<31) | (p8<<24) | (p4<<18) | (p2<<12) | (p1<<5) | 
2004140c: 13 96 57 00  	slli	a2, a5, 5
; 				  ((data&0xF800)<<2)     | ((data&0x7E0)<<1)      |  (data&0x1F);
20041410: d1 8d        	or	a1, a1, a2

20041412 <.LBB0_3>:
; 	return addr_data;
20041412: a2 74        	clc	cs1, 40(csp)
20041414: 42 74        	clc	cs0, 48(csp)
20041416: e2 70        	clc	cra, 56(csp)
20041418: 21 61        	cincoffset	csp, csp, 64
2004141a: 82 80        	cret

2004141c <ComputeParity(unsigned long long)>:
; 	Parity ^= Parity >>  32;
2004141c: 2d 8d        	xor	a0, a0, a1
; 	Parity ^= Parity >>  16;
2004141e: 13 56 05 01  	srli	a2, a0, 16
20041422: 93 96 05 01  	slli	a3, a1, 16
20041426: 55 8e        	or	a2, a2, a3
20041428: 93 d6 05 01  	srli	a3, a1, 16
2004142c: 31 8d        	xor	a0, a0, a2
2004142e: b5 8d        	xor	a1, a1, a3
; 	Parity ^= Parity >>  8;
20041430: 13 56 85 00  	srli	a2, a0, 8
20041434: 93 96 85 01  	slli	a3, a1, 24
20041438: 55 8e        	or	a2, a2, a3
2004143a: 93 d6 85 00  	srli	a3, a1, 8
2004143e: 31 8d        	xor	a0, a0, a2
20041440: b5 8d        	xor	a1, a1, a3
; 	Parity ^= Parity >>  4;
20041442: 13 56 45 00  	srli	a2, a0, 4
20041446: 93 96 c5 01  	slli	a3, a1, 28
2004144a: 55 8e        	or	a2, a2, a3
2004144c: 93 d6 45 00  	srli	a3, a1, 4
20041450: 31 8d        	xor	a0, a0, a2
20041452: b5 8d        	xor	a1, a1, a3
; 	Parity ^= Parity >>  2;
20041454: 13 56 25 00  	srli	a2, a0, 2
20041458: fa 05        	slli	a1, a1, 30
2004145a: d1 8d        	or	a1, a1, a2
2004145c: 2d 8d        	xor	a0, a0, a1
; 	Parity ^= Parity >>  1;
2004145e: 93 55 15 00  	srli	a1, a0, 1
20041462: 2d 8d        	xor	a0, a0, a1
; 	return (uint32_t)(Parity&0x1);
20041464: 05 89        	andi	a0, a0, 1
20041466: 82 80        	cret

20041468 <ConCatAddrData(unsigned int, unsigned int, unsigned int, ENCRYPTION_TYPE_E)>:
; {
20041468: ae 82        	mv	t0, a1
; 	uint32_t msb = ((Addr>>(Width-1))&0x1)^0x1;
2004146a: 93 05 f6 ff  	addi	a1, a2, -1
2004146e: b3 57 b5 00  	srl	a5, a0, a1
20041472: fd 55        	addi	a1, zero, -1
; 	k = ((1<<Width)-1);
20041474: b3 95 c5 00  	sll	a1, a1, a2
20041478: 13 c3 f5 ff  	not	t1, a1
; 	Addr &= (secded_mode == 0) ? 0xFFFFFC : 0x1FFFFFC;
2004147c: 55 8f        	or	a4, a4, a3
2004147e: 93 36 17 00  	seqz	a3, a4
20041482: 01 c7        	beqz	a4, 0x2004148a <.LBB2_2>
20041484: 37 07 00 02  	lui	a4, 8192
20041488: 19 a0        	j	0x2004148e <.LBB2_3>

2004148a <.LBB2_2>:
2004148a: 37 07 00 01  	lui	a4, 4096

2004148e <.LBB2_3>:
2004148e: 71 17        	addi	a4, a4, -4
20041490: 93 c7 f7 ff  	not	a5, a5
20041494: e5 45        	addi	a1, zero, 25
; 	uint32_t max_addr = (secded_mode == 0) ? 24 : 25;
20041496: b3 86 d5 40  	sub	a3, a1, a3
2004149a: b3 75 a3 00  	and	a1, t1, a0
; 	for(j=Width;j<max_addr;j++) {
2004149e: 63 63 d6 00  	bltu	a2, a3, 0x200414a4 <.LBB2_5>
200414a2: b2 86        	mv	a3, a2

200414a4 <.LBB2_5>:
200414a4: 13 f5 17 00  	andi	a0, a5, 1
200414a8: f9 8d        	and	a1, a1, a4
; 	for(j=Width;j<max_addr;j++) {
200414aa: 63 88 c6 00  	beq	a3, a2, 0x200414ba <.LBB2_7>

200414ae <.LBB2_6>:
; 	  Addr |= msb<<j;
200414ae: 33 17 c5 00  	sll	a4, a0, a2
200414b2: d9 8d        	or	a1, a1, a4
; 	for(j=Width;j<max_addr;j++) {
200414b4: 05 06        	addi	a2, a2, 1
200414b6: e3 9c c6 fe  	bne	a3, a2, 0x200414ae <.LBB2_6>

200414ba <.LBB2_7>:
; 	return concat;
200414ba: 16 85        	mv	a0, t0
200414bc: 82 80        	cret

200414be <ConstructECC(unsigned int, unsigned int, unsigned int, ENCRYPTION_TYPE_E)>:
; {
200414be: 3d 71        	cincoffset	csp, csp, -32
200414c0: 06 ec        	csc	cra, 24(csp)
200414c2: 22 e8        	csc	cs0, 16(csp)
200414c4: 26 e4        	csc	cs1, 8(csp)
200414c6: 3a 84        	mv	s0, a4
200414c8: b6 84        	mv	s1, a3
; 	concatresult = ConCatAddrData(Addr, Data, Width, secded_mode);
200414ca: 79 3f        	cjal	0x20041468 <ConCatAddrData(unsigned int, unsigned int, unsigned int, ENCRYPTION_TYPE_E)>
; 	return GenerateECC(concatresult, secded_mode);
200414cc: 26 86        	mv	a2, s1
200414ce: a2 86        	mv	a3, s0
200414d0: a2 64        	clc	cs1, 8(csp)
200414d2: 42 64        	clc	cs0, 16(csp)
200414d4: e2 60        	clc	cra, 24(csp)
200414d6: 05 61        	cincoffset	csp, csp, 32
200414d8: 31 bb        	j	0x200411f4 <GenerateECC(unsigned long long, ENCRYPTION_TYPE_E)>
200414da: 00 00        	unimp	

200414dc <__cxa_pure_virtual>:
; {
200414dc: 7d 71        	cincoffset	csp, csp, -16
;   int retval = (val != 0) ? 0xfe : 0xff;
200414de: 06 e4        	csc	cra, 8(csp)
200414e0: 13 35 15 00  	seqz	a0, a0
200414e4: 13 65 e5 0f  	ori	a0, a0, 254
;   putc(retval);
200414e8: db 15 10 00  	cincoffset	ca1, cnull, 1
200414ec: 01 34        	cjal	0x20040eec <fputc(int, unsigned int**)>

200414ee <from_root(unsigned int)>:
;   return __builtin_cheri_address_set(globalRoot, addr);
200414ee: db 95 01 cc  	cincoffset	ca1, cgp, -832
200414f2: db a5 85 00  	csetbounds	ca1, ca1, 8
200414f6: 8c 61        	clc	ca1, 0(ca1)
200414f8: 5b 85 a5 20  	csetaddr	ca0, ca1, a0
200414fc: 82 80        	cret

200414fe <cap_build(void*, unsigned int, unsigned int, unsigned int)>:
; 	ret = cheri_perms_and(ret, perms);
200414fe: 5b 05 d5 1a  	candperm	ca0, ca0, a3
; 	ret = cheri_address_set(ret, start);
20041502: 5b 05 b5 20  	csetaddr	ca0, ca0, a1
; 	ret = cheri_bounds_set(ret, len);
20041506: 5b 05 c5 10  	csetbounds	ca0, ca0, a2
; 	return ret;
2004150a: 82 80        	cret

2004150c <populate_caprelocs(CapReloc*, unsigned int)>:
; {
2004150c: 3d 71        	cincoffset	csp, csp, -32
2004150e: 06 ec        	csc	cra, 24(csp)
20041510: 22 e8        	csc	cs0, 16(csp)
20041512: 26 e4        	csc	cs1, 8(csp)
20041514: 01 46        	mv	a2, zero
20041516: 51 43        	addi	t1, zero, 20
20041518: db 93 01 cc  	cincoffset	ct2, cgp, -832
2004151c: db a3 83 00  	csetbounds	ct2, ct2, 8
20041520: db 92 81 cc  	cincoffset	ct0, cgp, -824
20041524: db a2 82 00  	csetbounds	ct0, ct0, 8
;   for (unsigned int i = 0; i < n; ++i) {
20041528: 63 8f c5 04  	beq	a1, a2, 0x20041586 <.LBB3_5>

2004152c <.LBB3_1>:
;     void** capaddr = (void**)from_root(caprelocs[i].addr);
2004152c: b3 07 66 02  	mul	a5, a2, t1
;     if (caprelocs[i].flags & 0x80000000U) { // This is a function pointer.
20041530: 93 86 07 01  	addi	a3, a5, 16
20041534: db 06 d5 22  	cincoffset	ca3, ca0, a3
20041538: 98 42        	clw	a4, 0(ca3)
;   return __builtin_cheri_address_set(globalRoot, addr);
2004153a: 83 b6 03 00  	clc	ca3, 0(ct2)
;     if (caprelocs[i].flags & 0x80000000U) { // This is a function pointer.
2004153e: 63 45 07 00  	bltz	a4, 0x20041548 <.LBB3_3>
;   return __builtin_cheri_address_set(globalRoot, addr);
20041542: db 80 06 20  	csetaddr	cra, ca3, zero
20041546: 19 a0        	j	0x2004154c <.LBB3_4>

20041548 <.LBB3_3>:
;       cap = pccRoot;
20041548: 83 b0 02 00  	clc	cra, 0(ct0)

2004154c <.LBB3_4>:
2004154c: 5b 04 f5 22  	cincoffset	cs0, ca0, a5
20041550: 00 40        	clw	s0, 0(cs0)
;     cap = __builtin_cheri_address_set(cap, caprelocs[i].base);
20041552: 93 84 47 00  	addi	s1, a5, 4
20041556: db 04 95 22  	cincoffset	cs1, ca0, s1
2004155a: 84 40        	clw	s1, 0(cs1)
;     cap = __builtin_cheri_bounds_set(cap, caprelocs[i].len);
2004155c: 13 87 c7 00  	addi	a4, a5, 12
20041560: 5b 07 e5 22  	cincoffset	ca4, ca0, a4
20041564: 18 43        	clw	a4, 0(ca4)
;     cap = __builtin_cheri_offset_increment(cap, caprelocs[i].offset);
20041566: a1 07        	addi	a5, a5, 8
20041568: db 07 f5 22  	cincoffset	ca5, ca0, a5
2004156c: 9c 43        	clw	a5, 0(ca5)
2004156e: db 86 86 20  	csetaddr	ca3, ca3, s0
;     cap = __builtin_cheri_address_set(cap, caprelocs[i].base);
20041572: 5b 84 90 20  	csetaddr	cs0, cra, s1
;     cap = __builtin_cheri_bounds_set(cap, caprelocs[i].len);
20041576: 5b 07 e4 10  	csetbounds	ca4, cs0, a4
;     cap = __builtin_cheri_offset_increment(cap, caprelocs[i].offset);
2004157a: 5b 07 f7 22  	cincoffset	ca4, ca4, a5
;     *capaddr = cap;
2004157e: 98 e2        	csc	ca4, 0(ca3)
;   for (unsigned int i = 0; i < n; ++i) {
20041580: 05 06        	addi	a2, a2, 1
20041582: e3 95 c5 fa  	bne	a1, a2, 0x2004152c <.LBB3_1>

20041586 <.LBB3_5>:
; }
20041586: a2 64        	clc	cs1, 8(csp)
20041588: 42 64        	clc	cs0, 16(csp)
2004158a: e2 60        	clc	cra, 24(csp)
2004158c: 05 61        	cincoffset	csp, csp, 32
2004158e: 82 80        	cret

20041590 <cstart>:
; extern "C" void cstart(void *pccRootArg, void* memRootArg, void* heapCap, unsigned int heapSize, CapReloc* caprelocs, unsigned int nCaprelocs) {
20041590: 5d 71        	cincoffset	csp, csp, -80
20041592: 86 e4        	csc	cra, 72(csp)
20041594: a2 e0        	csc	cs0, 64(csp)
20041596: 26 fc        	csc	cs1, 56(csp)
20041598: 3e ce        	csw	a5, 28(csp)
2004159a: 3a e8        	csc	ca4, 16(csp)
2004159c: 36 da        	csw	a3, 52(csp)
2004159e: 32 f4        	csc	ca2, 40(csp)
200415a0: 2e e0        	csc	ca1, 0(csp)
200415a2: 2a e4        	csc	ca0, 8(csp)
; 	ptraddr_t dataROMStart = la_abs(_pcc_end);
200415a4: 37 35 04 20  	lui	a0, 131139
200415a8: 13 05 05 42  	addi	a0, a0, 1056
; 	ptraddr_t dataRAMStart = la_abs(_data_start);
200415ac: b7 06 0f 20  	lui	a3, 131312
200415b0: 93 86 06 00  	mv	a3, a3
; 	ptraddr_t bssRAMStart = la_abs(_bss_start);
200415b4: 37 07 0f 20  	lui	a4, 131312
200415b8: 13 07 07 0b  	addi	a4, a4, 176
; 	size_t sz = la_abs(_data_end) - dataRAMStart;
200415bc: 37 06 0f 20  	lui	a2, 131312
200415c0: 13 06 06 0b  	addi	a2, a2, 176
200415c4: 15 8e        	sub	a2, a2, a3
; 	size_t bssSz = la_abs(_bss_end) - la_abs(_bss_start);
200415c6: b7 14 0f 20  	lui	s1, 131313
200415ca: 93 84 04 b2  	addi	s1, s1, -1248
200415ce: b7 07 0f 20  	lui	a5, 131312
200415d2: 93 87 07 0b  	addi	a5, a5, 176
200415d6: 9d 8c        	sub	s1, s1, a5
200415d8: 93 07 40 06  	addi	a5, zero, 100
; 	ret = cheri_perms_and(ret, perms);
200415dc: db 87 f5 1a  	candperm	ca5, ca1, a5
; 	ret = cheri_address_set(ret, start);
200415e0: 3e f0        	csc	ca5, 32(csp)
200415e2: 5b 85 a7 20  	csetaddr	ca0, ca5, a0
; 	ret = cheri_bounds_set(ret, len);
200415e6: db 05 c5 10  	csetbounds	ca1, ca0, a2
; 	ret = cheri_address_set(ret, start);
200415ea: 5b 85 d7 20  	csetaddr	ca0, ca5, a3
; 	ret = cheri_bounds_set(ret, len);
200415ee: 5b 05 c5 10  	csetbounds	ca0, ca0, a2
; 	ret = cheri_address_set(ret, start);
200415f2: db 86 e7 20  	csetaddr	ca3, ca5, a4
; 	ret = cheri_bounds_set(ret, len);
200415f6: 5b 84 96 10  	csetbounds	cs0, ca3, s1
; 	memcpy(dataRAM, dataROM, sz);
200415fa: 9d 34        	cjal	0x20041060 <memcpy(void*, void const*, unsigned int)>
; 	memset(bssRAM, 0, bssSz);
200415fc: 5b 05 a4 fe  	cmove	ca0, cs0
20041600: 81 45        	mv	a1, zero
20041602: 26 86        	mv	a2, s1
20041604: d5 3c        	cjal	0x200410f8 <memset(void*, int, unsigned int)>
;   pccRoot = pccRootArg;
20041606: 5b 95 81 cc  	cincoffset	ca0, cgp, -824
2004160a: 5b 25 85 00  	csetbounds	ca0, ca0, 8
2004160e: a2 65        	clc	ca1, 8(csp)
20041610: 0c e1        	csc	ca1, 0(ca0)
;   globalRoot = memRootArg;
20041612: 5b 94 01 cc  	cincoffset	cs0, cgp, -832
20041616: 5b 24 84 00  	csetbounds	cs0, cs0, 8
2004161a: 02 65        	clc	ca0, 0(csp)
2004161c: 08 e0        	csc	ca0, 0(cs0)
;   populate_caprelocs(caprelocs, nCaprelocs);
2004161e: 42 65        	clc	ca0, 16(csp)
20041620: f2 45        	clw	a1, 28(csp)
20041622: ed 35        	cjal	0x2004150c <populate_caprelocs(CapReloc*, unsigned int)>
;   return __builtin_cheri_address_set(globalRoot, addr);
20041624: 08 60        	clc	ca0, 0(cs0)
20041626: b7 05 00 21  	lui	a1, 135168
2004162a: 5b 06 b5 20  	csetaddr	ca2, ca0, a1
;   simReg  = (volatile unsigned int*)from_root(0x21000000U);
2004162e: db 96 01 ca  	cincoffset	ca3, cgp, -864
20041632: db a6 86 00  	csetbounds	ca3, ca3, 8
20041636: 90 e2        	csc	ca2, 0(ca3)
20041638: 13 86 05 10  	addi	a2, a1, 256
;   return __builtin_cheri_address_set(globalRoot, addr);
2004163c: 5b 06 c5 20  	csetaddr	ca2, ca0, a2
;   tmrReg  = (volatile unsigned int*)from_root(0x21000100U);
20041640: db 96 81 c9  	cincoffset	ca3, cgp, -872
20041644: db a6 86 00  	csetbounds	ca3, ca3, 8
20041648: 90 e2        	csc	ca2, 0(ca3)
2004164a: 13 86 05 20  	addi	a2, a1, 512
;   return __builtin_cheri_address_set(globalRoot, addr);
2004164e: 5b 06 c5 20  	csetaddr	ca2, ca0, a2
;   uartReg = (volatile unsigned char*)from_root(0x21000200U);
20041652: db 96 01 c9  	cincoffset	ca3, cgp, -880
20041656: db a6 86 00  	csetbounds	ca3, ca3, 8
2004165a: 90 e2        	csc	ca2, 0(ca3)
2004165c: 13 86 05 30  	addi	a2, a1, 768
;   return __builtin_cheri_address_set(globalRoot, addr);
20041660: 5b 06 c5 20  	csetaddr	ca2, ca0, a2
;   rngReg  = (volatile unsigned int*)from_root(0x21000300U);
20041664: db 96 81 ca  	cincoffset	ca3, cgp, -856
20041668: db a6 86 00  	csetbounds	ca3, ca3, 8
2004166c: 90 e2        	csc	ca2, 0(ca3)
2004166e: 93 85 05 40  	addi	a1, a1, 1024
;   return __builtin_cheri_address_set(globalRoot, addr);
20041672: db 05 b5 20  	csetaddr	ca1, ca0, a1
;   cfgReg  = (volatile unsigned int*)from_root(0x21000400U);
20041676: 5b 96 01 cb  	cincoffset	ca2, cgp, -848
2004167a: 5b 26 86 00  	csetbounds	ca2, ca2, 8
2004167e: 0c e2        	csc	ca1, 0(ca2)
20041680: b7 15 01 20  	lui	a1, 131089
;   return __builtin_cheri_address_set(globalRoot, addr);
20041684: 5b 05 b5 20  	csetaddr	ca0, ca0, a1
;   memRands = (volatile unsigned int*)from_root(0x20011000U);
20041688: db 95 81 cb  	cincoffset	ca1, cgp, -840
2004168c: db a5 85 00  	csetbounds	ca1, ca1, 8
20041690: 88 e1        	csc	ca0, 0(ca1)
;   malloc_init(heapCap, heapSize);
20041692: 22 75        	clc	ca0, 40(csp)
20041694: d2 55        	clw	a1, 52(csp)
20041696: ef e0 7f f5  	cjal	0x200405ec <malloc_init(void*, unsigned int)>
2004169a: 37 b5 00 8f  	lui	a0, 585739
; 	ret = cheri_address_set(ret, start);
2004169e: 82 75        	clc	ca1, 32(csp)
200416a0: 5b 85 a5 20  	csetaddr	ca0, ca1, a0
200416a4: 85 65        	lui	a1, 1
; 	ret = cheri_bounds_set(ret, len);
200416a6: 5b 05 b5 10  	csetbounds	ca0, ca0, a1
200416aa: b7 35 31 01  	lui	a1, 4883
200416ae: 93 85 05 d0  	addi	a1, a1, -768
200416b2: 71 66        	lui	a2, 28
200416b4: 13 06 06 20  	addi	a2, a2, 512
; 	uart_init(cap_build(memRootArg, UART_ADDR, 0x1000, memoryPerms), XTAL_FREQ, BAUDRATE);
200416b8: 8d 46        	addi	a3, zero, 3
200416ba: 01 47        	mv	a4, zero
200416bc: 81 47        	mv	a5, zero
200416be: ef 10 00 60  	cjal	0x20042cbe <uart_init(void*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>
; 	int retval = main();
200416c2: bd 20        	cjal	0x20041730 <main>
; 	_exit(retval);
200416c4: 21 3d        	cjal	0x200414dc <__cxa_pure_virtual>
200416c6: 00 00        	unimp	

200416c8 <iterate(void*)>:
; void *iterate(void *pres) {
200416c8: 3d 71        	cincoffset	csp, csp, -32
200416ca: 06 ec        	csc	cra, 24(csp)
200416cc: 22 e8        	csc	cs0, 16(csp)
200416ce: 26 e4        	csc	cs1, 8(csp)
200416d0: 5b 04 a5 fe  	cmove	cs0, ca0
200416d4: 81 44        	mv	s1, zero
; 	ee_u32 iterations=res->iterations;
200416d6: 48 55        	clw	a0, 44(ca0)
; 	res->crc=0;
200416d8: 2a c2        	csw	a0, 4(csp)
200416da: 23 10 04 06  	csh	zero, 96(cs0)
; 	res->crclist=0;
200416de: 23 11 04 06  	csh	zero, 98(cs0)
; 	res->crcmatrix=0;
200416e2: 23 12 04 06  	csh	zero, 100(cs0)
; 	res->crcstate=0;
200416e6: 23 13 04 06  	csh	zero, 102(cs0)

200416ea <.LBB0_1>:
; 	for (i=0; i<iterations; i++) {
200416ea: 12 45        	clw	a0, 4(csp)
200416ec: 63 0b 95 02  	beq	a0, s1, 0x20041722 <.LBB0_5>
; 		crc=core_bench_list(res,1);
200416f0: 85 45        	addi	a1, zero, 1
200416f2: 5b 05 a4 fe  	cmove	ca0, cs0
200416f6: f1 2f        	cjal	0x20041ed2 <core_bench_list(RESULTS_S*, short)>
; 		res->crc=crcu16(crc,res->crc);
200416f8: 83 55 04 06  	clhu	a1, 96(cs0)
200416fc: ef 10 60 47  	cjal	0x20042b72 <crcu16(unsigned short, unsigned short)>
20041700: 23 10 a4 06  	csh	a0, 96(cs0)
; 		crc=core_bench_list(res,-1);
20041704: fd 55        	addi	a1, zero, -1
20041706: 5b 05 a4 fe  	cmove	ca0, cs0
2004170a: e1 27        	cjal	0x20041ed2 <core_bench_list(RESULTS_S*, short)>
; 		res->crc=crcu16(crc,res->crc);
2004170c: 83 55 04 06  	clhu	a1, 96(cs0)
20041710: ef 10 20 46  	cjal	0x20042b72 <crcu16(unsigned short, unsigned short)>
20041714: 23 10 a4 06  	csh	a0, 96(cs0)
; 		if (i==0) res->crclist=res->crc;
20041718: 99 e0        	bnez	s1, 0x2004171e <.LBB0_4>
2004171a: 23 11 a4 06  	csh	a0, 98(cs0)

2004171e <.LBB0_4>:
; 	for (i=0; i<iterations; i++) {
2004171e: 85 04        	addi	s1, s1, 1
20041720: e9 b7        	j	0x200416ea <.LBB0_1>

20041722 <.LBB0_5>:
; 	return NULL;
20041722: 5b 05 a0 fe  	cmove	ca0, cnull
20041726: a2 64        	clc	cs1, 8(csp)
20041728: 42 64        	clc	cs0, 16(csp)
2004172a: e2 60        	clc	cra, 24(csp)
2004172c: 05 61        	cincoffset	csp, csp, 32
2004172e: 82 80        	cret

20041730 <main>:
; MAIN_RETURN_TYPE main(void) {
20041730: 51 71        	cincoffset	csp, csp, -240
20041732: 86 f5        	csc	cra, 232(csp)
20041734: a2 f1        	csc	cs0, 224(csp)
20041736: a6 ed        	csc	cs1, 216(csp)
20041738: a8 08        	cincoffset	ca0, csp, 88
2004173a: 5b 25 05 07  	csetbounds	ca0, ca0, 112
; 	int argc=0;
2004173e: 82 cb        	csw	zero, 212(csp)
20041740: aa e8        	csc	ca0, 80(csp)
; 	portable_init(&(results[0].port), &argc, argv);
20041742: 5b 15 a5 06  	cincoffset	ca0, ca0, 106
20041746: ac 01        	cincoffset	ca1, csp, 200
20041748: 5b a6 85 00  	csetbounds	ca2, ca1, 8
2004174c: cc 09        	cincoffset	ca1, csp, 212
2004174e: db a5 45 00  	csetbounds	ca1, ca1, 4
20041752: 2a f0        	csc	ca0, 32(csp)
; 	portable_init(&(results[0].port), &argc, argv);
20041754: ef 10 a0 4d  	cjal	0x20042c2e <portable_init(CORE_PORTABLE_S*, int*, char**)>
; 	results[0].seed1=get_seed(1);
20041758: 05 45        	addi	a0, zero, 1
2004175a: ef 10 e0 3c  	cjal	0x20042b28 <get_seed_32(int)>
2004175e: 23 1c a1 04  	csh	a0, 88(csp)
; 	results[0].seed2=get_seed(2);
20041762: 09 45        	addi	a0, zero, 2
20041764: ef 10 40 3c  	cjal	0x20042b28 <get_seed_32(int)>
20041768: 23 1d a1 04  	csh	a0, 90(csp)
; 	results[0].seed3=get_seed(3);
2004176c: 0d 45        	addi	a0, zero, 3
2004176e: ef 10 a0 3b  	cjal	0x20042b28 <get_seed_32(int)>
20041772: 23 1e a1 04  	csh	a0, 92(csp)
; 	results[0].iterations=get_seed_32(4);
20041776: 11 45        	addi	a0, zero, 4
20041778: ef 10 00 3b  	cjal	0x20042b28 <get_seed_32(int)>
2004177c: 2a c3        	csw	a0, 132(csp)

2004177e <.LBB1_74>:
; ee_printf("--A0\n");
2004177e: 97 35 00 00  	auipcc	ca1, 3
20041782: db 95 a5 25  	cincoffset	ca1, ca1, 602
20041786: db a5 65 00  	csetbounds	ca1, ca1, 6
2004178a: 5b 15 10 00  	cincoffset	ca0, cnull, 1
2004178e: ef f0 2f e1  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
; 	results[0].execs=get_seed_32(5);
20041792: 15 45        	addi	a0, zero, 5
20041794: ef 10 40 39  	cjal	0x20042b28 <get_seed_32(int)>
20041798: 9d 45        	addi	a1, zero, 7
; 	if (results[0].execs==0) { /* if not supplied, execute all algorithms */
2004179a: 11 c1        	beqz	a0, 0x2004179e <.LBB1_2>
2004179c: aa 85        	mv	a1, a0

2004179e <.LBB1_2>:
2004179e: 2e c5        	csw	a1, 136(csp)
; 	if ((results[0].seed1==0) && (results[0].seed2==0) && (results[0].seed3==0)) { /* validation run */
200417a0: 83 55 81 05  	clhu	a1, 88(csp)
200417a4: 03 55 a1 05  	clhu	a0, 90(csp)
200417a8: 03 56 c1 05  	clhu	a2, 92(csp)
200417ac: b3 e6 a5 00  	or	a3, a1, a0
200417b0: d1 8e        	or	a3, a3, a2
200417b2: 99 ea        	bnez	a3, 0x200417c8 <.LBB1_4>
200417b4: 01 45        	mv	a0, zero
200417b6: 81 45        	mv	a1, zero
; 		results[0].seed1=0;
200417b8: 23 1c 01 04  	csh	zero, 88(csp)
; 		results[0].seed2=0;
200417bc: 23 1d 01 04  	csh	zero, 90(csp)
200417c0: 13 06 60 06  	addi	a2, zero, 102
; 		results[0].seed3=0x66;
200417c4: 23 1e c1 04  	csh	a2, 92(csp)

200417c8 <.LBB1_4>:
; 	if ((results[0].seed1==1) && (results[0].seed2==0) && (results[0].seed3==0)) { /* perfromance run */
200417c8: 93 c5 15 00  	xori	a1, a1, 1
200417cc: 4d 8d        	or	a0, a0, a1
200417ce: 51 8d        	or	a0, a0, a2
200417d0: 01 ed        	bnez	a0, 0x200417e8 <.LBB1_75>
200417d2: 0d 65        	lui	a0, 3
200417d4: 13 05 55 41  	addi	a0, a0, 1045
; 		results[0].seed1=0x3415;
200417d8: 23 1c a1 04  	csh	a0, 88(csp)
; 		results[0].seed2=0x3415;
200417dc: 23 1d a1 04  	csh	a0, 90(csp)
200417e0: 13 05 60 06  	addi	a0, zero, 102
; 		results[0].seed3=0x66;
200417e4: 23 1e a1 04  	csh	a0, 92(csp)

200417e8 <.LBB1_75>:
; ee_printf("--A1\n");
200417e8: 97 35 00 00  	auipcc	ca1, 3
200417ec: db 95 85 34  	cincoffset	ca1, ca1, 840
200417f0: db a5 65 00  	csetbounds	ca1, ca1, 6
200417f4: 5b 15 10 00  	cincoffset	ca0, cnull, 1
200417f8: ef f0 8f da  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
; 	results[0].memblock[0]=(void *)static_memblk;
200417fc: 5b 95 01 d0  	cincoffset	ca0, cgp, -768
20041800: 5b 25 05 7d  	csetbounds	ca0, ca0, 2000
20041804: aa f0        	csc	ca0, 96(csp)
20041806: 13 05 00 7d  	addi	a0, zero, 2000
; 	results[0].size=TOTAL_DATA_SIZE;
2004180a: 2a c1        	csw	a0, 128(csp)
; 	results[0].err=0;
2004180c: 23 10 01 0c  	csh	zero, 192(csp)

20041810 <.LBB1_76>:
; ee_printf("--A2\n");
20041810: 97 35 00 00  	auipcc	ca1, 3
20041814: db 95 05 19  	cincoffset	ca1, ca1, 400
20041818: db a5 65 00  	csetbounds	ca1, ca1, 6
2004181c: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041820: ef f0 0f d8  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
20041824: 2a 45        	clw	a0, 136(csp)
20041826: 81 45        	mv	a1, zero
20041828: 01 46        	mv	a2, zero
2004182a: 8d 46        	addi	a3, zero, 3
; 	for (i=0; i<NUM_ALGORITHMS; i++) {
2004182c: 63 89 d5 00  	beq	a1, a3, 0x2004183e <.LBB1_8>

20041830 <.LBB1_7>:
; 		if ((1<<(ee_u32)i) & results[0].execs)
20041830: 33 57 b5 00  	srl	a4, a0, a1
20041834: 05 8b        	andi	a4, a4, 1
20041836: 3a 96        	add	a2, a2, a4
; 	for (i=0; i<NUM_ALGORITHMS; i++) {
20041838: 85 05        	addi	a1, a1, 1
2004183a: e3 9b d5 fe  	bne	a1, a3, 0x20041830 <.LBB1_7>

2004183e <.LBB1_8>:
; 		results[i].size=results[i].size/num_algorithms;
2004183e: 8a 46        	clw	a3, 128(csp)
20041840: c1 65        	lui	a1, 16
20041842: 13 83 f5 ff  	addi	t1, a1, -1
20041846: 33 76 66 00  	and	a2, a2, t1
2004184a: 33 d6 c6 02  	divu	a2, a3, a2
2004184e: 32 c1        	csw	a2, 128(csp)
20041850: 86 72        	clc	ct0, 96(csp)
20041852: 01 47        	mv	a4, zero
20041854: 81 47        	mv	a5, zero
20041856: 8d 44        	addi	s1, zero, 3
20041858: c6 65        	clc	ca1, 80(csp)

2004185a <.LBB1_9>:
; 	for (i=0; i<NUM_ALGORITHMS; i++) {
2004185a: 63 07 97 02  	beq	a4, s1, 0x20041888 <.LBB1_77>
; 		if ((1<<(ee_u32)i) & results[0].execs) {
2004185e: 33 54 e5 00  	srl	s0, a0, a4
20041862: 05 88        	andi	s0, s0, 1
20041864: 19 e0        	bnez	s0, 0x2004186a <.LBB1_12>
; 	for (i=0; i<NUM_ALGORITHMS; i++) {
20041866: 05 07        	addi	a4, a4, 1
20041868: cd bf        	j	0x2004185a <.LBB1_9>

2004186a <.LBB1_12>:
; 				results[ctx].memblock[i+1]=(char *)(results[ctx].memblock[0])+results[0].size*j;
2004186a: 33 f4 67 00  	and	s0, a5, t1
2004186e: 33 04 86 02  	mul	s0, a2, s0
20041872: 5b 84 82 22  	cincoffset	cs0, ct0, s0
20041876: 05 07        	addi	a4, a4, 1
20041878: 93 16 37 00  	slli	a3, a4, 3
2004187c: a1 06        	addi	a3, a3, 8
2004187e: db 86 d5 22  	cincoffset	ca3, ca1, a3
20041882: 80 e2        	csc	cs0, 0(ca3)
; 			j++;
20041884: 85 07        	addi	a5, a5, 1
20041886: d1 bf        	j	0x2004185a <.LBB1_9>

20041888 <.LBB1_77>:
; ee_printf("--A3\n");
20041888: 97 25 00 00  	auipcc	ca1, 2
2004188c: db 95 85 70  	cincoffset	ca1, ca1, 1800
20041890: db a5 65 00  	csetbounds	ca1, ca1, 6
20041894: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041898: ef f0 8f d0  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
2004189c: 81 44        	mv	s1, zero
2004189e: 85 45        	addi	a1, zero, 1

200418a0 <.LBB1_14>:
; 	for (i=0 ; i<MULTITHREAD; i++) {
200418a0: 13 f5 15 00  	andi	a0, a1, 1
200418a4: 25 c9        	beqz	a0, 0x20041914 <.LBB1_78>
; 		if (results[i].execs & ID_LIST) {
200418a6: 2a 45        	clw	a0, 136(csp)
200418a8: 93 05 00 07  	addi	a1, zero, 112
200418ac: b3 84 b4 02  	mul	s1, s1, a1
200418b0: 93 75 15 00  	andi	a1, a0, 1
200418b4: 46 66        	clc	ca2, 80(csp)
200418b6: 5b 04 96 22  	cincoffset	cs0, ca2, s1
200418ba: 91 cd        	beqz	a1, 0x200418d6 <.LBB1_17>
; 			results[i].list=core_list_init(results[0].size,(list_head*)results[i].memblock[1],results[i].seed1);
200418bc: 0a 45        	clw	a0, 128(csp)
200418be: 93 85 04 01  	addi	a1, s1, 16
200418c2: 46 66        	clc	ca2, 80(csp)
200418c4: db 05 b6 22  	cincoffset	ca1, ca2, a1
200418c8: 8c 61        	clc	ca1, 0(ca1)
200418ca: 03 16 04 00  	clh	a2, 0(cs0)
200418ce: ef 00 30 0f  	cjal	0x200421c0 <core_list_init(unsigned int, list_head_s*, short)>
200418d2: 2a e9        	csc	ca0, 144(csp)
; 		if (results[i].execs & ID_MATRIX) {
200418d4: 2a 45        	clw	a0, 136(csp)

200418d6 <.LBB1_17>:
200418d6: 93 75 25 00  	andi	a1, a0, 2
200418da: 8d c1        	beqz	a1, 0x200418fc <.LBB1_19>
; 			core_init_matrix(results[0].size, results[i].memblock[2], (ee_s32)results[i].seed1 | (((ee_s32)results[i].seed2) << 16), &(results[i].mat) );
200418dc: 03 16 a1 05  	clh	a2, 90(csp)
200418e0: 83 16 04 00  	clh	a3, 0(cs0)
200418e4: 0a 45        	clw	a0, 128(csp)
200418e6: c6 75        	clc	ca1, 112(csp)
200418e8: 42 06        	slli	a2, a2, 16
200418ea: 55 8e        	or	a2, a2, a3
200418ec: 93 86 04 04  	addi	a3, s1, 64
200418f0: 46 67        	clc	ca4, 80(csp)
200418f2: db 06 d7 22  	cincoffset	ca3, ca4, a3
200418f6: ef 00 b0 57  	cjal	0x20042670 <core_init_matrix(unsigned int, void*, int, MAT_PARAMS_S*)>
; 		if (results[i].execs & ID_STATE) {
200418fa: 2a 45        	clw	a0, 136(csp)

200418fc <.LBB1_19>:
200418fc: 81 45        	mv	a1, zero
; 		if (results[i].execs & ID_STATE) {
200418fe: 11 89        	andi	a0, a0, 4
20041900: 85 44        	addi	s1, zero, 1
20041902: 59 dd        	beqz	a0, 0x200418a0 <.LBB1_14>
; 			core_init_state(results[0].size,(ee_s16)results[i].seed1,(ee_u8*)results[i].memblock[3]);
20041904: 0a 45        	clw	a0, 128(csp)
20041906: 83 15 04 00  	clh	a1, 0(cs0)
2004190a: 66 76        	clc	ca2, 120(csp)
2004190c: ef 10 00 12  	cjal	0x20042a2c <core_init_state(unsigned int, short, unsigned char*)>
20041910: 81 45        	mv	a1, zero
20041912: 79 b7        	j	0x200418a0 <.LBB1_14>

20041914 <.LBB1_78>:
; ee_printf("--A4\n");
20041914: 97 25 00 00  	auipcc	ca1, 2
20041918: db 95 c5 72  	cincoffset	ca1, ca1, 1836
2004191c: db a5 65 00  	csetbounds	ca1, ca1, 6
20041920: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041924: ef f0 cf c7  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
; 	if (results[0].iterations==0) { 
20041928: 1a 45        	clw	a0, 132(csp)
2004192a: 0d ed        	bnez	a0, 0x20041964 <.LBB1_25>
2004192c: 01 45        	mv	a0, zero
2004192e: 85 45        	addi	a1, zero, 1
; 		results[0].iterations=1;
20041930: 2e c3        	csw	a1, 132(csp)
20041932: 29 44        	addi	s0, zero, 10
; 		while (secs_passed < (secs_ret)1) {
20041934: 05 e1        	bnez	a0, 0x20041954 <.LBB1_24>

20041936 <.LBB1_23>:
; 			results[0].iterations*=10;
20041936: 1a 45        	clw	a0, 132(csp)
20041938: 33 05 85 02  	mul	a0, a0, s0
2004193c: 2a c3        	csw	a0, 132(csp)
; 			start_time();
2004193e: ef 10 e0 29  	cjal	0x20042bdc <start_time()>
; 			iterate(&results[0]);
20041942: 46 65        	clc	ca0, 80(csp)
20041944: 51 33        	cjal	0x200416c8 <iterate(void*)>
; 			stop_time();
20041946: ef 10 c0 2a  	cjal	0x20042bf2 <stop_time()>
; 			secs_passed=time_in_secs(get_time());
2004194a: ef 10 e0 2b  	cjal	0x20042c08 <get_time()>
2004194e: ef 10 20 2d  	cjal	0x20042c20 <time_in_secs(unsigned int)>
; 		while (secs_passed < (secs_ret)1) {
20041952: 75 d1        	beqz	a0, 0x20041936 <.LBB1_23>

20041954 <.LBB1_24>:
; 		results[0].iterations*=1+10/divisor;
20041954: 9a 45        	clw	a1, 132(csp)
20041956: 29 46        	addi	a2, zero, 10
20041958: 33 55 a6 02  	divu	a0, a2, a0
2004195c: 05 05        	addi	a0, a0, 1
2004195e: 33 85 a5 02  	mul	a0, a1, a0
20041962: 2a c3        	csw	a0, 132(csp)

20041964 <.LBB1_25>:
;   ee_printf("starting %d iterations with seeds %x %x %x\n", ITERATIONS, results[0].seed1, results[0].seed2, results[0].seed3); 
20041964: 03 15 81 05  	clh	a0, 88(csp)
20041968: 83 15 a1 05  	clh	a1, 90(csp)
2004196c: 03 16 c1 05  	clh	a2, 92(csp)
20041970: 32 c6        	csw	a2, 12(csp)
20041972: 2e c4        	csw	a1, 8(csp)
20041974: 2a c2        	csw	a0, 4(csp)
20041976: 05 46        	addi	a2, zero, 1

20041978 <.LBB1_79>:
20041978: 97 25 00 00  	auipcc	ca1, 2
2004197c: db 95 85 53  	cincoffset	ca1, ca1, 1336
20041980: db a5 c5 02  	csetbounds	ca1, ca1, 44
20041984: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041988: 32 c0        	csw	a2, 0(csp)
2004198a: ef f0 6f c1  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
; 	start_time();
2004198e: ef 10 e0 24  	cjal	0x20042bdc <start_time()>
; 	iterate(&results[0]);
20041992: 46 65        	clc	ca0, 80(csp)
20041994: 15 3b        	cjal	0x200416c8 <iterate(void*)>
; 	stop_time();
20041996: ef 10 c0 25  	cjal	0x20042bf2 <stop_time()>
; 	total_time=get_time();
2004199a: ef 10 e0 26  	cjal	0x20042c08 <get_time()>
; 	seedcrc=crc16(results[0].seed1,seedcrc);
2004199e: 83 15 81 05  	clh	a1, 88(csp)
; 	total_time=get_time();
200419a2: 2a 84        	mv	s0, a0
; 	seedcrc=crc16(results[0].seed1,seedcrc);
200419a4: 2e 85        	mv	a0, a1
200419a6: 81 45        	mv	a1, zero
200419a8: ef 10 c0 20  	cjal	0x20042bb4 <crc16(short, unsigned short)>
; 	seedcrc=crc16(results[0].seed2,seedcrc);
200419ac: 83 15 a1 05  	clh	a1, 90(csp)
; 	seedcrc=crc16(results[0].seed1,seedcrc);
200419b0: 2a 86        	mv	a2, a0
; 	seedcrc=crc16(results[0].seed2,seedcrc);
200419b2: 2e 85        	mv	a0, a1
200419b4: b2 85        	mv	a1, a2
200419b6: ef 10 e0 1f  	cjal	0x20042bb4 <crc16(short, unsigned short)>
; 	seedcrc=crc16(results[0].seed3,seedcrc);
200419ba: 83 15 c1 05  	clh	a1, 92(csp)
; 	seedcrc=crc16(results[0].seed2,seedcrc);
200419be: 2a 86        	mv	a2, a0
; 	seedcrc=crc16(results[0].seed3,seedcrc);
200419c0: 2e 85        	mv	a0, a1
200419c2: b2 85        	mv	a1, a2
200419c4: ef 10 00 1f  	cjal	0x20042bb4 <crc16(short, unsigned short)>
; 	seedcrc=crc16(results[0].size,seedcrc);
200419c8: 83 15 01 08  	clh	a1, 128(csp)
; 	seedcrc=crc16(results[0].seed3,seedcrc);
200419cc: 2a 86        	mv	a2, a0
; 	seedcrc=crc16(results[0].size,seedcrc);
200419ce: 2e 85        	mv	a0, a1
200419d0: b2 85        	mv	a1, a2
200419d2: ef 10 20 1e  	cjal	0x20042bb4 <crc16(short, unsigned short)>
200419d6: 89 65        	lui	a1, 2
200419d8: 93 85 25 8f  	addi	a1, a1, -1806
; 	switch (seedcrc) { /* test known output for common seeds */
200419dc: 2a ce        	csw	a0, 28(csp)
200419de: 63 00 b5 04  	beq	a0, a1, 0x20041a1e <.LBB1_31>
200419e2: 95 65        	lui	a1, 5
200419e4: 93 85 f5 ea  	addi	a1, a1, -337
; 	switch (seedcrc) { /* test known output for common seeds */
200419e8: 63 05 b5 04  	beq	a0, a1, 0x20041a32 <.LBB1_32>
200419ec: bd 65        	lui	a1, 15
200419ee: 93 85 55 9f  	addi	a1, a1, -1547
; 	switch (seedcrc) { /* test known output for common seeds */
200419f2: 63 0a b5 04  	beq	a0, a1, 0x20041a46 <.LBB1_33>
200419f6: a5 65        	lui	a1, 9
200419f8: 93 85 25 a0  	addi	a1, a1, -1534
; 	switch (seedcrc) { /* test known output for common seeds */
200419fc: 63 0f b5 04  	beq	a0, a1, 0x20041a5a <.LBB1_34>
20041a00: a1 65        	lui	a1, 8
20041a02: 93 85 55 b0  	addi	a1, a1, -1275
; 	switch (seedcrc) { /* test known output for common seeds */
20041a06: 63 16 b5 3a  	bne	a0, a1, 0x20041db2 <.LBB1_73>
20041a0a: 22 cc        	csw	s0, 24(csp)
20041a0c: 05 45        	addi	a0, zero, 1
20041a0e: aa c8        	csw	a0, 80(csp)

20041a10 <.LBB1_80>:
20041a10: 97 35 00 00  	auipcc	ca1, 3
20041a14: db 95 05 09  	cincoffset	ca1, ca1, 144
20041a18: db a5 c5 02  	csetbounds	ca1, ca1, 44
20041a1c: b9 a0        	j	0x20041a6a <.LBB1_35>

20041a1e <.LBB1_31>:
20041a1e: 22 cc        	csw	s0, 24(csp)
20041a20: 11 45        	addi	a0, zero, 4
20041a22: aa c8        	csw	a0, 80(csp)

20041a24 <.LBB1_81>:
20041a24: 97 25 00 00  	auipcc	ca1, 2
20041a28: db 95 c5 7e  	cincoffset	ca1, ca1, 2028
20041a2c: db a5 c5 02  	csetbounds	ca1, ca1, 44
20041a30: 2d a8        	j	0x20041a6a <.LBB1_35>

20041a32 <.LBB1_32>:
20041a32: 22 cc        	csw	s0, 24(csp)
20041a34: 09 45        	addi	a0, zero, 2
20041a36: aa c8        	csw	a0, 80(csp)

20041a38 <.LBB1_82>:
20041a38: 97 25 00 00  	auipcc	ca1, 2
20041a3c: db 95 05 5d  	cincoffset	ca1, ca1, 1488
20041a40: db a5 15 03  	csetbounds	ca1, ca1, 49
20041a44: 1d a0        	j	0x20041a6a <.LBB1_35>

20041a46 <.LBB1_33>:
20041a46: 22 cc        	csw	s0, 24(csp)
20041a48: 0d 45        	addi	a0, zero, 3
20041a4a: aa c8        	csw	a0, 80(csp)

20041a4c <.LBB1_83>:
20041a4c: 97 25 00 00  	auipcc	ca1, 2
20041a50: db 95 c5 4a  	cincoffset	ca1, ca1, 1196
20041a54: db a5 d5 02  	csetbounds	ca1, ca1, 45
20041a58: 09 a8        	j	0x20041a6a <.LBB1_35>

20041a5a <.LBB1_34>:
20041a5a: 22 cc        	csw	s0, 24(csp)
20041a5c: 82 c8        	csw	zero, 80(csp)

20041a5e <.LBB1_84>:
20041a5e: 97 25 00 00  	auipcc	ca1, 2
20041a62: db 95 25 78  	cincoffset	ca1, ca1, 1922
20041a66: db a5 d5 02  	csetbounds	ca1, ca1, 45

20041a6a <.LBB1_35>:
20041a6a: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041a6e: ef f0 2f b3  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
20041a72: 81 44        	mv	s1, zero
20041a74: 01 44        	mv	s0, zero
20041a76: 46 45        	clw	a0, 80(csp)
20041a78: 06 05        	slli	a0, a0, 1

20041a7a <.LBB1_85>:
20041a7a: 97 35 00 00  	auipcc	ca1, 3
20041a7e: db 95 e5 0e  	cincoffset	ca1, ca1, 238
20041a82: db a5 a5 00  	csetbounds	ca1, ca1, 10
20041a86: db 85 a5 22  	cincoffset	ca1, ca1, a0
20041a8a: ae e8        	csc	ca1, 80(csp)

20041a8c <.LBB1_86>:
20041a8c: 97 35 00 00  	auipcc	ca1, 3
20041a90: db 95 65 0e  	cincoffset	ca1, ca1, 230
20041a94: db a5 a5 00  	csetbounds	ca1, ca1, 10
20041a98: db 85 a5 22  	cincoffset	ca1, ca1, a0
20041a9c: ae e4        	csc	ca1, 72(csp)

20041a9e <.LBB1_87>:
20041a9e: 97 35 00 00  	auipcc	ca1, 3
20041aa2: db 95 e5 0d  	cincoffset	ca1, ca1, 222
20041aa6: db a5 a5 00  	csetbounds	ca1, ca1, 10
20041aaa: 5b 85 a5 22  	cincoffset	ca0, ca1, a0
20041aae: aa e0        	csc	ca0, 64(csp)
20041ab0: 85 45        	addi	a1, zero, 1

20041ab2 <.LBB1_88>:
20041ab2: 17 25 00 00  	auipcc	ca0, 2
20041ab6: 5b 15 65 6f  	cincoffset	ca0, ca0, 1782
20041aba: 5b 25 05 03  	csetbounds	ca0, ca0, 48
20041abe: 2a fc        	csc	ca0, 56(csp)

20041ac0 <.LBB1_89>:
20041ac0: 17 25 00 00  	auipcc	ca0, 2
20041ac4: 5b 15 05 51  	cincoffset	ca0, ca0, 1296
20041ac8: 5b 25 15 03  	csetbounds	ca0, ca0, 49
20041acc: 2a f8        	csc	ca0, 48(csp)

20041ace <.LBB1_90>:
20041ace: 17 35 00 00  	auipcc	ca0, 3
20041ad2: 5b 15 a5 00  	cincoffset	ca0, ca0, 10
20041ad6: 5b 25 f5 02  	csetbounds	ca0, ca0, 47
20041ada: 2a f4        	csc	ca0, 40(csp)

20041adc <.LBB1_36>:
; 		for (i=0 ; i<default_num_contexts; i++) {
20041adc: 13 f5 15 00  	andi	a0, a1, 1
20041ae0: 45 c1        	beqz	a0, 0x20041b80 <.LBB1_48>
; 			results[i].err=0;
20041ae2: 23 10 01 0c  	csh	zero, 192(csp)
; 			if ((results[i].execs & ID_LIST) && 
20041ae6: aa 45        	clw	a1, 136(csp)
20041ae8: 13 f6 15 00  	andi	a2, a1, 1
20041aec: 01 ca        	beqz	a2, 0x20041afc <.LBB1_39>
; 				(results[i].crclist!=list_known_crc[known_id])) {
20041aee: 03 55 a1 0b  	clhu	a0, 186(csp)
20041af2: 46 66        	clc	ca2, 80(csp)
20041af4: 03 56 06 00  	clhu	a2, 0(ca2)
; 			if ((results[i].execs & ID_LIST) && 
20041af8: 63 14 c5 00  	bne	a0, a2, 0x20041b00 <.LBB1_40>

20041afc <.LBB1_39>:
20041afc: 01 45        	mv	a0, zero
20041afe: 39 a8        	j	0x20041b1c <.LBB1_41>

20041b00 <.LBB1_40>:
; 				ee_printf("[%u]ERROR! list crc 0x%04x - should be 0x%04x\n",i,results[i].crclist,list_known_crc[known_id]);
20041b00: 32 c4        	csw	a2, 8(csp)
20041b02: 2a c2        	csw	a0, 4(csp)
20041b04: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041b08: 22 c0        	csw	s0, 0(csp)
20041b0a: a2 75        	clc	ca1, 40(csp)
20041b0c: ef f0 4f a9  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
; 				results[i].err++;
20041b10: 03 15 01 0c  	clh	a0, 192(csp)
20041b14: 05 05        	addi	a0, a0, 1
20041b16: 23 10 a1 0c  	csh	a0, 192(csp)
; 			if ((results[i].execs & ID_MATRIX) &&
20041b1a: aa 45        	clw	a1, 136(csp)

20041b1c <.LBB1_41>:
20041b1c: 13 f6 25 00  	andi	a2, a1, 2
20041b20: 15 c6        	beqz	a2, 0x20041b4c <.LBB1_44>
; 				(results[i].crcmatrix!=matrix_known_crc[known_id])) {
20041b22: 03 56 c1 0b  	clhu	a2, 188(csp)
20041b26: a6 66        	clc	ca3, 72(csp)
20041b28: 83 d6 06 00  	clhu	a3, 0(ca3)
; 			if ((results[i].execs & ID_MATRIX) &&
20041b2c: 63 00 d6 02  	beq	a2, a3, 0x20041b4c <.LBB1_44>
; 				ee_printf("[%u]ERROR! matrix crc 0x%04x - should be 0x%04x\n",i,results[i].crcmatrix,matrix_known_crc[known_id]);
20041b30: 36 c4        	csw	a3, 8(csp)
20041b32: 32 c2        	csw	a2, 4(csp)
20041b34: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041b38: 22 c0        	csw	s0, 0(csp)
20041b3a: c2 75        	clc	ca1, 48(csp)
20041b3c: ef f0 4f a6  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
; 				results[i].err++;
20041b40: 03 15 01 0c  	clh	a0, 192(csp)
20041b44: 05 05        	addi	a0, a0, 1
20041b46: 23 10 a1 0c  	csh	a0, 192(csp)
; 			if ((results[i].execs & ID_STATE) &&
20041b4a: aa 45        	clw	a1, 136(csp)

20041b4c <.LBB1_44>:
20041b4c: 91 89        	andi	a1, a1, 4
20041b4e: 8d c5        	beqz	a1, 0x20041b78 <.LBB1_47>
; 				(results[i].crcstate!=state_known_crc[known_id])) {
20041b50: 83 55 e1 0b  	clhu	a1, 190(csp)
20041b54: 06 66        	clc	ca2, 64(csp)
20041b56: 03 56 06 00  	clhu	a2, 0(ca2)
; 			if ((results[i].execs & ID_STATE) &&
20041b5a: 63 8f c5 00  	beq	a1, a2, 0x20041b78 <.LBB1_47>
; 				ee_printf("[%u]ERROR! state crc 0x%04x - should be 0x%04x\n",i,results[i].crcstate,state_known_crc[known_id]);
20041b5e: 32 c4        	csw	a2, 8(csp)
20041b60: 2e c2        	csw	a1, 4(csp)
20041b62: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041b66: 22 c0        	csw	s0, 0(csp)
20041b68: e2 75        	clc	ca1, 56(csp)
20041b6a: ef f0 6f a3  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
; 				results[i].err++;
20041b6e: 03 15 01 0c  	clh	a0, 192(csp)
20041b72: 05 05        	addi	a0, a0, 1
20041b74: 23 10 a1 0c  	csh	a0, 192(csp)

20041b78 <.LBB1_47>:
20041b78: 81 45        	mv	a1, zero
; 			total_errors+=results[i].err;
20041b7a: aa 94        	add	s1, s1, a0
20041b7c: 05 44        	addi	s0, zero, 1
20041b7e: b9 bf        	j	0x20041adc <.LBB1_36>

20041b80 <.LBB1_48>:
20041b80: 62 44        	clw	s0, 24(csp)

20041b82 <.LBB1_49>:
; 	total_errors+=check_data_types();
20041b82: ef 10 a0 03  	cjal	0x20042bbc <check_data_types()>
; 	ee_printf("CoreMark Size    : %lu\n", (long unsigned) results[0].size);
20041b86: 0a 46        	clw	a2, 128(csp)
; 	total_errors+=check_data_types();
20041b88: aa c8        	csw	a0, 80(csp)

20041b8a <.LBB1_91>:
; 	ee_printf("CoreMark Size    : %lu\n", (long unsigned) results[0].size);
20041b8a: 97 25 00 00  	auipcc	ca1, 2
20041b8e: db 95 e5 7a  	cincoffset	ca1, ca1, 1966
20041b92: db a5 85 01  	csetbounds	ca1, ca1, 24
20041b96: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041b9a: 32 c0        	csw	a2, 0(csp)
20041b9c: ef f0 4f a0  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>

20041ba0 <.LBB1_92>:
; 	ee_printf("Total ticks      : %lu\n", (long unsigned) total_time);
20041ba0: 97 25 00 00  	auipcc	ca1, 2
20041ba4: db 95 05 34  	cincoffset	ca1, ca1, 832
20041ba8: db a5 85 01  	csetbounds	ca1, ca1, 24
20041bac: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041bb0: 22 c0        	csw	s0, 0(csp)
20041bb2: ef f0 ef 9e  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
; 	ee_printf("Total time (secs): %d\n",time_in_secs(total_time));
20041bb6: 22 85        	mv	a0, s0
20041bb8: ef 10 80 06  	cjal	0x20042c20 <time_in_secs(unsigned int)>
20041bbc: 2a 86        	mv	a2, a0

20041bbe <.LBB1_93>:
20041bbe: 97 25 00 00  	auipcc	ca1, 2
20041bc2: db 95 a5 4d  	cincoffset	ca1, ca1, 1242
20041bc6: db a5 75 01  	csetbounds	ca1, ca1, 23
20041bca: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041bce: 32 c0        	csw	a2, 0(csp)
20041bd0: ef f0 0f 9d  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
; 	if (time_in_secs(total_time) > 0)
20041bd4: 22 85        	mv	a0, s0
20041bd6: ef 10 a0 04  	cjal	0x20042c20 <time_in_secs(unsigned int)>
20041bda: 15 c1        	beqz	a0, 0x20041bfe <.LBB1_51>
20041bdc: 22 85        	mv	a0, s0
; 		ee_printf("Iterations/Sec   : %d\n",default_num_contexts*results[0].iterations/time_in_secs(total_time));
20041bde: 1a 44        	clw	s0, 132(csp)
20041be0: ef 10 00 04  	cjal	0x20042c20 <time_in_secs(unsigned int)>
20041be4: 33 56 a4 02  	divu	a2, s0, a0

20041be8 <.LBB1_94>:
20041be8: 97 25 00 00  	auipcc	ca1, 2
20041bec: db 95 85 76  	cincoffset	ca1, ca1, 1896
20041bf0: db a5 75 01  	csetbounds	ca1, ca1, 23
20041bf4: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041bf8: 32 c0        	csw	a2, 0(csp)
20041bfa: ef f0 6f 9a  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>

20041bfe <.LBB1_51>:
; 	ee_printf("Iterations       : %lu\n", (long unsigned) default_num_contexts*results[0].iterations);
20041bfe: 1a 46        	clw	a2, 132(csp)

20041c00 <.LBB1_95>:
20041c00: 97 25 00 00  	auipcc	ca1, 2
20041c04: db 95 85 44  	cincoffset	ca1, ca1, 1096
20041c08: db a5 85 01  	csetbounds	ca1, ca1, 24
20041c0c: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041c10: 32 c0        	csw	a2, 0(csp)
20041c12: ef f0 ef 98  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>

20041c16 <.LBB1_96>:
; 	ee_printf("Compiler version : %s\n",COMPILER_VERSION);
20041c16: 17 26 00 00  	auipcc	ca2, 2
20041c1a: 5b 16 a6 51  	cincoffset	ca2, ca2, 1306
20041c1e: 5b 26 c6 06  	csetbounds	ca2, ca2, 108

20041c22 <.LBB1_97>:
20041c22: 97 25 00 00  	auipcc	ca1, 2
20041c26: db 95 e5 48  	cincoffset	ca1, ca1, 1166
20041c2a: db a5 75 01  	csetbounds	ca1, ca1, 23
20041c2e: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041c32: 32 e0        	csc	ca2, 0(csp)
20041c34: ef f0 cf 96  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>

20041c38 <.LBB1_98>:
; 	ee_printf("Compiler flags   : %s\n",COMPILER_FLAGS);
20041c38: 17 26 00 00  	auipcc	ca2, 2
20041c3c: 5b 16 06 37  	cincoffset	ca2, ca2, 880
20041c40: 5b 26 56 00  	csetbounds	ca2, ca2, 5

20041c44 <.LBB1_99>:
20041c44: 97 25 00 00  	auipcc	ca1, 2
20041c48: db 95 45 48  	cincoffset	ca1, ca1, 1156
20041c4c: db a5 75 01  	csetbounds	ca1, ca1, 23
20041c50: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041c54: 32 e0        	csc	ca2, 0(csp)
20041c56: ef f0 af 94  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>

20041c5a <.LBB1_100>:
; 	ee_printf("Memory location  : %s\n",MEM_LOCATION);
20041c5a: 17 26 00 00  	auipcc	ca2, 2
20041c5e: 5b 16 66 6c  	cincoffset	ca2, ca2, 1734
20041c62: 5b 26 76 00  	csetbounds	ca2, ca2, 7

20041c66 <.LBB1_101>:
20041c66: 97 25 00 00  	auipcc	ca1, 2
20041c6a: db 95 25 6a  	cincoffset	ca1, ca1, 1698
20041c6e: db a5 75 01  	csetbounds	ca1, ca1, 23
20041c72: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041c76: 32 e0        	csc	ca2, 0(csp)
20041c78: ef f0 8f 92  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>

20041c7c <.LBB1_102>:
; 	ee_printf("seedcrc          : 0x%04x\n",seedcrc);
20041c7c: 97 25 00 00  	auipcc	ca1, 2
20041c80: db 95 c5 3f  	cincoffset	ca1, ca1, 1020
20041c84: db a5 b5 01  	csetbounds	ca1, ca1, 27
20041c88: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041c8c: 72 46        	clw	a2, 28(csp)
20041c8e: 32 c0        	csw	a2, 0(csp)
20041c90: ef f0 0f 91  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
; 	if (results[0].execs & ID_LIST)
20041c94: 2a 45        	clw	a0, 136(csp)
20041c96: 93 75 15 00  	andi	a1, a0, 1
20041c9a: 8d c9        	beqz	a1, 0x20041ccc <.LBB1_56>
20041c9c: 81 45        	mv	a1, zero
20041c9e: 05 45        	addi	a0, zero, 1

20041ca0 <.LBB1_103>:
20041ca0: 17 24 00 00  	auipcc	cs0, 2
20041ca4: 5b 14 04 5c  	cincoffset	cs0, cs0, 1472
20041ca8: 5b 24 c4 01  	csetbounds	cs0, cs0, 28

20041cac <.LBB1_53>:
; 		for (i=0 ; i<default_num_contexts; i++) 
20041cac: 05 89        	andi	a0, a0, 1
20041cae: 11 cd        	beqz	a0, 0x20041cca <.LBB1_55>
; 			ee_printf("[%d]crclist       : 0x%04x\n",i,results[i].crclist);
20041cb0: 03 55 a1 0b  	clhu	a0, 186(csp)
20041cb4: 2a c2        	csw	a0, 4(csp)
20041cb6: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041cba: 2e c0        	csw	a1, 0(csp)
20041cbc: db 05 a4 fe  	cmove	ca1, cs0
20041cc0: ef f0 0f 8e  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
20041cc4: 01 45        	mv	a0, zero
20041cc6: 85 45        	addi	a1, zero, 1
20041cc8: d5 b7        	j	0x20041cac <.LBB1_53>

20041cca <.LBB1_55>:
; 	if (results[0].execs & ID_MATRIX) 
20041cca: 2a 45        	clw	a0, 136(csp)

20041ccc <.LBB1_56>:
20041ccc: 93 75 25 00  	andi	a1, a0, 2
20041cd0: 46 46        	clw	a2, 80(csp)
20041cd2: b2 94        	add	s1, s1, a2
; 	if (results[0].execs & ID_MATRIX) 
20041cd4: 8d c9        	beqz	a1, 0x20041d06 <.LBB1_61>
20041cd6: 81 45        	mv	a1, zero
20041cd8: 05 45        	addi	a0, zero, 1

20041cda <.LBB1_104>:
20041cda: 17 24 00 00  	auipcc	cs0, 2
20041cde: 5b 14 64 2d  	cincoffset	cs0, cs0, 726
20041ce2: 5b 24 c4 01  	csetbounds	cs0, cs0, 28

20041ce6 <.LBB1_58>:
; 		for (i=0 ; i<default_num_contexts; i++) 
20041ce6: 05 89        	andi	a0, a0, 1
20041ce8: 11 cd        	beqz	a0, 0x20041d04 <.LBB1_60>
; 			ee_printf("[%d]crcmatrix     : 0x%04x\n",i,results[i].crcmatrix);
20041cea: 03 55 c1 0b  	clhu	a0, 188(csp)
20041cee: 2a c2        	csw	a0, 4(csp)
20041cf0: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041cf4: 2e c0        	csw	a1, 0(csp)
20041cf6: db 05 a4 fe  	cmove	ca1, cs0
20041cfa: ef f0 6f 8a  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
20041cfe: 01 45        	mv	a0, zero
20041d00: 85 45        	addi	a1, zero, 1
20041d02: d5 b7        	j	0x20041ce6 <.LBB1_58>

20041d04 <.LBB1_60>:
; 	if (results[0].execs & ID_STATE)
20041d04: 2a 45        	clw	a0, 136(csp)

20041d06 <.LBB1_61>:
20041d06: 11 89        	andi	a0, a0, 4
20041d08: c2 04        	slli	s1, s1, 16
; 	if (results[0].execs & ID_STATE)
20041d0a: 39 e1        	bnez	a0, 0x20041d50 <.LBB1_67>

20041d0c <.LBB1_62>:
20041d0c: 81 45        	mv	a1, zero
20041d0e: c1 84        	srai	s1, s1, 16
20041d10: 05 45        	addi	a0, zero, 1

20041d12 <.LBB1_105>:
20041d12: 17 24 00 00  	auipcc	cs0, 2
20041d16: 5b 14 e4 56  	cincoffset	cs0, cs0, 1390
20041d1a: 5b 24 c4 01  	csetbounds	cs0, cs0, 28

20041d1e <.LBB1_63>:
; 	for (i=0 ; i<default_num_contexts; i++) 
20041d1e: 05 89        	andi	a0, a0, 1
20041d20: 11 cd        	beqz	a0, 0x20041d3c <.LBB1_65>
; 		ee_printf("[%d]crcfinal      : 0x%04x\n",i,results[i].crc);
20041d22: 03 55 81 0b  	clhu	a0, 184(csp)
20041d26: 2a c2        	csw	a0, 4(csp)
20041d28: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041d2c: 2e c0        	csw	a1, 0(csp)
20041d2e: db 05 a4 fe  	cmove	ca1, cs0
20041d32: ef f0 ef 86  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
20041d36: 01 45        	mv	a0, zero
20041d38: 85 45        	addi	a1, zero, 1
20041d3a: d5 b7        	j	0x20041d1e <.LBB1_63>

20041d3c <.LBB1_65>:
; 	if (total_errors==0) {
20041d3c: 63 41 90 04  	bgtz	s1, 0x20041d7e <.LBB1_70>

20041d40 <.LBB1_106>:
20041d40: 97 25 00 00  	auipcc	ca1, 2
20041d44: db 95 85 1e  	cincoffset	ca1, ca1, 488
20041d48: db a5 35 06  	csetbounds	ca1, ca1, 99
; 	if (total_errors==0) {
20041d4c: a1 c0        	beqz	s1, 0x20041d8c <.LBB1_71>
20041d4e: a9 a0        	j	0x20041d98 <.LBB1_72>

20041d50 <.LBB1_67>:
20041d50: 81 45        	mv	a1, zero
20041d52: 05 45        	addi	a0, zero, 1

20041d54 <.LBB1_107>:
20041d54: 17 24 00 00  	auipcc	cs0, 2
20041d58: 5b 14 c4 4e  	cincoffset	cs0, cs0, 1260
20041d5c: 5b 24 c4 01  	csetbounds	cs0, cs0, 28

20041d60 <.LBB1_68>:
; 		for (i=0 ; i<default_num_contexts; i++) 
20041d60: 05 89        	andi	a0, a0, 1
20041d62: 4d d5        	beqz	a0, 0x20041d0c <.LBB1_62>
; 			ee_printf("[%d]crcstate      : 0x%04x\n",i,results[i].crcstate);
20041d64: 03 55 e1 0b  	clhu	a0, 190(csp)
20041d68: 2a c2        	csw	a0, 4(csp)
20041d6a: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041d6e: 2e c0        	csw	a1, 0(csp)
20041d70: db 05 a4 fe  	cmove	ca1, cs0
20041d74: ef f0 cf 82  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
20041d78: 01 45        	mv	a0, zero
20041d7a: 85 45        	addi	a1, zero, 1
20041d7c: d5 b7        	j	0x20041d60 <.LBB1_68>

20041d7e <.LBB1_70>:
20041d7e: 97 25 00 00  	auipcc	ca1, 2
20041d82: db 95 25 2e  	cincoffset	ca1, ca1, 738
20041d86: db a5 15 01  	csetbounds	ca1, ca1, 17
; 	if (total_errors==0) {
20041d8a: 99 e4        	bnez	s1, 0x20041d98 <.LBB1_72>

20041d8c <.LBB1_71>:
20041d8c: 97 25 00 00  	auipcc	ca1, 2
20041d90: db 95 45 35  	cincoffset	ca1, ca1, 852
20041d94: db a5 95 04  	csetbounds	ca1, ca1, 73

20041d98 <.LBB1_72>:
20041d98: 5b 15 10 00  	cincoffset	ca0, cnull, 1
20041d9c: ef f0 4f 80  	cjal	0x20040da0 <cfprintf(unsigned int**, char const*, ...)>
; 	portable_fini(&(results[0].port));
20041da0: 02 75        	clc	ca0, 32(csp)
20041da2: ef 00 50 69  	cjal	0x20042c36 <portable_fini(CORE_PORTABLE_S*)>
; 	return MAIN_RETURN_VAL;	
20041da6: 01 45        	mv	a0, zero
20041da8: ee 64        	clc	cs1, 216(csp)
20041daa: 0e 74        	clc	cs0, 224(csp)
20041dac: ae 70        	clc	cra, 232(csp)
20041dae: 6d 61        	cincoffset	csp, csp, 240
20041db0: 82 80        	cret

20041db2 <.LBB1_73>:
20041db2: 41 65        	lui	a0, 16
20041db4: 93 04 f5 ff  	addi	s1, a0, -1
20041db8: e9 b3        	j	0x20041b82 <.LBB1_49>
20041dba: 00 00        	unimp	

20041dbc <calc_func(short*, RESULTS_S*)>:
; ee_s16 calc_func(ee_s16 *pdata, core_results *res) {
20041dbc: 79 71        	cincoffset	csp, csp, -48
; 	ee_s16 data=*pdata;
20041dbe: 06 f4        	csc	cra, 40(csp)
20041dc0: 22 f0        	csc	cs0, 32(csp)
20041dc2: 26 ec        	csc	cs1, 24(csp)
20041dc4: 03 54 05 00  	clhu	s0, 0(ca0)
; 	if (optype) /* if cached, use cache */
20041dc8: 13 76 04 08  	andi	a2, s0, 128
20041dcc: 29 ea        	bnez	a2, 0x20041e1e <.LBB0_7>
20041dce: db 84 a5 fe  	cmove	cs1, ca1
20041dd2: 2a e8        	csc	ca0, 16(csp)
; 		ee_s16 dtype=((data>>3) & 0xf); /* bits 3-6 is specific data for the operation */
20041dd4: 13 55 34 00  	srli	a0, s0, 3
20041dd8: 93 75 f5 00  	andi	a1, a0, 15
; 		dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
20041ddc: 13 96 45 00  	slli	a2, a1, 4
; 		ee_s16 flag=data & 0x7; /* bits 0-2 is type of function to perform */
20041de0: 93 77 74 00  	andi	a5, s0, 7
20041de4: 85 46        	addi	a3, zero, 1
; 		dtype |= dtype << 4; /* replicate the lower 4 bits to get an 8b value */
20041de6: 33 67 b6 00  	or	a4, a2, a1
; 		switch (flag) {
20041dea: 63 8d d7 02  	beq	a5, a3, 0x20041e24 <.LBB0_8>
20041dee: 22 85        	mv	a0, s0
; 		switch (flag) {
20041df0: a9 e7        	bnez	a5, 0x20041e3a <.LBB0_10>
20041df2: 13 05 20 02  	addi	a0, zero, 34
; 				if (dtype<0x22) /* set min period for bit corruption */
20041df6: 63 64 e5 00  	bltu	a0, a4, 0x20041dfe <.LBB0_5>
20041dfa: 13 07 20 02  	addi	a4, zero, 34

20041dfe <.LBB0_5>:
; 				retval=core_bench_state(res->size,(ee_u8*)res->memblock[3],res->seed1,res->seed2,dtype,res->crc);
20041dfe: 88 54        	clw	a0, 40(cs1)
20041e00: 8c 70        	clc	ca1, 32(cs1)
20041e02: 03 96 04 00  	clh	a2, 0(cs1)
20041e06: 83 96 24 00  	clh	a3, 2(cs1)
20041e0a: 83 d7 04 06  	clhu	a5, 96(cs1)
20041e0e: ef 00 70 14  	cjal	0x20042754 <core_bench_state(unsigned int, unsigned char*, short, short, short, unsigned short)>
; 				if (res->crcstate==0)
20041e12: 83 d5 64 06  	clhu	a1, 102(cs1)
20041e16: 95 e1        	bnez	a1, 0x20041e3a <.LBB0_10>
; 					res->crcstate=retval;
20041e18: 23 93 a4 06  	csh	a0, 102(cs1)
20041e1c: 39 a8        	j	0x20041e3a <.LBB0_10>

20041e1e <.LBB0_7>:
; 		return (data & 0x007f);
20041e1e: 13 75 f4 07  	andi	a0, s0, 127
20041e22: 35 a8        	j	0x20041e5e <.LBB0_11>

20041e24 <.LBB0_8>:
; 				retval=core_bench_matrix(&(res->mat),dtype,res->crc);
20041e24: 03 d6 04 06  	clhu	a2, 96(cs1)
20041e28: 5b 95 04 04  	cincoffset	ca0, cs1, 64
20041e2c: ba 85        	mv	a1, a4
20041e2e: 0d 23        	cjal	0x20042350 <core_bench_matrix(MAT_PARAMS_S*, short, unsigned short)>
; 				if (res->crcmatrix==0)
20041e30: 83 d5 44 06  	clhu	a1, 100(cs1)
20041e34: 99 e1        	bnez	a1, 0x20041e3a <.LBB0_10>
; 					res->crcmatrix=retval;
20041e36: 23 92 a4 06  	csh	a0, 100(cs1)

20041e3a <.LBB0_10>:
; 		res->crc=crcu16(retval,res->crc);
20041e3a: 2a c6        	csw	a0, 12(csp)
20041e3c: 83 d5 04 06  	clhu	a1, 96(cs1)
20041e40: ef 00 30 53  	cjal	0x20042b72 <crcu16(unsigned short, unsigned short)>
20041e44: 23 90 a4 06  	csh	a0, 96(cs1)
; 		retval &= 0x007f; 
20041e48: 32 45        	clw	a0, 12(csp)
20041e4a: 13 75 f5 07  	andi	a0, a0, 127
; 		*pdata = (data & 0xff00) | 0x0080 | retval; /* cache the result */
20041e4e: 93 75 04 f0  	andi	a1, s0, -256
20041e52: c9 8d        	or	a1, a1, a0
20041e54: 93 e5 05 08  	ori	a1, a1, 128
20041e58: 42 66        	clc	ca2, 16(csp)
20041e5a: 23 10 b6 00  	csh	a1, 0(ca2)

20041e5e <.LBB0_11>:
; }
20041e5e: e2 64        	clc	cs1, 24(csp)
20041e60: 02 74        	clc	cs0, 32(csp)
20041e62: a2 70        	clc	cra, 40(csp)
20041e64: 45 61        	cincoffset	csp, csp, 48
20041e66: 82 80        	cret

20041e68 <cmp_complex(list_data_s*, list_data_s*, RESULTS_S*)>:
; ee_s32 cmp_complex(list_data *a, list_data *b, core_results *res) {
20041e68: 3d 71        	cincoffset	csp, csp, -32
20041e6a: 06 ec        	csc	cra, 24(csp)
20041e6c: 22 e8        	csc	cs0, 16(csp)
20041e6e: 26 e4        	csc	cs1, 8(csp)
20041e70: 5b 04 a6 fe  	cmove	cs0, ca2
20041e74: db 84 a5 fe  	cmove	cs1, ca1
; 	ee_s16 val1=calc_func(&(a->data16),res);
20041e78: db 05 a6 fe  	cmove	ca1, ca2
20041e7c: 81 37        	cjal	0x20041dbc <calc_func(short*, RESULTS_S*)>
20041e7e: 2a c2        	csw	a0, 4(csp)
; 	ee_s16 val2=calc_func(&(b->data16),res);
20041e80: 5b 85 a4 fe  	cmove	ca0, cs1
20041e84: db 05 a4 fe  	cmove	ca1, cs0
20041e88: 15 3f        	cjal	0x20041dbc <calc_func(short*, RESULTS_S*)>
20041e8a: c1 65        	lui	a1, 16
20041e8c: fd 15        	addi	a1, a1, -1
20041e8e: 12 46        	clw	a2, 4(csp)
20041e90: 6d 8e        	and	a2, a2, a1
20041e92: 6d 8d        	and	a0, a0, a1
; 	return val1 - val2;
20041e94: 33 05 a6 40  	sub	a0, a2, a0
20041e98: a2 64        	clc	cs1, 8(csp)
20041e9a: 42 64        	clc	cs0, 16(csp)
20041e9c: e2 60        	clc	cra, 24(csp)
20041e9e: 05 61        	cincoffset	csp, csp, 32
20041ea0: 82 80        	cret

20041ea2 <cmp_idx(list_data_s*, list_data_s*, RESULTS_S*)>:
; 	if (res==NULL) {
20041ea2: 09 ea        	bnez	a2, 0x20041eb4 <.LBB2_2>
; 		a->data16 = (a->data16 & 0xff00) | (0x00ff & (a->data16>>8));
20041ea4: 03 06 15 00  	clb	a2, 1(ca0)
20041ea8: 23 00 c5 00  	csb	a2, 0(ca0)
; 		b->data16 = (b->data16 & 0xff00) | (0x00ff & (b->data16>>8));
20041eac: 03 86 15 00  	clb	a2, 1(ca1)
20041eb0: 23 80 c5 00  	csb	a2, 0(ca1)

20041eb4 <.LBB2_2>:
; 	return a->idx - b->idx;
20041eb4: 03 15 25 00  	clh	a0, 2(ca0)
20041eb8: 83 95 25 00  	clh	a1, 2(ca1)
20041ebc: 0d 8d        	sub	a0, a0, a1
20041ebe: 82 80        	cret

20041ec0 <copy_info(list_data_s*, list_data_s*)>:
; 	to->data16=from->data16;
20041ec0: 03 96 05 00  	clh	a2, 0(ca1)
20041ec4: 23 10 c5 00  	csh	a2, 0(ca0)
; 	to->idx=from->idx;
20041ec8: 83 95 25 00  	clh	a1, 2(ca1)
20041ecc: 23 11 b5 00  	csh	a1, 2(ca0)
; }
20041ed0: 82 80        	cret

20041ed2 <core_bench_list(RESULTS_S*, short)>:
; ee_u16 core_bench_list(core_results *res, ee_s16 finder_idx) {
20041ed2: 1d 71        	cincoffset	csp, csp, -96
20041ed4: 86 ec        	csc	cra, 88(csp)
20041ed6: a2 e8        	csc	cs0, 80(csp)
20041ed8: a6 e4        	csc	cs1, 72(csp)
20041eda: 02 ca        	csw	zero, 20(csp)
20041edc: 02 d2        	csw	zero, 36(csp)
20041ede: 02 dc        	csw	zero, 56(csp)
20041ee0: 01 46        	mv	a2, zero
; 	list_head *list=res->list;
20041ee2: 14 7d        	clc	ca3, 56(ca0)
20041ee4: 2a e4        	csc	ca0, 8(csp)
; 	ee_s16 find_num=res->seed3;
20041ee6: 03 15 45 00  	clh	a0, 4(ca0)
; 	info.idx=finder_idx;
20041eea: 2a d0        	csw	a0, 32(csp)
20041eec: 23 11 b1 04  	csh	a1, 66(csp)
20041ef0: 88 00        	cincoffset	ca0, csp, 64
20041ef2: 5b 25 45 00  	csetbounds	ca0, ca0, 4
20041ef6: 2a ec        	csc	ca0, 24(csp)
20041ef8: 2e c8        	csw	a1, 16(csp)
20041efa: 2e 87        	mv	a4, a1

20041efc <.LBB4_1>:
; 	for (i=0; i<find_num; i++) {
20041efc: 13 15 06 01  	slli	a0, a2, 16
20041f00: 41 85        	srai	a0, a0, 16
20041f02: 82 55        	clw	a1, 32(csp)
20041f04: 63 51 b5 08  	bge	a0, a1, 0x20041f86 <.LBB4_10>
20041f08: 3a d8        	csw	a4, 48(csp)
20041f0a: 32 d4        	csw	a2, 40(csp)
; 		info.data16= (i & 0xff) ;
20041f0c: 13 75 f6 0f  	andi	a0, a2, 255
20041f10: 23 10 a1 04  	csh	a0, 64(csp)
; 		this_find=core_list_find(list,&info);
20041f14: 5b 85 a6 fe  	cmove	ca0, ca3
20041f18: e2 65        	clc	ca1, 24(csp)
20041f1a: db 84 a6 fe  	cmove	cs1, ca3
20041f1e: 1d 22        	cjal	0x20042044 <core_list_find(list_head_s*, list_data_s*)>
20041f20: 5b 04 a5 fe  	cmove	cs0, ca0
; 		list=core_list_reverse(list);
20041f24: 5b 85 a4 fe  	cmove	ca0, cs1
20041f28: 91 2a        	cjal	0x2004207c <core_list_reverse(list_head_s*)>
20041f2a: db 06 a5 fe  	cmove	ca3, ca0
; 		if (this_find==NULL) {
20041f2e: 0d c4        	beqz	s0, 0x20041f58 <.LBB4_6>
; 			if (this_find->info->data16 & 0x1) /* use found value */
20041f30: 08 64        	clc	ca0, 8(cs0)
20041f32: 03 15 05 00  	clh	a0, 0(ca0)
; 			if (this_find->next != NULL) {
20041f36: 0c 60        	clc	ca1, 0(cs0)
; 			if (this_find->info->data16 & 0x1) /* use found value */
20041f38: 13 56 95 00  	srli	a2, a0, 9
20041f3c: 71 8d        	and	a0, a0, a2
; 			found++;
20041f3e: 12 56        	clw	a2, 36(csp)
20041f40: 05 06        	addi	a2, a2, 1
; 			if (this_find->info->data16 & 0x1) /* use found value */
20041f42: 32 d2        	csw	a2, 36(csp)
20041f44: 05 89        	andi	a0, a0, 1
20041f46: 42 57        	clw	a4, 48(csp)
; 			if (this_find->next != NULL) {
20041f48: 91 c5        	beqz	a1, 0x20041f54 <.LBB4_5>
; 				this_find->next = finder->next;
20041f4a: 90 61        	clc	ca2, 0(ca1)
20041f4c: 10 e0        	csc	ca2, 0(cs0)
; 				finder->next=list->next;
20041f4e: 90 62        	clc	ca2, 0(ca3)
20041f50: 90 e1        	csc	ca2, 0(ca1)
; 				list->next=finder;
20041f52: 8c e2        	csc	ca1, 0(ca3)

20041f54 <.LBB4_5>:
20041f54: 22 56        	clw	a2, 40(csp)
20041f56: 19 a8        	j	0x20041f6c <.LBB4_7>

20041f58 <.LBB4_6>:
; 			retval+=(list->next->info->data16 >> 8) & 1;
20041f58: 88 62        	clc	ca0, 0(ca3)
20041f5a: 08 65        	clc	ca0, 8(ca0)
20041f5c: 03 45 15 00  	clbu	a0, 1(ca0)
; 			missed++;
20041f60: d2 45        	clw	a1, 20(csp)
20041f62: 85 05        	addi	a1, a1, 1
; 			retval+=(list->next->info->data16 >> 8) & 1;
20041f64: 2e ca        	csw	a1, 20(csp)
20041f66: 05 89        	andi	a0, a0, 1
20041f68: 22 56        	clw	a2, 40(csp)
20041f6a: 42 57        	clw	a4, 48(csp)

20041f6c <.LBB4_7>:
; 		if (info.idx>=0)
20041f6c: 93 15 07 01  	slli	a1, a4, 16
20041f70: c1 85        	srai	a1, a1, 16
20041f72: 63 c5 05 00  	bltz	a1, 0x20041f7c <.LBB4_9>
; 			info.idx++;
20041f76: 05 07        	addi	a4, a4, 1
20041f78: 23 11 e1 04  	csh	a4, 66(csp)

20041f7c <.LBB4_9>:
20041f7c: e2 55        	clw	a1, 56(csp)
20041f7e: aa 95        	add	a1, a1, a0
; 	for (i=0; i<find_num; i++) {
20041f80: 2e dc        	csw	a1, 56(csp)
20041f82: 05 06        	addi	a2, a2, 1
20041f84: a5 bf        	j	0x20041efc <.LBB4_1>

20041f86 <.LBB4_10>:
; 	retval+=found*4-missed;
20041f86: 12 55        	clw	a0, 36(csp)
20041f88: 13 14 25 00  	slli	s0, a0, 2
; 	if (finder_idx>0)
20041f8c: 42 45        	clw	a0, 16(csp)
20041f8e: 63 5c a0 00  	blez	a0, 0x20041fa6 <.LBB4_12>

20041f92 <.LBB4_21>:
; 		list=core_list_mergesort(list,cmp_complex,res);
20041f92: 97 05 00 00  	auipcc	ca1, 0
20041f96: db 95 65 ed  	cincoffset	ca1, ca1, -298
20041f9a: 5b 85 a6 fe  	cmove	ca0, ca3
20041f9e: 22 66        	clc	ca2, 8(csp)
20041fa0: dd 28        	cjal	0x20042096 <core_list_mergesort(list_head_s*, int (*)(list_data_s*, list_data_s*, RESULTS_S*), RESULTS_S*)>
20041fa2: db 06 a5 fe  	cmove	ca3, ca0

20041fa6 <.LBB4_12>:
; 	remover=core_list_remove(list->next);
20041fa6: 88 62        	clc	ca0, 0(ca3)
20041fa8: d2 45        	clw	a1, 20(csp)
20041faa: b3 04 b4 40  	sub	s1, s0, a1
20041fae: 5b 84 a6 fe  	cmove	cs0, ca3
; 	remover=core_list_remove(list->next);
20041fb2: dd 22        	cjal	0x20042198 <core_list_remove(list_head_s*)>
20041fb4: 2a f4        	csc	ca0, 40(csp)
20041fb6: 88 00        	cincoffset	ca0, csp, 64
20041fb8: db 25 45 00  	csetbounds	ca1, ca0, 4
20041fbc: 22 f8        	csc	cs0, 48(csp)
; 	finder=core_list_find(list,&info);
20041fbe: 5b 05 a4 fe  	cmove	ca0, cs0
20041fc2: 49 20        	cjal	0x20042044 <core_list_find(list_head_s*, list_data_s*)>
20041fc4: 5b 04 a5 fe  	cmove	cs0, ca0
; 	if (!finder)
20041fc8: 19 e0        	bnez	s0, 0x20041fce <.LBB4_14>
; 		finder=list->next;
20041fca: 42 75        	clc	ca0, 48(csp)
20041fcc: 00 61        	clc	cs0, 0(ca0)

20041fce <.LBB4_14>:
20041fce: 62 55        	clw	a0, 56(csp)
20041fd0: aa 94        	add	s1, s1, a0
20041fd2: 41 65        	lui	a0, 16
20041fd4: 7d 15        	addi	a0, a0, -1
20041fd6: 2a dc        	csw	a0, 56(csp)

20041fd8 <.LBB4_15>:
20041fd8: 42 75        	clc	ca0, 48(csp)
; 	while (finder) {
20041fda: 19 c8        	beqz	s0, 0x20041ff0 <.LBB4_17>
; 		retval=crc16(list->info->data16,retval);
20041fdc: 08 65        	clc	ca0, 8(ca0)
20041fde: 03 15 05 00  	clh	a0, 0(ca0)
20041fe2: e2 55        	clw	a1, 56(csp)
20041fe4: e5 8d        	and	a1, a1, s1
20041fe6: ef 00 f0 3c  	cjal	0x20042bb4 <crc16(short, unsigned short)>
; 		finder=finder->next;
20041fea: 00 60        	clc	cs0, 0(cs0)
; 		retval=crc16(list->info->data16,retval);
20041fec: aa 84        	mv	s1, a0
20041fee: ed b7        	j	0x20041fd8 <.LBB4_15>

20041ff0 <.LBB4_17>:
; 	remover=core_list_undo_remove(remover,list->next);
20041ff0: 14 61        	clc	ca3, 0(ca0)
; 	item_removed->info=item_modified->info;
20041ff2: 8c 66        	clc	ca1, 8(ca3)
20041ff4: 22 77        	clc	ca4, 40(csp)
; 	tmp=item_removed->info;
20041ff6: 10 67        	clc	ca2, 8(ca4)
; 	item_removed->info=item_modified->info;
20041ff8: 0c e7        	csc	ca1, 8(ca4)
; 	item_removed->next=item_modified->next;
20041ffa: 8c 62        	clc	ca1, 0(ca3)
; 	item_modified->info=tmp;
20041ffc: 90 e6        	csc	ca2, 8(ca3)
; 	item_removed->next=item_modified->next;
20041ffe: 0c e3        	csc	ca1, 0(ca4)
; 	item_modified->next=item_removed;
20042000: 98 e2        	csc	ca4, 0(ca3)

20042002 <.LBB4_22>:
; 	list=core_list_mergesort(list,cmp_idx,(core_results*)NULL);
20042002: 97 05 00 00  	auipcc	ca1, 0
20042006: db 95 05 ea  	cincoffset	ca1, ca1, -352
2004200a: 5b 06 a0 fe  	cmove	ca2, cnull
2004200e: 61 20        	cjal	0x20042096 <core_list_mergesort(list_head_s*, int (*)(list_data_s*, list_data_s*, RESULTS_S*), RESULTS_S*)>
20042010: 5b 04 a5 fe  	cmove	cs0, ca0
20042014: 41 65        	lui	a0, 16
20042016: 7d 15        	addi	a0, a0, -1
20042018: 2a d8        	csw	a0, 48(csp)
2004201a: 22 fc        	csc	cs0, 56(csp)

2004201c <.LBB4_18>:
2004201c: 00 60        	clc	cs0, 0(cs0)
; 	while (finder) {
2004201e: 19 c8        	beqz	s0, 0x20042034 <.LBB4_20>
; 		retval=crc16(list->info->data16,retval);
20042020: 62 75        	clc	ca0, 56(csp)
20042022: 08 65        	clc	ca0, 8(ca0)
20042024: 03 15 05 00  	clh	a0, 0(ca0)
20042028: c2 55        	clw	a1, 48(csp)
2004202a: e5 8d        	and	a1, a1, s1
2004202c: ef 00 90 38  	cjal	0x20042bb4 <crc16(short, unsigned short)>
20042030: aa 84        	mv	s1, a0
20042032: ed b7        	j	0x2004201c <.LBB4_18>

20042034 <.LBB4_20>:
20042034: 41 65        	lui	a0, 16
20042036: 7d 15        	addi	a0, a0, -1
; 	return retval;
20042038: 65 8d        	and	a0, a0, s1
2004203a: a6 64        	clc	cs1, 72(csp)
2004203c: 46 64        	clc	cs0, 80(csp)
2004203e: e6 60        	clc	cra, 88(csp)
20042040: 25 61        	cincoffset	csp, csp, 96
20042042: 82 80        	cret

20042044 <core_list_find(list_head_s*, list_data_s*)>:
; 	if (info->idx>=0) {
20042044: 03 96 25 00  	clh	a2, 2(ca1)
20042048: 63 46 06 02  	bltz	a2, 0x20042074 <.LBB5_6>
2004204c: c1 65        	lui	a1, 16
2004204e: fd 15        	addi	a1, a1, -1
20042050: f1 8d        	and	a1, a1, a2
; 		while (list && (list->info->idx != info->idx))
20042052: 15 c1        	beqz	a0, 0x20042076 <.LBB5_7>

20042054 <.LBB5_2>:
20042054: 10 65        	clc	ca2, 8(ca0)
20042056: 03 56 26 00  	clhu	a2, 2(ca2)
2004205a: 63 00 b6 02  	beq	a2, a1, 0x2004207a <.LBB5_8>
; 			list=list->next;
2004205e: 08 61        	clc	ca0, 0(ca0)
; 		while (list && (list->info->idx != info->idx))
20042060: 75 f9        	bnez	a0, 0x20042054 <.LBB5_2>
20042062: 11 a8        	j	0x20042076 <.LBB5_7>

20042064 <.LBB5_4>:
; 		while (list && ((list->info->data16 & 0xff) != info->data16))
20042064: 10 65        	clc	ca2, 8(ca0)
20042066: 03 46 06 00  	clbu	a2, 0(ca2)
2004206a: 83 96 05 00  	clh	a3, 0(ca1)
2004206e: 63 06 d6 00  	beq	a2, a3, 0x2004207a <.LBB5_8>
; 			list=list->next;
20042072: 08 61        	clc	ca0, 0(ca0)

20042074 <.LBB5_6>:
; 		while (list && ((list->info->data16 & 0xff) != info->data16))
20042074: 65 f9        	bnez	a0, 0x20042064 <.LBB5_4>

20042076 <.LBB5_7>:
20042076: 5b 05 a0 fe  	cmove	ca0, cnull

2004207a <.LBB5_8>:
; }
2004207a: 82 80        	cret

2004207c <core_list_reverse(list_head_s*)>:
; list_head *core_list_reverse(list_head *list) {
2004207c: db 05 a0 fe  	cmove	ca1, cnull
; 	while (list) {
20042080: 01 c9        	beqz	a0, 0x20042090 <.LBB6_2>

20042082 <.LBB6_1>:
; 		tmp=list->next;
20042082: 10 61        	clc	ca2, 0(ca0)
; 		list->next=next;
20042084: 0c e1        	csc	ca1, 0(ca0)
20042086: db 05 a5 fe  	cmove	ca1, ca0
2004208a: 5b 05 a6 fe  	cmove	ca0, ca2
; 	while (list) {
2004208e: 75 f9        	bnez	a0, 0x20042082 <.LBB6_1>

20042090 <.LBB6_2>:
; 	return next;
20042090: 5b 85 a5 fe  	cmove	ca0, ca1
20042094: 82 80        	cret

20042096 <core_list_mergesort(list_head_s*, int (*)(list_data_s*, list_data_s*, RESULTS_S*), RESULTS_S*)>:
; list_head *core_list_mergesort(list_head *list, list_cmp cmp, core_results *res) {
20042096: 5d 71        	cincoffset	csp, csp, -80
20042098: 86 e4        	csc	cra, 72(csp)
2004209a: a2 e0        	csc	cs0, 64(csp)
2004209c: 26 fc        	csc	cs1, 56(csp)
2004209e: 32 f0        	csc	ca2, 32(csp)
200420a0: 2e ec        	csc	ca1, 24(csp)
200420a2: 05 44        	addi	s0, zero, 1

200420a4 <.LBB7_1>:
200420a4: a2 86        	mv	a3, s0
;         while (p) {
200420a6: 63 43 80 00  	bgtz	s0, 0x200420ac <.LBB7_3>
200420aa: 81 46        	mv	a3, zero

200420ac <.LBB7_3>:
200420ac: 5b 07 a0 fe  	cmove	ca4, cnull
200420b0: db 05 a0 fe  	cmove	ca1, cnull
200420b4: 81 44        	mv	s1, zero
200420b6: 36 c2        	csw	a3, 4(csp)
200420b8: 22 c4        	csw	s0, 8(csp)
;         while (p) {
200420ba: 61 c1        	beqz	a0, 0x2004217a <.LBB7_23>

200420bc <.LBB7_4>:
200420bc: 81 47        	mv	a5, zero
;             nmerges++;  /* there exists a merge to be done */
200420be: 85 04        	addi	s1, s1, 1
200420c0: 5b 06 a5 fe  	cmove	ca2, ca0
200420c4: 3a e8        	csc	ca4, 16(csp)
200420c6: 26 c6        	csw	s1, 12(csp)

200420c8 <.LBB7_5>:
;             for (i = 0; i < insize; i++) {
200420c8: 63 88 f6 00  	beq	a3, a5, 0x200420d8 <.LBB7_8>
; 			    q = q->next;
200420cc: 10 62        	clc	ca2, 0(ca2)
;                 psize++;
200420ce: 85 07        	addi	a5, a5, 1
;                 if (!q) break;
200420d0: 65 fe        	bnez	a2, 0x200420c8 <.LBB7_5>
200420d2: 5b 06 a0 fe  	cmove	ca2, cnull
200420d6: 11 a0        	j	0x200420da <.LBB7_9>

200420d8 <.LBB7_8>:
200420d8: b6 87        	mv	a5, a3

200420da <.LBB7_9>:
200420da: a2 86        	mv	a3, s0

200420dc <.LBB7_10>:
200420dc: 5b 04 a5 fe  	cmove	cs0, ca0
200420e0: db 04 a6 fe  	cmove	cs1, ca2
200420e4: 5b 87 a5 fe  	cmove	ca4, ca1
;             while (psize > 0 || (qsize > 0 && q)) {
200420e8: 63 49 f0 00  	bgtz	a5, 0x200420fa <.LBB7_13>
200420ec: 33 25 d0 00  	sgtz	a0, a3
200420f0: b3 35 90 00  	snez	a1, s1
200420f4: 6d 8d        	and	a0, a0, a1
200420f6: 2d c9        	beqz	a0, 0x20042168 <.LBB7_22>
; 				if (psize == 0) {
200420f8: b1 cf        	beqz	a5, 0x20042154 <.LBB7_20>

200420fa <.LBB7_13>:
; 				} else if (qsize == 0 || !q) {
200420fa: 33 35 d0 00  	snez	a0, a3
200420fe: b3 35 90 00  	snez	a1, s1
20042102: 6d 8d        	and	a0, a0, a1
20042104: 05 c5        	beqz	a0, 0x2004212c <.LBB7_16>
20042106: 3a f4        	csc	ca4, 40(csp)
20042108: 36 d8        	csw	a3, 48(csp)
2004210a: 3e da        	csw	a5, 52(csp)
; 				} else if (cmp(p->info,q->info,res) <= 0) {
2004210c: 08 64        	clc	ca0, 8(cs0)
2004210e: 8c 64        	clc	ca1, 8(cs1)
20042110: 02 76        	clc	ca2, 32(csp)
20042112: e2 66        	clc	ca3, 24(csp)
20042114: 82 96        	cjalr	ca3
20042116: 63 53 a0 02  	blez	a0, 0x2004213c <.LBB7_17>
; 				    e = q; q = q->next; qsize--;
2004211a: 90 60        	clc	ca2, 0(cs1)
2004211c: c2 56        	clw	a3, 48(csp)
; 				    e = q; q = q->next; qsize--;
2004211e: fd 16        	addi	a3, a3, -1
20042120: 5b 05 a4 fe  	cmove	ca0, cs0
20042124: db 85 a4 fe  	cmove	ca1, cs1
20042128: d2 57        	clw	a5, 52(csp)
2004212a: 0d a0        	j	0x2004214c <.LBB7_18>

2004212c <.LBB7_16>:
; 				    e = p; p = p->next; psize--;
2004212c: 08 60        	clc	ca0, 0(cs0)
2004212e: fd 17        	addi	a5, a5, -1
20042130: 5b 86 a4 fe  	cmove	ca2, cs1
20042134: db 05 a4 fe  	cmove	ca1, cs0
; 				if (tail) {
20042138: 01 ef        	bnez	a4, 0x20042150 <.LBB7_19>
2004213a: 2d a0        	j	0x20042164 <.LBB7_21>

2004213c <.LBB7_17>:
; 				    e = p; p = p->next; psize--;
2004213c: 08 60        	clc	ca0, 0(cs0)
2004213e: d2 57        	clw	a5, 52(csp)
; 				    e = p; p = p->next; psize--;
20042140: fd 17        	addi	a5, a5, -1
20042142: 5b 86 a4 fe  	cmove	ca2, cs1
20042146: db 05 a4 fe  	cmove	ca1, cs0
2004214a: c2 56        	clw	a3, 48(csp)

2004214c <.LBB7_18>:
2004214c: 22 77        	clc	ca4, 40(csp)
; 				if (tail) {
2004214e: 19 cb        	beqz	a4, 0x20042164 <.LBB7_21>

20042150 <.LBB7_19>:
; 				    tail->next = e;
20042150: 0c e3        	csc	ca1, 0(ca4)
20042152: 69 b7        	j	0x200420dc <.LBB7_10>

20042154 <.LBB7_20>:
; 				    e = q; q = q->next; qsize--;
20042154: 90 60        	clc	ca2, 0(cs1)
20042156: 81 47        	mv	a5, zero
; 				    e = q; q = q->next; qsize--;
20042158: fd 16        	addi	a3, a3, -1
2004215a: 5b 05 a4 fe  	cmove	ca0, cs0
2004215e: db 85 a4 fe  	cmove	ca1, cs1
; 				if (tail) {
20042162: 7d f7        	bnez	a4, 0x20042150 <.LBB7_19>

20042164 <.LBB7_21>:
20042164: 2e e8        	csc	ca1, 16(csp)
20042166: 9d bf        	j	0x200420dc <.LBB7_10>

20042168 <.LBB7_22>:
20042168: 5b 85 a4 fe  	cmove	ca0, cs1
2004216c: db 05 a7 fe  	cmove	ca1, ca4
20042170: 22 44        	clw	s0, 8(csp)
20042172: 42 67        	clc	ca4, 16(csp)
20042174: 92 46        	clw	a3, 4(csp)
20042176: b2 44        	clw	s1, 12(csp)
;         while (p) {
20042178: 31 f1        	bnez	a0, 0x200420bc <.LBB7_4>

2004217a <.LBB7_23>:
; 	    tail->next = NULL;
2004217a: 23 b0 05 00  	csc	cnull, 0(ca1)
;         insize *= 2;
2004217e: 06 04        	slli	s0, s0, 1
20042180: 5b 05 a7 fe  	cmove	ca0, ca4
;         if (nmerges <= 1)   /* allow for nmerges==0, the empty list case */
20042184: 85 45        	addi	a1, zero, 1
20042186: e3 ef 95 f0  	bltu	a1, s1, 0x200420a4 <.LBB7_1>
;             return list;
2004218a: 5b 05 a7 fe  	cmove	ca0, ca4
2004218e: e2 74        	clc	cs1, 56(csp)
20042190: 06 64        	clc	cs0, 64(csp)
20042192: a6 60        	clc	cra, 72(csp)
20042194: 61 61        	cincoffset	csp, csp, 80
20042196: 82 80        	cret

20042198 <core_list_remove(list_head_s*)>:
; 	list_head *ret=item->next;
20042198: 0c 61        	clc	ca1, 0(ca0)
; 	item->info=ret->info;
2004219a: 90 65        	clc	ca2, 8(ca1)
; 	tmp=item->info;
2004219c: 14 65        	clc	ca3, 8(ca0)
; 	item->info=ret->info;
2004219e: 10 e5        	csc	ca2, 8(ca0)
; 	item->next=item->next->next;
200421a0: 90 61        	clc	ca2, 0(ca1)
; 	ret->info=tmp;
200421a2: 94 e5        	csc	ca3, 8(ca1)
; 	item->next=item->next->next;
200421a4: 10 e1        	csc	ca2, 0(ca0)
; 	ret->next=NULL;
200421a6: 23 b0 05 00  	csc	cnull, 0(ca1)
; 	return ret;
200421aa: 5b 85 a5 fe  	cmove	ca0, ca1
200421ae: 82 80        	cret

200421b0 <core_list_undo_remove(list_head_s*, list_head_s*)>:
; 	item_removed->info=item_modified->info;
200421b0: 90 65        	clc	ca2, 8(ca1)
; 	tmp=item_removed->info;
200421b2: 14 65        	clc	ca3, 8(ca0)
; 	item_removed->info=item_modified->info;
200421b4: 10 e5        	csc	ca2, 8(ca0)
; 	item_removed->next=item_modified->next;
200421b6: 90 61        	clc	ca2, 0(ca1)
; 	item_modified->info=tmp;
200421b8: 94 e5        	csc	ca3, 8(ca1)
; 	item_removed->next=item_modified->next;
200421ba: 10 e1        	csc	ca2, 0(ca0)
; 	item_modified->next=item_removed;
200421bc: 88 e1        	csc	ca0, 0(ca1)
; 	return item_removed;
200421be: 82 80        	cret

200421c0 <core_list_init(unsigned int, list_head_s*, short)>:
; list_head *core_list_init(ee_u32 blksize, list_head *memblock, ee_s16 seed) {
200421c0: 39 71        	cincoffset	csp, csp, -64
200421c2: 06 fc        	csc	cra, 56(csp)
200421c4: 22 f8        	csc	cs0, 48(csp)
200421c6: 26 f4        	csc	cs1, 40(csp)
200421c8: 32 ce        	csw	a2, 28(csp)
200421ca: 51 46        	addi	a2, zero, 20
; 	ee_u32 size=(blksize/per_item)-2; /* to accomodate systems with 64b pointers, and make sure same code is executed, set max list elements */
200421cc: 33 56 c5 02  	divu	a2, a0, a2
200421d0: 13 07 e6 ff  	addi	a4, a2, -2
; 	list_head *memblock_end=memblock+size;
200421d4: 13 16 47 00  	slli	a2, a4, 4
200421d8: 5b 83 c5 22  	cincoffset	ct1, ca1, a2
; 	list_data *datablock_end=datablock+size;
200421dc: 93 16 27 00  	slli	a3, a4, 2
200421e0: db 04 d3 22  	cincoffset	cs1, ct1, a3
; 	list->next=nullptr;
200421e4: 23 b0 05 00  	csc	cnull, 0(ca1)
; 	list->info=datablock;
200421e8: 23 b4 65 00  	csc	ct1, 8(ca1)
; 	list->info->idx=0x0000;
200421ec: 23 11 03 00  	csh	zero, 2(ct1)
200421f0: a1 67        	lui	a5, 8
200421f2: 93 86 07 08  	addi	a3, a5, 128
; 	list->info->data16=(ee_s16)0x8080;
200421f6: 23 10 d3 00  	csh	a3, 0(ct1)
; 	memblock++;
200421fa: db 96 05 01  	cincoffset	ca3, ca1, 16
200421fe: 13 04 30 06  	addi	s0, zero, 99
; 	if ((*memblock+1) >= memblock_end)
20042202: 33 35 a4 00  	sltu	a0, s0, a0
20042206: 13 66 86 00  	ori	a2, a2, 8
2004220a: 5b 86 c5 22  	cincoffset	ca2, ca1, a2
2004220e: 26 f0        	csc	cs1, 32(csp)
20042210: 33 34 96 00  	sltu	s0, a2, s1
; 	if ((*memblock+1) >= memblock_end)
20042214: 61 8d        	and	a0, a0, s0
; 	datablock++;
20042216: 5b 14 43 00  	cincoffset	cs0, ct1, 4
; 	if ((*memblock+1) >= memblock_end)
2004221a: 05 c5        	beqz	a0, 0x20042242 <.LBB10_2>
; 	insert_point->next=newitem;
2004221c: 94 e1        	csc	ca3, 0(ca1)
2004221e: 5b 85 a6 fe  	cmove	ca0, ca3
; 	if ((*memblock+1) >= memblock_end)
20042222: db 96 05 02  	cincoffset	ca3, ca1, 32
; 	newitem->next=insert_point->next;
20042226: 23 b8 05 00  	csc	cnull, 16(ca1)
; 	newitem->info=*datablock;
2004222a: 80 ed        	csc	cs0, 24(ca1)
2004222c: 41 64        	lui	s0, 16
2004222e: 7d 14        	addi	s0, s0, -1
; 	to->data16=from->data16;
20042230: 23 12 83 00  	csh	s0, 4(ct1)
20042234: 13 84 f7 ff  	addi	s0, a5, -1
; 	to->idx=from->idx;
20042238: 23 13 83 00  	csh	s0, 6(ct1)
2004223c: 5b 04 a6 fe  	cmove	cs0, ca2
20042240: 19 a0        	j	0x20042246 <.LBB10_3>

20042242 <.LBB10_2>:
20042242: 5b 05 a0 fe  	cmove	ca0, cnull

20042246 <.LBB10_3>:
20042246: 81 43        	mv	t2, zero
20042248: 13 86 f7 ff  	addi	a2, a5, -1
2004224c: 32 c6        	csw	a2, 12(csp)
2004224e: 2e e8        	csc	ca1, 16(csp)
; 	for (i=0; i<size; i++) {
20042250: 63 0e 77 04  	beq	a4, t2, 0x200422ac <.LBB10_7>

20042254 <.LBB10_4>:
; 	if ((*memblock+1) >= memblock_end)
20042254: db 94 06 01  	cincoffset	cs1, ca3, 16
20042258: b3 b2 64 00  	sltu	t0, s1, t1
2004225c: db 17 44 00  	cincoffset	ca5, cs0, 4
20042260: 82 75        	clc	ca1, 32(csp)
20042262: b3 b0 b7 00  	sltu	ra, a5, a1
; 	if ((*memblock+1) >= memblock_end)
20042266: 33 f6 12 00  	and	a2, t0, ra
2004226a: 15 ce        	beqz	a2, 0x200422a6 <.LBB10_6>
; 		ee_u16 datpat=((ee_u16)(seed^i) & 0xf);
2004226c: f2 45        	clw	a1, 28(csp)
2004226e: 33 c6 b3 00  	xor	a2, t2, a1
; 		ee_u16 dat=(datpat<<3) | (i&0x7); /* alternate between algorithms */
20042272: 0e 06        	slli	a2, a2, 3
20042274: 13 76 86 07  	andi	a2, a2, 120
20042278: ba 85        	mv	a1, a4
; 		ee_u16 dat=(datpat<<3) | (i&0x7); /* alternate between algorithms */
2004227a: 13 f7 73 00  	andi	a4, t2, 7
2004227e: 59 8e        	or	a2, a2, a4
; 		info.data16=(dat<<8) | dat;		/* fill the data with actual data and upper bits with rebuild value */
20042280: 13 17 86 00  	slli	a4, a2, 8
20042284: 59 8e        	or	a2, a2, a4
20042286: 2e 87        	mv	a4, a1
; 	newitem->next=insert_point->next;
20042288: 88 e2        	csc	ca0, 0(ca3)
; 	insert_point->next=newitem;
2004228a: 42 65        	clc	ca0, 16(csp)
2004228c: 14 e1        	csc	ca3, 0(ca0)
; 	newitem->info=*datablock;
2004228e: 80 e6        	csc	cs0, 8(ca3)
; 	to->data16=from->data16;
20042290: 23 10 c4 00  	csh	a2, 0(cs0)
; 	to->idx=from->idx;
20042294: 32 45        	clw	a0, 12(csp)
20042296: 23 11 a4 00  	csh	a0, 2(cs0)
2004229a: 5b 85 a6 fe  	cmove	ca0, ca3
2004229e: 5b 84 a7 fe  	cmove	cs0, ca5
200422a2: db 86 a4 fe  	cmove	ca3, cs1

200422a6 <.LBB10_6>:
; 	for (i=0; i<size; i++) {
200422a6: 85 03        	addi	t2, t2, 1
200422a8: e3 16 77 fa  	bne	a4, t2, 0x20042254 <.LBB10_4>

200422ac <.LBB10_7>:
200422ac: 95 45        	addi	a1, zero, 5
200422ae: b3 55 b7 02  	divu	a1, a4, a1
200422b2: 89 46        	addi	a3, zero, 2
200422b4: 11 67        	lui	a4, 4
200422b6: 7d 17        	addi	a4, a4, -1

200422b8 <.LBB10_8>:
; 	while (finder->next!=NULL) {
200422b8: 10 61        	clc	ca2, 0(ca0)
200422ba: 1d c2        	beqz	a2, 0x200422e0 <.LBB10_13>
200422bc: 93 87 f6 ff  	addi	a5, a3, -1
200422c0: 63 ea b7 00  	bltu	a5, a1, 0x200422d4 <.LBB10_11>
; 			ee_u16 pat=(ee_u16)(i++ ^ seed); /* get a pseudo random number */
200422c4: 72 46        	clw	a2, 28(csp)
200422c6: 3d 8e        	xor	a2, a2, a5
; 			finder->info->idx=0x3fff & (((i & 0x07) << 8) | pat); /* make sure the mixed items end up after the ones in sequence */
200422c8: 79 8e        	and	a2, a2, a4
200422ca: 93 97 86 00  	slli	a5, a3, 8
200422ce: 93 f7 07 70  	andi	a5, a5, 1792
200422d2: d1 8f        	or	a5, a5, a2

200422d4 <.LBB10_11>:
200422d4: 10 65        	clc	ca2, 8(ca0)
200422d6: 23 11 f6 00  	csh	a5, 2(ca2)
200422da: 08 61        	clc	ca0, 0(ca0)
; 	while (finder->next!=NULL) {
200422dc: 85 06        	addi	a3, a3, 1
200422de: e9 bf        	j	0x200422b8 <.LBB10_8>

200422e0 <.LBB10_13>:
; 	list = core_list_mergesort(list,cmp_idx,NULL);
200422e0: 97 05 00 00  	auipcc	ca1, 0
200422e4: db 95 25 bc  	cincoffset	ca1, ca1, -1086
200422e8: 42 65        	clc	ca0, 16(csp)
200422ea: 5b 06 a0 fe  	cmove	ca2, cnull
200422ee: a2 74        	clc	cs1, 40(csp)
200422f0: 42 74        	clc	cs0, 48(csp)
200422f2: e2 70        	clc	cra, 56(csp)
200422f4: 21 61        	cincoffset	csp, csp, 64
200422f6: 45 b3        	j	0x20042096 <core_list_mergesort(list_head_s*, int (*)(list_data_s*, list_data_s*, RESULTS_S*), RESULTS_S*)>

200422f8 <core_list_insert_new(list_head_s*, list_data_s*, list_head_s**, list_data_s**, list_head_s*, list_data_s*)>:
; 	if ((*memblock+1) >= memblock_end)
200422f8: 03 33 06 00  	clc	ct1, 0(ca2)
200422fc: db 13 03 01  	cincoffset	ct2, ct1, 16
20042300: db 02 a0 fe  	cmove	ct0, cnull
20042304: 63 f3 e3 04  	bgeu	t2, a4, 0x2004234a <.LBB11_3>
; 	if ((*datablock+1) >= datablock_end)
20042308: 98 62        	clc	ca4, 0(ca3)
2004230a: 5b 17 47 00  	cincoffset	ca4, ca4, 4
2004230e: db 02 a0 fe  	cmove	ct0, cnull
20042312: 63 7c f7 02  	bgeu	a4, a5, 0x2004234a <.LBB11_3>
; 	(*memblock)++;
20042316: 23 30 76 00  	csc	ct2, 0(ca2)
; 	newitem->next=insert_point->next;
2004231a: 10 61        	clc	ca2, 0(ca0)
2004231c: 23 30 c3 00  	csc	ca2, 0(ct1)
; 	insert_point->next=newitem;
20042320: 23 30 65 00  	csc	ct1, 0(ca0)
; 	newitem->info=*datablock;
20042324: 88 62        	clc	ca0, 0(ca3)
20042326: 23 34 a3 00  	csc	ca0, 8(ct1)
; 	(*datablock)++;
2004232a: 88 62        	clc	ca0, 0(ca3)
2004232c: 5b 15 45 00  	cincoffset	ca0, ca0, 4
20042330: 88 e2        	csc	ca0, 0(ca3)
; 	copy_info(newitem->info,info);
20042332: 03 35 83 00  	clc	ca0, 8(ct1)
; 	to->data16=from->data16;
20042336: 03 96 05 00  	clh	a2, 0(ca1)
2004233a: 23 10 c5 00  	csh	a2, 0(ca0)
; 	to->idx=from->idx;
2004233e: 83 95 25 00  	clh	a1, 2(ca1)
20042342: 23 11 b5 00  	csh	a1, 2(ca0)
20042346: db 02 a3 fe  	cmove	ct0, ct1

2004234a <.LBB11_3>:
; }
2004234a: 5b 85 a2 fe  	cmove	ca0, ct0
2004234e: 82 80        	cret

20042350 <core_bench_matrix(MAT_PARAMS_S*, short, unsigned short)>:
; ee_u16 core_bench_matrix(mat_params *p, ee_s16 seed, ee_u16 crc) {
20042350: 3d 71        	cincoffset	csp, csp, -32
; 	ee_u32 N=p->N;
20042352: 06 ec        	csc	cra, 24(csp)
20042354: 22 e8        	csc	cs0, 16(csp)
20042356: 26 e4        	csc	cs1, 8(csp)
20042358: 83 22 05 00  	clw	t0, 0(ca0)
; 	MATRES *C=p->C;
2004235c: 18 6d        	clc	ca4, 24(ca0)
; 	MATDAT *A=p->A;
2004235e: 1c 65        	clc	ca5, 8(ca0)
; 	MATDAT *B=p->B;
20042360: 14 69        	clc	ca3, 16(ca0)
20042362: b2 84        	mv	s1, a2
20042364: 2e 84        	mv	s0, a1
; 	crc=crc16(matrix_test(N,C,A,B,val),crc);
20042366: 16 85        	mv	a0, t0
20042368: db 05 a7 fe  	cmove	ca1, ca4
2004236c: 5b 86 a7 fe  	cmove	ca2, ca5
20042370: 22 87        	mv	a4, s0
20042372: 01 28        	cjal	0x20042382 <matrix_test(unsigned int, int*, short*, short*, short)>
20042374: a6 85        	mv	a1, s1
20042376: a2 64        	clc	cs1, 8(csp)
20042378: 42 64        	clc	cs0, 16(csp)
2004237a: e2 60        	clc	cra, 24(csp)
2004237c: 05 61        	cincoffset	csp, csp, 32
2004237e: 6f 00 70 03  	j	0x20042bb4 <crc16(short, unsigned short)>

20042382 <matrix_test(unsigned int, int*, short*, short*, short)>:
; ee_s16 matrix_test(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B, MATDAT val) {
20042382: 5d 71        	cincoffset	csp, csp, -80
20042384: 86 e4        	csc	cra, 72(csp)
20042386: a2 e0        	csc	cs0, 64(csp)
20042388: 26 fc        	csc	cs1, 56(csp)
2004238a: 36 f0        	csc	ca3, 32(csp)
2004238c: 5b 04 a6 fe  	cmove	cs0, ca2
20042390: 2e e8        	csc	ca1, 16(csp)
20042392: aa 84        	mv	s1, a0
20042394: 7d 75        	lui	a0, 1048575
; 	MATDAT clipval=matrix_big(val);
20042396: 3a ce        	csw	a4, 28(csp)
20042398: 59 8d        	or	a0, a0, a4
; 	matrix_add_const(N,A,val); /* make sure data changes  */
2004239a: 2a da        	csw	a0, 52(csp)
2004239c: 26 85        	mv	a0, s1
2004239e: db 05 a6 fe  	cmove	ca1, ca2
200423a2: 32 f4        	csc	ca2, 40(csp)
200423a4: 3a 86        	mv	a2, a4
200423a6: 59 28        	cjal	0x2004243c <matrix_add_const(unsigned int, short*, short)>
; 	matrix_mul_const(N,C,A,val);
200423a8: 26 85        	mv	a0, s1
200423aa: c2 65        	clc	ca1, 16(csp)
200423ac: 5b 06 a4 fe  	cmove	ca2, cs0
200423b0: f2 46        	clw	a3, 28(csp)
200423b2: 6d 28        	cjal	0x2004246c <matrix_mul_const(unsigned int, int*, short*, short)>
; 	crc=crc16(matrix_sum(N,C,clipval),crc);
200423b4: 26 85        	mv	a0, s1
200423b6: 42 64        	clc	cs0, 16(csp)
200423b8: db 05 a4 fe  	cmove	ca1, cs0
200423bc: 52 56        	clw	a2, 52(csp)
200423be: cd 28        	cjal	0x200424b0 <matrix_sum(unsigned int, int*, short)>
200423c0: 81 45        	mv	a1, zero
200423c2: cd 2f        	cjal	0x20042bb4 <crc16(short, unsigned short)>
200423c4: 2a c6        	csw	a0, 12(csp)
; 	matrix_mul_vect(N,C,A,B);
200423c6: 26 85        	mv	a0, s1
200423c8: db 05 a4 fe  	cmove	ca1, cs0
200423cc: 22 76        	clc	ca2, 40(csp)
200423ce: 82 76        	clc	ca3, 32(csp)
200423d0: 25 2a        	cjal	0x20042508 <matrix_mul_vect(unsigned int, int*, short*, short*)>
; 	crc=crc16(matrix_sum(N,C,clipval),crc);
200423d2: 26 85        	mv	a0, s1
200423d4: db 05 a4 fe  	cmove	ca1, cs0
200423d8: 52 56        	clw	a2, 52(csp)
200423da: d9 28        	cjal	0x200424b0 <matrix_sum(unsigned int, int*, short)>
200423dc: b2 45        	clw	a1, 12(csp)
200423de: d9 2f        	cjal	0x20042bb4 <crc16(short, unsigned short)>
200423e0: 2a c6        	csw	a0, 12(csp)
; 	matrix_mul_matrix(N,C,A,B);
200423e2: 26 85        	mv	a0, s1
200423e4: db 05 a4 fe  	cmove	ca1, cs0
200423e8: 22 76        	clc	ca2, 40(csp)
200423ea: 82 76        	clc	ca3, 32(csp)
200423ec: 95 2a        	cjal	0x20042560 <matrix_mul_matrix(unsigned int, int*, short*, short*)>
; 	crc=crc16(matrix_sum(N,C,clipval),crc);
200423ee: 26 85        	mv	a0, s1
200423f0: db 05 a4 fe  	cmove	ca1, cs0
200423f4: 52 56        	clw	a2, 52(csp)
200423f6: 6d 28        	cjal	0x200424b0 <matrix_sum(unsigned int, int*, short)>
200423f8: b2 45        	clw	a1, 12(csp)
200423fa: 6d 2f        	cjal	0x20042bb4 <crc16(short, unsigned short)>
200423fc: 2a c6        	csw	a0, 12(csp)
; 	matrix_mul_matrix_bitextract(N,C,A,B);
200423fe: 26 85        	mv	a0, s1
20042400: db 05 a4 fe  	cmove	ca1, cs0
20042404: 22 76        	clc	ca2, 40(csp)
20042406: 82 76        	clc	ca3, 32(csp)
20042408: e1 2a        	cjal	0x200425e0 <matrix_mul_matrix_bitextract(unsigned int, int*, short*, short*)>
; 	crc=crc16(matrix_sum(N,C,clipval),crc);
2004240a: 26 85        	mv	a0, s1
2004240c: db 05 a4 fe  	cmove	ca1, cs0
20042410: 52 56        	clw	a2, 52(csp)
20042412: 79 28        	cjal	0x200424b0 <matrix_sum(unsigned int, int*, short)>
20042414: b2 45        	clw	a1, 12(csp)
20042416: 79 2f        	cjal	0x20042bb4 <crc16(short, unsigned short)>
20042418: 2a 84        	mv	s0, a0
; 	matrix_add_const(N,A,-val); /* return matrix to initial value */
2004241a: 72 45        	clw	a0, 28(csp)
2004241c: 33 05 a0 40  	neg	a0, a0
20042420: 42 05        	slli	a0, a0, 16
20042422: 13 56 05 41  	srai	a2, a0, 16
20042426: 26 85        	mv	a0, s1
20042428: a2 75        	clc	ca1, 40(csp)
2004242a: 09 28        	cjal	0x2004243c <matrix_add_const(unsigned int, short*, short)>
; 	return crc;
2004242c: 13 15 04 01  	slli	a0, s0, 16
20042430: 41 85        	srai	a0, a0, 16
20042432: e2 74        	clc	cs1, 56(csp)
20042434: 06 64        	clc	cs0, 64(csp)
20042436: a6 60        	clc	cra, 72(csp)
20042438: 61 61        	cincoffset	csp, csp, 80
2004243a: 82 80        	cret

2004243c <matrix_add_const(unsigned int, short*, short)>:
; void matrix_add_const(ee_u32 N, MATDAT *A, MATDAT val) {
2004243c: 81 42        	mv	t0, zero
2004243e: 01 43        	mv	t1, zero
; 	for (i=0; i<N; i++) {
20042440: 63 05 a3 02  	beq	t1, a0, 0x2004246a <.LBB2_4>

20042444 <.LBB2_1>:
20042444: 96 83        	mv	t2, t0
20042446: aa 86        	mv	a3, a0
; 		for (j=0; j<N; j++) {
20042448: 89 ce        	beqz	a3, 0x20042462 <.LBB2_3>

2004244a <.LBB2_2>:
; 			A[i*N+j] += val;
2004244a: 13 97 13 00  	slli	a4, t2, 1
2004244e: 5b 87 e5 22  	cincoffset	ca4, ca1, a4
20042452: 83 17 07 00  	clh	a5, 0(ca4)
20042456: b2 97        	add	a5, a5, a2
20042458: 23 10 f7 00  	csh	a5, 0(ca4)
; 		for (j=0; j<N; j++) {
2004245c: fd 16        	addi	a3, a3, -1
2004245e: 85 03        	addi	t2, t2, 1
20042460: ed f6        	bnez	a3, 0x2004244a <.LBB2_2>

20042462 <.LBB2_3>:
; 	for (i=0; i<N; i++) {
20042462: 05 03        	addi	t1, t1, 1
20042464: aa 92        	add	t0, t0, a0
20042466: e3 1f a3 fc  	bne	t1, a0, 0x20042444 <.LBB2_1>

2004246a <.LBB2_4>:
; }
2004246a: 82 80        	cret

2004246c <matrix_mul_const(unsigned int, int*, short*, short)>:
; void matrix_mul_const(ee_u32 N, MATRES *C, MATDAT *A, MATDAT val) {
2004246c: 7d 71        	cincoffset	csp, csp, -16
2004246e: 22 e4        	csc	cs0, 8(csp)
20042470: 81 42        	mv	t0, zero
20042472: 01 43        	mv	t1, zero
; 	for (i=0; i<N; i++) {
20042474: 63 0b a3 02  	beq	t1, a0, 0x200424aa <.LBB3_4>

20042478 <.LBB3_1>:
20042478: 16 87        	mv	a4, t0
2004247a: aa 83        	mv	t2, a0
; 		for (j=0; j<N; j++) {
2004247c: 63 83 03 02  	beqz	t2, 0x200424a2 <.LBB3_3>

20042480 <.LBB3_2>:
; 			C[i*N+j]=(MATRES)A[i*N+j] * (MATRES)val;
20042480: 93 17 17 00  	slli	a5, a4, 1
20042484: db 07 f6 22  	cincoffset	ca5, ca2, a5
20042488: 83 97 07 00  	clh	a5, 0(ca5)
2004248c: b3 87 d7 02  	mul	a5, a5, a3
20042490: 13 14 27 00  	slli	s0, a4, 2
20042494: 5b 84 85 22  	cincoffset	cs0, ca1, s0
20042498: 1c c0        	csw	a5, 0(cs0)
; 		for (j=0; j<N; j++) {
2004249a: fd 13        	addi	t2, t2, -1
2004249c: 05 07        	addi	a4, a4, 1
2004249e: e3 91 03 fe  	bnez	t2, 0x20042480 <.LBB3_2>

200424a2 <.LBB3_3>:
; 	for (i=0; i<N; i++) {
200424a2: 05 03        	addi	t1, t1, 1
200424a4: aa 92        	add	t0, t0, a0
200424a6: e3 19 a3 fc  	bne	t1, a0, 0x20042478 <.LBB3_1>

200424aa <.LBB3_4>:
; }
200424aa: 22 64        	clc	cs0, 8(csp)
200424ac: 41 61        	cincoffset	csp, csp, 16
200424ae: 82 80        	cret

200424b0 <matrix_sum(unsigned int, int*, short)>:
; ee_s16 matrix_sum(ee_u32 N, MATRES *C, MATDAT clipval) {
200424b0: 3d 71        	cincoffset	csp, csp, -32
200424b2: 06 ec        	csc	cra, 24(csp)
200424b4: 22 e8        	csc	cs0, 16(csp)
200424b6: 26 e4        	csc	cs1, 8(csp)
200424b8: 81 42        	mv	t0, zero
200424ba: 81 46        	mv	a3, zero
200424bc: 81 43        	mv	t2, zero
200424be: 81 40        	mv	ra, zero
200424c0: 01 43        	mv	t1, zero
; 	for (i=0; i<N; i++) {
200424c2: 63 0b a3 02  	beq	t1, a0, 0x200424f8 <.LBB4_7>

200424c6 <.LBB4_1>:
200424c6: 96 87        	mv	a5, t0
200424c8: 2a 84        	mv	s0, a0
; 		for (j=0; j<N; j++) {
200424ca: 1d c0        	beqz	s0, 0x200424f0 <.LBB4_6>

200424cc <.LBB4_2>:
; 			cur=C[i*N+j];
200424cc: 13 97 27 00  	slli	a4, a5, 2
200424d0: 5b 87 e5 22  	cincoffset	ca4, ca1, a4
200424d4: 04 43        	clw	s1, 0(ca4)
; 			tmp+=cur;
200424d6: a6 96        	add	a3, a3, s1
; 			if (tmp>clipval) {
200424d8: 63 45 d6 00  	blt	a2, a3, 0x200424e2 <.LBB4_4>
200424dc: 33 a7 93 00  	slt	a4, t2, s1
200424e0: 19 a0        	j	0x200424e6 <.LBB4_5>

200424e2 <.LBB4_4>:
200424e2: 81 46        	mv	a3, zero
200424e4: 29 47        	addi	a4, zero, 10

200424e6 <.LBB4_5>:
; 			if (tmp>clipval) {
200424e6: ba 90        	add	ra, ra, a4
; 		for (j=0; j<N; j++) {
200424e8: 7d 14        	addi	s0, s0, -1
200424ea: 85 07        	addi	a5, a5, 1
200424ec: a6 83        	mv	t2, s1
200424ee: 79 fc        	bnez	s0, 0x200424cc <.LBB4_2>

200424f0 <.LBB4_6>:
; 	for (i=0; i<N; i++) {
200424f0: 05 03        	addi	t1, t1, 1
200424f2: aa 92        	add	t0, t0, a0
200424f4: e3 19 a3 fc  	bne	t1, a0, 0x200424c6 <.LBB4_1>

200424f8 <.LBB4_7>:
; 	return ret;
200424f8: 13 95 00 01  	slli	a0, ra, 16
200424fc: 41 85        	srai	a0, a0, 16
200424fe: a2 64        	clc	cs1, 8(csp)
20042500: 42 64        	clc	cs0, 16(csp)
20042502: e2 60        	clc	cra, 24(csp)
20042504: 05 61        	cincoffset	csp, csp, 32
20042506: 82 80        	cret

20042508 <matrix_mul_vect(unsigned int, int*, short*, short*)>:
; void matrix_mul_vect(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B) {
20042508: 7d 71        	cincoffset	csp, csp, -16
2004250a: 22 e4        	csc	cs0, 8(csp)
2004250c: 26 e0        	csc	cs1, 0(csp)
2004250e: 81 43        	mv	t2, zero
20042510: 81 42        	mv	t0, zero
; 	for (i=0; i<N; i++) {
20042512: 63 83 a2 04  	beq	t0, a0, 0x20042558 <.LBB5_4>

20042516 <.LBB5_1>:
20042516: 01 44        	mv	s0, zero
20042518: 01 47        	mv	a4, zero
; 		C[i]=0;
2004251a: 93 97 22 00  	slli	a5, t0, 2
2004251e: 5b 83 f5 22  	cincoffset	ct1, ca1, a5
; 		for (j=0; j<N; j++) {
20042522: 63 05 e5 02  	beq	a0, a4, 0x2004254c <.LBB5_3>

20042526 <.LBB5_2>:
; 			C[i]+=(MATRES)A[i*N+j] * (MATRES)B[j];
20042526: b3 87 e3 00  	add	a5, t2, a4
2004252a: 86 07        	slli	a5, a5, 1
2004252c: db 07 f6 22  	cincoffset	ca5, ca2, a5
20042530: 83 97 07 00  	clh	a5, 0(ca5)
20042534: 93 14 17 00  	slli	s1, a4, 1
20042538: db 84 96 22  	cincoffset	cs1, ca3, s1
2004253c: 83 94 04 00  	clh	s1, 0(cs1)
20042540: b3 87 f4 02  	mul	a5, s1, a5
20042544: 3e 94        	add	s0, s0, a5
; 		for (j=0; j<N; j++) {
20042546: 05 07        	addi	a4, a4, 1
20042548: e3 1f e5 fc  	bne	a0, a4, 0x20042526 <.LBB5_2>

2004254c <.LBB5_3>:
; 			C[i]+=(MATRES)A[i*N+j] * (MATRES)B[j];
2004254c: 23 20 83 00  	csw	s0, 0(ct1)
; 	for (i=0; i<N; i++) {
20042550: 85 02        	addi	t0, t0, 1
20042552: aa 93        	add	t2, t2, a0
20042554: e3 91 a2 fc  	bne	t0, a0, 0x20042516 <.LBB5_1>

20042558 <.LBB5_4>:
; }
20042558: 82 64        	clc	cs1, 0(csp)
2004255a: 22 64        	clc	cs0, 8(csp)
2004255c: 41 61        	cincoffset	csp, csp, 16
2004255e: 82 80        	cret

20042560 <matrix_mul_matrix(unsigned int, int*, short*, short*)>:
; void matrix_mul_matrix(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B) {
20042560: 79 71        	cincoffset	csp, csp, -48
20042562: 06 f4        	csc	cra, 40(csp)
20042564: 22 f0        	csc	cs0, 32(csp)
20042566: 26 ec        	csc	cs1, 24(csp)
20042568: 2e e4        	csc	ca1, 8(csp)
2004256a: 01 43        	mv	t1, zero
2004256c: 81 45        	mv	a1, zero
; 	for (i=0; i<N; i++) {
2004256e: 63 84 a5 06  	beq	a1, a0, 0x200425d6 <.LBB6_6>

20042572 <.LBB6_1>:
20042572: 81 43        	mv	t2, zero
20042574: 2e c2        	csw	a1, 4(csp)
20042576: b3 85 a5 02  	mul	a1, a1, a0
2004257a: 2e ca        	csw	a1, 20(csp)
; 		for (j=0; j<N; j++) {
2004257c: 63 88 a3 04  	beq	t2, a0, 0x200425cc <.LBB6_5>

20042580 <.LBB6_2>:
20042580: 81 47        	mv	a5, zero
20042582: 81 44        	mv	s1, zero
; 			C[i*N+j]=0;
20042584: d2 45        	clw	a1, 20(csp)
20042586: 33 84 b3 00  	add	s0, t2, a1
2004258a: 0a 04        	slli	s0, s0, 2
2004258c: a2 65        	clc	ca1, 8(csp)
2004258e: db 80 85 22  	cincoffset	cra, ca1, s0
20042592: 1e 84        	mv	s0, t2
; 			for(k=0;k<N;k++)
20042594: 63 07 95 02  	beq	a0, s1, 0x200425c2 <.LBB6_4>

20042598 <.LBB6_3>:
; 				C[i*N+j]+=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
20042598: b3 02 93 00  	add	t0, t1, s1
2004259c: 13 97 12 00  	slli	a4, t0, 1
200425a0: 5b 07 e6 22  	cincoffset	ca4, ca2, a4
200425a4: 03 17 07 00  	clh	a4, 0(ca4)
200425a8: 93 15 14 00  	slli	a1, s0, 1
200425ac: db 85 b6 22  	cincoffset	ca1, ca3, a1
200425b0: 83 95 05 00  	clh	a1, 0(ca1)
200425b4: b3 85 e5 02  	mul	a1, a1, a4
200425b8: ae 97        	add	a5, a5, a1
; 			for(k=0;k<N;k++)
200425ba: 85 04        	addi	s1, s1, 1
200425bc: 2a 94        	add	s0, s0, a0
200425be: e3 1d 95 fc  	bne	a0, s1, 0x20042598 <.LBB6_3>

200425c2 <.LBB6_4>:
; 				C[i*N+j]+=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
200425c2: 23 a0 f0 00  	csw	a5, 0(cra)
; 		for (j=0; j<N; j++) {
200425c6: 85 03        	addi	t2, t2, 1
200425c8: e3 9c a3 fa  	bne	t2, a0, 0x20042580 <.LBB6_2>

200425cc <.LBB6_5>:
200425cc: 92 45        	clw	a1, 4(csp)
; 	for (i=0; i<N; i++) {
200425ce: 85 05        	addi	a1, a1, 1
200425d0: 2a 93        	add	t1, t1, a0
200425d2: e3 90 a5 fa  	bne	a1, a0, 0x20042572 <.LBB6_1>

200425d6 <.LBB6_6>:
; }
200425d6: e2 64        	clc	cs1, 24(csp)
200425d8: 02 74        	clc	cs0, 32(csp)
200425da: a2 70        	clc	cra, 40(csp)
200425dc: 45 61        	cincoffset	csp, csp, 48
200425de: 82 80        	cret

200425e0 <matrix_mul_matrix_bitextract(unsigned int, int*, short*, short*)>:
; void matrix_mul_matrix_bitextract(ee_u32 N, MATRES *C, MATDAT *A, MATDAT *B) {
200425e0: 79 71        	cincoffset	csp, csp, -48
200425e2: 06 f4        	csc	cra, 40(csp)
200425e4: 22 f0        	csc	cs0, 32(csp)
200425e6: 26 ec        	csc	cs1, 24(csp)
200425e8: 2e e4        	csc	ca1, 8(csp)
200425ea: 01 43        	mv	t1, zero
200425ec: 81 45        	mv	a1, zero
; 	for (i=0; i<N; i++) {
200425ee: 63 8c a5 06  	beq	a1, a0, 0x20042666 <.LBB7_6>

200425f2 <.LBB7_1>:
200425f2: 81 43        	mv	t2, zero
200425f4: 2e c2        	csw	a1, 4(csp)
200425f6: b3 85 a5 02  	mul	a1, a1, a0
200425fa: 2e ca        	csw	a1, 20(csp)
; 		for (j=0; j<N; j++) {
200425fc: 63 80 a3 06  	beq	t2, a0, 0x2004265c <.LBB7_5>

20042600 <.LBB7_2>:
20042600: 81 47        	mv	a5, zero
20042602: 81 44        	mv	s1, zero
; 			C[i*N+j]=0;
20042604: d2 45        	clw	a1, 20(csp)
20042606: 33 84 b3 00  	add	s0, t2, a1
2004260a: 0a 04        	slli	s0, s0, 2
2004260c: a2 65        	clc	ca1, 8(csp)
2004260e: db 80 85 22  	cincoffset	cra, ca1, s0
20042612: 1e 84        	mv	s0, t2
; 			for(k=0;k<N;k++)
20042614: 63 0f 95 02  	beq	a0, s1, 0x20042652 <.LBB7_4>

20042618 <.LBB7_3>:
; 				MATRES tmp=(MATRES)A[i*N+k] * (MATRES)B[k*N+j];
20042618: b3 02 93 00  	add	t0, t1, s1
2004261c: 13 97 12 00  	slli	a4, t0, 1
20042620: 5b 07 e6 22  	cincoffset	ca4, ca2, a4
20042624: 03 57 07 00  	clhu	a4, 0(ca4)
20042628: 93 15 14 00  	slli	a1, s0, 1
2004262c: db 85 b6 22  	cincoffset	ca1, ca3, a1
20042630: 83 d5 05 00  	clhu	a1, 0(ca1)
20042634: b3 85 e5 02  	mul	a1, a1, a4
; 				C[i*N+j]+=bit_extract(tmp,2,4)*bit_extract(tmp,5,7);
20042638: 13 d7 25 00  	srli	a4, a1, 2
2004263c: 3d 8b        	andi	a4, a4, 15
2004263e: 95 81        	srli	a1, a1, 5
20042640: 93 f5 f5 07  	andi	a1, a1, 127
20042644: b3 05 b7 02  	mul	a1, a4, a1
20042648: ae 97        	add	a5, a5, a1
; 			for(k=0;k<N;k++)
2004264a: 85 04        	addi	s1, s1, 1
2004264c: 2a 94        	add	s0, s0, a0
2004264e: e3 15 95 fc  	bne	a0, s1, 0x20042618 <.LBB7_3>

20042652 <.LBB7_4>:
; 				C[i*N+j]+=bit_extract(tmp,2,4)*bit_extract(tmp,5,7);
20042652: 23 a0 f0 00  	csw	a5, 0(cra)
; 		for (j=0; j<N; j++) {
20042656: 85 03        	addi	t2, t2, 1
20042658: e3 94 a3 fa  	bne	t2, a0, 0x20042600 <.LBB7_2>

2004265c <.LBB7_5>:
2004265c: 92 45        	clw	a1, 4(csp)
; 	for (i=0; i<N; i++) {
2004265e: 85 05        	addi	a1, a1, 1
20042660: 2a 93        	add	t1, t1, a0
20042662: e3 98 a5 f8  	bne	a1, a0, 0x200425f2 <.LBB7_1>

20042666 <.LBB7_6>:
; }
20042666: e2 64        	clc	cs1, 24(csp)
20042668: 02 74        	clc	cs0, 32(csp)
2004266a: a2 70        	clc	cra, 40(csp)
2004266c: 45 61        	cincoffset	csp, csp, 48
2004266e: 82 80        	cret

20042670 <core_init_matrix(unsigned int, void*, int, MAT_PARAMS_S*)>:
; ee_u32 core_init_matrix(ee_u32 blksize, void *memblk, ee_s32 seed, mat_params *p) {
20042670: 79 71        	cincoffset	csp, csp, -48
20042672: 06 f4        	csc	cra, 40(csp)
20042674: 22 f0        	csc	cs0, 32(csp)
20042676: 26 ec        	csc	cs1, 24(csp)
20042678: 36 e4        	csc	ca3, 8(csp)
2004267a: 2a 87        	mv	a4, a0
2004267c: 81 44        	mv	s1, zero
; 	if (seed==0)
2004267e: 93 36 16 00  	seqz	a3, a2
20042682: 7d 55        	addi	a0, zero, -1
20042684: a1 47        	addi	a5, zero, 8
; 	while (j<blksize) {
20042686: 63 fa e4 00  	bgeu	s1, a4, 0x2004269a <.LBB8_2>

2004268a <.LBB8_1>:
; 		j=i*i*2*4;		
2004268a: 93 04 25 00  	addi	s1, a0, 2
2004268e: b3 84 97 02  	mul	s1, a5, s1
; 	while (j<blksize) {
20042692: 05 05        	addi	a0, a0, 1
20042694: a1 07        	addi	a5, a5, 8
20042696: e3 ea e4 fe  	bltu	s1, a4, 0x2004268a <.LBB8_1>

2004269a <.LBB8_2>:
2004269a: 85 42        	addi	t0, zero, 1
2004269c: 85 47        	addi	a5, zero, 1
; 	if (seed==0)
2004269e: 91 e2        	bnez	a3, 0x200426a2 <.LBB8_4>
200426a0: b2 87        	mv	a5, a2

200426a2 <.LBB8_4>:
200426a2: 01 46        	mv	a2, zero
200426a4: 81 44        	mv	s1, zero
; 	A=(MATDAT *)align_mem(memblk);
200426a6: db 86 f5 fe  	cgetaddr	a3, ca1
200426aa: 8d 06        	addi	a3, a3, 3
200426ac: db 95 35 00  	cincoffset	ca1, ca1, 3
200426b0: f1 9a        	andi	a3, a3, -4
200426b2: 5b 87 d5 20  	csetaddr	ca4, ca1, a3
; 	B=A+N*N;
200426b6: b3 05 a5 02  	mul	a1, a0, a0
200426ba: 86 05        	slli	a1, a1, 1
200426bc: 2e c2        	csw	a1, 4(csp)
200426be: db 00 b7 22  	cincoffset	cra, ca4, a1
; 	for (i=0; i<N; i++) {
200426c2: 13 04 15 00  	addi	s0, a0, 1
200426c6: 2a c8        	csw	a0, 16(csp)
200426c8: 63 02 95 06  	beq	a0, s1, 0x2004272c <.LBB8_9>

200426cc <.LBB8_5>:
200426cc: 26 ca        	csw	s1, 20(csp)
; 		for (j=0; j<N; j++) {
200426ce: 93 94 12 00  	slli	s1, t0, 1
200426d2: 05 43        	addi	t1, zero, 1

200426d4 <.LBB8_6>:
200426d4: b3 86 62 00  	add	a3, t0, t1
200426d8: 93 83 f6 ff  	addi	t2, a3, -1
200426dc: 63 01 64 04  	beq	s0, t1, 0x2004271e <.LBB8_8>
; 			seed = ( ( order * seed ) % 65536 );
200426e0: b3 87 77 02  	mul	a5, a5, t2
200426e4: 93 d5 f7 41  	srai	a1, a5, 31
200426e8: c1 81        	srli	a1, a1, 16
200426ea: be 95        	add	a1, a1, a5
200426ec: 41 75        	lui	a0, 1048560
200426ee: e9 8d        	and	a1, a1, a0
200426f0: 8d 8f        	sub	a5, a5, a1
; 			val=matrix_clip(val,0);
200426f2: b3 85 f6 00  	add	a1, a3, a5
200426f6: fd 15        	addi	a1, a1, -1
; 			B[i*N+j] = val;
200426f8: b3 06 66 00  	add	a3, a2, t1
200426fc: 86 06        	slli	a3, a3, 1
200426fe: f9 16        	addi	a3, a3, -2
20042700: 5b 85 d0 22  	cincoffset	ca0, cra, a3
20042704: 23 10 b5 00  	csh	a1, 0(ca0)
; 			val=matrix_clip(val,1);
20042708: 33 85 f4 00  	add	a0, s1, a5
2004270c: 13 75 f5 0f  	andi	a0, a0, 255
; 			A[i*N+j] = val;
20042710: db 05 d7 22  	cincoffset	ca1, ca4, a3
20042714: 23 90 a5 00  	csh	a0, 0(ca1)
; 		for (j=0; j<N; j++) {
20042718: 05 03        	addi	t1, t1, 1
2004271a: 89 04        	addi	s1, s1, 2
2004271c: 65 bf        	j	0x200426d4 <.LBB8_6>

2004271e <.LBB8_8>:
2004271e: d2 44        	clw	s1, 20(csp)
; 	for (i=0; i<N; i++) {
20042720: 85 04        	addi	s1, s1, 1
20042722: 42 45        	clw	a0, 16(csp)
; 	for (i=0; i<N; i++) {
20042724: 2a 96        	add	a2, a2, a0
20042726: 9e 82        	mv	t0, t2
20042728: e3 12 95 fa  	bne	a0, s1, 0x200426cc <.LBB8_5>

2004272c <.LBB8_9>:
2004272c: 22 66        	clc	ca2, 8(csp)
; 	p->A=A;
2004272e: 18 e6        	csc	ca4, 8(ca2)
; 	p->B=B;
20042730: 23 38 16 00  	csc	cra, 16(ca2)
; 	p->C=(MATRES *)align_mem(B+N*N);
20042734: 92 45        	clw	a1, 4(csp)
20042736: db 86 b0 22  	cincoffset	ca3, cra, a1
2004273a: db 85 f6 fe  	cgetaddr	a1, ca3
2004273e: 8d 05        	addi	a1, a1, 3
20042740: f1 99        	andi	a1, a1, -4
20042742: db 85 b6 20  	csetaddr	ca1, ca3, a1
20042746: 0c ee        	csc	ca1, 24(ca2)
; 	p->N=N;
20042748: 08 c2        	csw	a0, 0(ca2)
; 	return N;
2004274a: e2 64        	clc	cs1, 24(csp)
2004274c: 02 74        	clc	cs0, 32(csp)
2004274e: a2 70        	clc	cra, 40(csp)
20042750: 45 61        	cincoffset	csp, csp, 48
20042752: 82 80        	cret

20042754 <core_bench_state(unsigned int, unsigned char*, short, short, short, unsigned short)>:
; {
20042754: 75 71        	cincoffset	csp, csp, -144
20042756: 06 e5        	csc	cra, 136(csp)
20042758: 22 e1        	csc	cs0, 128(csp)
2004275a: a6 fc        	csc	cs1, 120(csp)
2004275c: 3e c6        	csw	a5, 12(csp)
2004275e: 3a d4        	csw	a4, 40(csp)
20042760: 36 c4        	csw	a3, 8(csp)
20042762: 32 c8        	csw	a2, 16(csp)
20042764: 5b 84 a5 fe  	cmove	cs0, ca1
20042768: 2a c2        	csw	a0, 4(csp)
2004276a: 01 45        	mv	a0, zero
; 	ee_u8 *p=memblock;
2004276c: 2e f8        	csc	ca1, 48(csp)
2004276e: a1 45        	addi	a1, zero, 8
20042770: 30 18        	cincoffset	ca2, csp, 56
20042772: 5b 26 06 02  	csetbounds	ca2, ca2, 32
20042776: b4 08        	cincoffset	ca3, csp, 88
20042778: db a6 06 02  	csetbounds	ca3, ca3, 32
; 	for (i=0; i<NUM_CORE_STATES; i++) {
2004277c: 63 0f b5 00  	beq	a0, a1, 0x2004279a <.LBB0_2>

20042780 <.LBB0_1>:
; 		final_counts[i]=track_counts[i]=0;
20042780: 13 17 25 00  	slli	a4, a0, 2
20042784: db 07 e6 22  	cincoffset	ca5, ca2, a4
20042788: 23 a0 07 00  	csw	zero, 0(ca5)
2004278c: 5b 87 e6 22  	cincoffset	ca4, ca3, a4
20042790: 23 20 07 00  	csw	zero, 0(ca4)
; 	for (i=0; i<NUM_CORE_STATES; i++) {
20042794: 05 05        	addi	a0, a0, 1
20042796: e3 15 b5 fe  	bne	a0, a1, 0x20042780 <.LBB0_1>

2004279a <.LBB0_2>:
2004279a: 28 18        	cincoffset	ca0, csp, 56
2004279c: 5b 25 05 02  	csetbounds	ca0, ca0, 32
200427a0: 2a f0        	csc	ca0, 32(csp)
200427a2: 08 18        	cincoffset	ca0, csp, 48
200427a4: 5b 25 85 00  	csetbounds	ca0, ca0, 8
200427a8: 2a ec        	csc	ca0, 24(csp)
200427aa: a8 08        	cincoffset	ca0, csp, 88
200427ac: db 24 05 02  	csetbounds	cs1, ca0, 32
200427b0: 5b 05 a4 fe  	cmove	ca0, cs0

200427b4 <.LBB0_3>:
; 	while (*p!=0) {
200427b4: 03 45 05 00  	clbu	a0, 0(ca0)
200427b8: 01 cd        	beqz	a0, 0x200427d0 <.LBB0_5>
; 		enum CORE_STATE fstate=core_state_transition(&p,track_counts);
200427ba: 62 65        	clc	ca0, 24(csp)
200427bc: 82 75        	clc	ca1, 32(csp)
200427be: f5 20        	cjal	0x200428aa <core_state_transition(unsigned char**, unsigned int*)>
; 		final_counts[fstate]++;
200427c0: 0a 05        	slli	a0, a0, 2
200427c2: db 85 a4 22  	cincoffset	ca1, cs1, a0
200427c6: 90 41        	clw	a2, 0(ca1)
; 	while (*p!=0) {
200427c8: 42 75        	clc	ca0, 48(csp)
; 		final_counts[fstate]++;
200427ca: 05 06        	addi	a2, a2, 1
200427cc: 90 c1        	csw	a2, 0(ca1)
200427ce: dd b7        	j	0x200427b4 <.LBB0_3>

200427d0 <.LBB0_5>:
200427d0: 12 45        	clw	a0, 4(csp)
200427d2: db 04 a4 22  	cincoffset	cs1, cs0, a0
200427d6: 13 05 c0 02  	addi	a0, zero, 44
200427da: db 05 a4 fe  	cmove	ca1, cs0
200427de: c2 46        	clw	a3, 16(csp)
; 	while (p < (memblock+blksize)) { /* insert some corruption */
200427e0: 63 fe 95 00  	bgeu	a1, s1, 0x200427fc <.LBB0_9>

200427e4 <.LBB0_6>:
; 		if (*p!=',')
200427e4: 03 c6 05 00  	clbu	a2, 0(ca1)
200427e8: 63 05 a6 00  	beq	a2, a0, 0x200427f2 <.LBB0_8>
; 			*p^=(ee_u8)seed1;
200427ec: 35 8e        	xor	a2, a2, a3
200427ee: 23 80 c5 00  	csb	a2, 0(ca1)

200427f2 <.LBB0_8>:
; 		p+=step;
200427f2: 22 56        	clw	a2, 40(csp)
200427f4: db 85 c5 22  	cincoffset	ca1, ca1, a2
; 	while (p < (memblock+blksize)) { /* insert some corruption */
200427f8: e3 e6 95 fe  	bltu	a1, s1, 0x200427e4 <.LBB0_6>

200427fc <.LBB0_9>:
; 	p=memblock;
200427fc: 22 f8        	csc	cs0, 48(csp)
200427fe: 08 18        	cincoffset	ca0, csp, 48
20042800: 5b 25 85 00  	csetbounds	ca0, ca0, 8
20042804: 2a ec        	csc	ca0, 24(csp)
20042806: a8 08        	cincoffset	ca0, csp, 88
20042808: 5b 25 05 02  	csetbounds	ca0, ca0, 32
2004280c: 2a e8        	csc	ca0, 16(csp)
2004280e: 5b 05 a4 fe  	cmove	ca0, cs0

20042812 <.LBB0_10>:
; 	while (*p!=0) {
20042812: 03 45 05 00  	clbu	a0, 0(ca0)
20042816: 09 cd        	beqz	a0, 0x20042830 <.LBB0_12>
; 		enum CORE_STATE fstate=core_state_transition(&p,track_counts);
20042818: 62 65        	clc	ca0, 24(csp)
2004281a: 82 75        	clc	ca1, 32(csp)
2004281c: 79 20        	cjal	0x200428aa <core_state_transition(unsigned char**, unsigned int*)>
; 		final_counts[fstate]++;
2004281e: 0a 05        	slli	a0, a0, 2
20042820: c2 65        	clc	ca1, 16(csp)
20042822: db 85 a5 22  	cincoffset	ca1, ca1, a0
20042826: 90 41        	clw	a2, 0(ca1)
; 	while (*p!=0) {
20042828: 42 75        	clc	ca0, 48(csp)
; 		final_counts[fstate]++;
2004282a: 05 06        	addi	a2, a2, 1
2004282c: 90 c1        	csw	a2, 0(ca1)
2004282e: d5 b7        	j	0x20042812 <.LBB0_10>

20042830 <.LBB0_12>:
20042830: 13 05 c0 02  	addi	a0, zero, 44
20042834: 22 46        	clw	a2, 8(csp)
; 	while (p < (memblock+blksize)) { /* undo corruption is seed1 and seed2 are equal */
20042836: 63 7e 94 00  	bgeu	s0, s1, 0x20042852 <.LBB0_16>

2004283a <.LBB0_13>:
; 		if (*p!=',')
2004283a: 83 45 04 00  	clbu	a1, 0(cs0)
2004283e: 63 85 a5 00  	beq	a1, a0, 0x20042848 <.LBB0_15>
; 			*p^=(ee_u8)seed2;
20042842: b1 8d        	xor	a1, a1, a2
20042844: 23 00 b4 00  	csb	a1, 0(cs0)

20042848 <.LBB0_15>:
; 		p+=step;
20042848: a2 55        	clw	a1, 40(csp)
2004284a: 5b 04 b4 22  	cincoffset	cs0, cs0, a1
; 	while (p < (memblock+blksize)) { /* undo corruption is seed1 and seed2 are equal */
2004284e: e3 66 94 fe  	bltu	s0, s1, 0x2004283a <.LBB0_13>

20042852 <.LBB0_16>:
20042852: 01 44        	mv	s0, zero
20042854: a8 08        	cincoffset	ca0, csp, 88
20042856: 5b 25 05 02  	csetbounds	ca0, ca0, 32
2004285a: 2a f4        	csc	ca0, 40(csp)
2004285c: 41 65        	lui	a0, 16
2004285e: 7d 15        	addi	a0, a0, -1
20042860: 2a d0        	csw	a0, 32(csp)
20042862: 28 18        	cincoffset	ca0, csp, 56
20042864: 5b 25 05 02  	csetbounds	ca0, ca0, 32
20042868: 2a ec        	csc	ca0, 24(csp)
2004286a: b2 45        	clw	a1, 12(csp)

2004286c <.LBB0_17>:
; 	for (i=0; i<NUM_CORE_STATES; i++) {
2004286c: 21 45        	addi	a0, zero, 8
2004286e: 63 06 a4 02  	beq	s0, a0, 0x2004289a <.LBB0_19>
; 		crc=crcu32(final_counts[i],crc);
20042872: 93 14 24 00  	slli	s1, s0, 2
20042876: 22 75        	clc	ca0, 40(csp)
20042878: 5b 05 95 22  	cincoffset	ca0, ca0, s1
2004287c: 08 41        	clw	a0, 0(ca0)
2004287e: 02 56        	clw	a2, 32(csp)
20042880: f1 8d        	and	a1, a1, a2
20042882: 01 2e        	cjal	0x20042b92 <crcu32(unsigned int, unsigned short)>
; 		crc=crcu32(track_counts[i],crc);
20042884: e2 65        	clc	ca1, 24(csp)
20042886: db 85 95 22  	cincoffset	ca1, ca1, s1
2004288a: 8c 41        	clw	a1, 0(ca1)
; 		crc=crcu32(final_counts[i],crc);
2004288c: 2a 86        	mv	a2, a0
; 		crc=crcu32(track_counts[i],crc);
2004288e: 2e 85        	mv	a0, a1
20042890: b2 85        	mv	a1, a2
20042892: 01 26        	cjal	0x20042b92 <crcu32(unsigned int, unsigned short)>
20042894: aa 85        	mv	a1, a0
; 	for (i=0; i<NUM_CORE_STATES; i++) {
20042896: 05 04        	addi	s0, s0, 1
20042898: d1 bf        	j	0x2004286c <.LBB0_17>

2004289a <.LBB0_19>:
2004289a: 41 65        	lui	a0, 16
2004289c: 7d 15        	addi	a0, a0, -1
; 	return crc;
2004289e: 6d 8d        	and	a0, a0, a1
200428a0: e6 74        	clc	cs1, 120(csp)
200428a2: 0a 64        	clc	cs0, 128(csp)
200428a4: aa 60        	clc	cra, 136(csp)
200428a6: 49 61        	cincoffset	csp, csp, 144
200428a8: 82 80        	cret

200428aa <core_state_transition(unsigned char**, unsigned int*)>:
; enum CORE_STATE core_state_transition( ee_u8 **instr , ee_u32 *transition_count) {
200428aa: 3d 71        	cincoffset	csp, csp, -32
200428ac: 06 ec        	csc	cra, 24(csp)
200428ae: 22 e8        	csc	cs0, 16(csp)
200428b0: 26 e4        	csc	cs1, 8(csp)
200428b2: 01 46        	mv	a2, zero
200428b4: 2a e0        	csc	ca0, 0(csp)
; 	ee_u8 *str=*instr;
200428b6: 14 61        	clc	ca3, 0(ca0)
200428b8: 13 07 c0 02  	addi	a4, zero, 44
200428bc: 9d 47        	addi	a5, zero, 7
200428be: 09 43        	addi	t1, zero, 2
200428c0: 8d 44        	addi	s1, zero, 3
200428c2: 91 40        	addi	ra, zero, 4

200428c4 <.LBB1_1>:
; 	for( ; *str && state != CORE_INVALID; str++ ) {
200428c4: 83 c2 06 00  	clbu	t0, 0(ca3)
200428c8: 33 35 50 00  	snez	a0, t0
200428cc: 93 03 f6 ff  	addi	t2, a2, -1
200428d0: 33 34 70 00  	snez	s0, t2
200428d4: 61 8d        	and	a0, a0, s0
200428d6: 63 03 05 14  	beqz	a0, 0x20042a1c <.LBB1_39>
; 		if (NEXT_SYMBOL==',') /* end of this input */ {
200428da: 63 8f e2 12  	beq	t0, a4, 0x20042a18 <.LBB1_38>
; 		switch(state) {
200428de: 63 07 f6 04  	beq	a2, a5, 0x2004292c <.LBB1_15>
200428e2: 63 02 66 0a  	beq	a2, t1, 0x20042986 <.LBB1_23>
200428e6: 63 00 96 0c  	beq	a2, s1, 0x200429a6 <.LBB1_25>
200428ea: 63 0d 16 04  	beq	a2, ra, 0x20042944 <.LBB1_17>
200428ee: 15 45        	addi	a0, zero, 5
200428f0: 63 03 a6 06  	beq	a2, a0, 0x20042956 <.LBB1_19>
200428f4: 19 45        	addi	a0, zero, 6
200428f6: 63 0b a6 06  	beq	a2, a0, 0x2004296c <.LBB1_21>
200428fa: 63 1c 06 10  	bnez	a2, 0x20042a12 <.LBB1_37>
; 	retval = ((c>='0') & (c<='9')) ? 1 : 0;
200428fe: 13 85 02 fd  	addi	a0, t0, -48
20042902: 13 75 f5 0f  	andi	a0, a0, 255
20042906: 11 46        	addi	a2, zero, 4
; 			if(ee_isdigit(NEXT_SYMBOL)) {
20042908: 29 44        	addi	s0, zero, 10
2004290a: 63 61 85 10  	bltu	a0, s0, 0x20042a0c <.LBB1_36>
2004290e: 09 46        	addi	a2, zero, 2
; 			else if( NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-' ) {
20042910: 13 05 b0 02  	addi	a0, zero, 43
20042914: 63 8c a2 0e  	beq	t0, a0, 0x20042a0c <.LBB1_36>
20042918: 13 05 d0 02  	addi	a0, zero, 45
2004291c: 63 88 a2 0e  	beq	t0, a0, 0x20042a0c <.LBB1_36>
20042920: 13 05 e0 02  	addi	a0, zero, 46
20042924: 63 90 a2 0e  	bne	t0, a0, 0x20042a04 <.LBB1_35>
20042928: 15 46        	addi	a2, zero, 5
2004292a: cd a0        	j	0x20042a0c <.LBB1_36>

2004292c <.LBB1_15>:
; 	retval = ((c>='0') & (c<='9')) ? 1 : 0;
2004292c: 13 85 02 fd  	addi	a0, t0, -48
20042930: 13 75 f5 0f  	andi	a0, a0, 255
20042934: 1d 46        	addi	a2, zero, 7
; 			if(!ee_isdigit(NEXT_SYMBOL)) {
20042936: 29 44        	addi	s0, zero, 10
20042938: 63 6d 85 0c  	bltu	a0, s0, 0x20042a12 <.LBB1_37>
; 				transition_count[CORE_INVALID]++;
2004293c: c8 41        	clw	a0, 4(ca1)
2004293e: 05 05        	addi	a0, a0, 1
20042940: c8 c1        	csw	a0, 4(ca1)
20042942: 7d a8        	j	0x20042a00 <.LBB1_34>

20042944 <.LBB1_17>:
; 			if( NEXT_SYMBOL == '.' ) {
20042944: 13 05 e0 02  	addi	a0, zero, 46
20042948: 63 9c a2 06  	bne	t0, a0, 0x200429c0 <.LBB1_28>
; 				transition_count[CORE_INT]++;
2004294c: 88 49        	clw	a0, 16(ca1)
2004294e: 05 05        	addi	a0, a0, 1
20042950: 88 c9        	csw	a0, 16(ca1)
20042952: 15 46        	addi	a2, zero, 5
20042954: 7d a8        	j	0x20042a12 <.LBB1_37>

20042956 <.LBB1_19>:
; 			if( NEXT_SYMBOL == 'E' || NEXT_SYMBOL == 'e' ) {
20042956: 13 e5 02 02  	ori	a0, t0, 32
2004295a: 13 06 50 06  	addi	a2, zero, 101
2004295e: 63 12 c5 08  	bne	a0, a2, 0x200429e2 <.LBB1_31>
; 				transition_count[CORE_FLOAT]++;
20042962: c8 49        	clw	a0, 20(ca1)
20042964: 05 05        	addi	a0, a0, 1
20042966: c8 c9        	csw	a0, 20(ca1)
20042968: 0d 46        	addi	a2, zero, 3
2004296a: 65 a0        	j	0x20042a12 <.LBB1_37>

2004296c <.LBB1_21>:
2004296c: 88 4d        	clw	a0, 24(ca1)
; 	retval = ((c>='0') & (c<='9')) ? 1 : 0;
2004296e: 13 86 02 fd  	addi	a2, t0, -48
20042972: 13 74 f6 0f  	andi	s0, a2, 255
20042976: 05 05        	addi	a0, a0, 1
20042978: 88 cd        	csw	a0, 24(ca1)
2004297a: 05 46        	addi	a2, zero, 1
2004297c: 25 45        	addi	a0, zero, 9
2004297e: 63 6a 85 08  	bltu	a0, s0, 0x20042a12 <.LBB1_37>
20042982: 1d 46        	addi	a2, zero, 7
20042984: 79 a0        	j	0x20042a12 <.LBB1_37>

20042986 <.LBB1_23>:
; 	retval = ((c>='0') & (c<='9')) ? 1 : 0;
20042986: 13 85 02 fd  	addi	a0, t0, -48
2004298a: 13 75 f5 0f  	andi	a0, a0, 255
; 			if(ee_isdigit(NEXT_SYMBOL)) {
2004298e: 25 46        	addi	a2, zero, 9
20042990: 63 74 a6 04  	bgeu	a2, a0, 0x200429d8 <.LBB1_30>
20042994: 88 45        	clw	a0, 8(ca1)
20042996: 05 05        	addi	a0, a0, 1
20042998: 88 c5        	csw	a0, 8(ca1)
2004299a: 15 46        	addi	a2, zero, 5
2004299c: 13 05 e0 02  	addi	a0, zero, 46
200429a0: 63 90 a2 06  	bne	t0, a0, 0x20042a00 <.LBB1_34>
200429a4: bd a0        	j	0x20042a12 <.LBB1_37>

200429a6 <.LBB1_25>:
; 			if( NEXT_SYMBOL == '+' || NEXT_SYMBOL == '-' ) {
200429a6: 13 05 d0 02  	addi	a0, zero, 45
200429aa: 63 86 a2 00  	beq	t0, a0, 0x200429b6 <.LBB1_27>
200429ae: 13 05 b0 02  	addi	a0, zero, 43
200429b2: 63 94 a2 04  	bne	t0, a0, 0x200429fa <.LBB1_33>

200429b6 <.LBB1_27>:
; 				transition_count[CORE_S2]++;
200429b6: c8 45        	clw	a0, 12(ca1)
200429b8: 05 05        	addi	a0, a0, 1
200429ba: c8 c5        	csw	a0, 12(ca1)
200429bc: 19 46        	addi	a2, zero, 6
200429be: 91 a8        	j	0x20042a12 <.LBB1_37>

200429c0 <.LBB1_28>:
; 	retval = ((c>='0') & (c<='9')) ? 1 : 0;
200429c0: 13 85 02 fd  	addi	a0, t0, -48
200429c4: 13 75 f5 0f  	andi	a0, a0, 255
200429c8: 11 46        	addi	a2, zero, 4
; 			else if(!ee_isdigit(NEXT_SYMBOL)) {
200429ca: 29 44        	addi	s0, zero, 10
200429cc: 63 63 85 04  	bltu	a0, s0, 0x20042a12 <.LBB1_37>
; 				transition_count[CORE_INT]++;
200429d0: 88 49        	clw	a0, 16(ca1)
200429d2: 05 05        	addi	a0, a0, 1
200429d4: 88 c9        	csw	a0, 16(ca1)
200429d6: 2d a0        	j	0x20042a00 <.LBB1_34>

200429d8 <.LBB1_30>:
; 				transition_count[CORE_S1]++;
200429d8: 88 45        	clw	a0, 8(ca1)
200429da: 05 05        	addi	a0, a0, 1
200429dc: 88 c5        	csw	a0, 8(ca1)
200429de: 11 46        	addi	a2, zero, 4
200429e0: 0d a8        	j	0x20042a12 <.LBB1_37>

200429e2 <.LBB1_31>:
; 	retval = ((c>='0') & (c<='9')) ? 1 : 0;
200429e2: 13 85 02 fd  	addi	a0, t0, -48
200429e6: 13 75 f5 0f  	andi	a0, a0, 255
200429ea: 15 46        	addi	a2, zero, 5
; 			else if(!ee_isdigit(NEXT_SYMBOL)) {
200429ec: 29 44        	addi	s0, zero, 10
200429ee: 63 62 85 02  	bltu	a0, s0, 0x20042a12 <.LBB1_37>
; 				transition_count[CORE_FLOAT]++;
200429f2: c8 49        	clw	a0, 20(ca1)
200429f4: 05 05        	addi	a0, a0, 1
200429f6: c8 c9        	csw	a0, 20(ca1)
200429f8: 21 a0        	j	0x20042a00 <.LBB1_34>

200429fa <.LBB1_33>:
; 				transition_count[CORE_S2]++;
200429fa: c8 45        	clw	a0, 12(ca1)
200429fc: 05 05        	addi	a0, a0, 1
200429fe: c8 c5        	csw	a0, 12(ca1)

20042a00 <.LBB1_34>:
20042a00: 05 46        	addi	a2, zero, 1
20042a02: 01 a8        	j	0x20042a12 <.LBB1_37>

20042a04 <.LBB1_35>:
; 				transition_count[CORE_INVALID]++;
20042a04: c8 41        	clw	a0, 4(ca1)
20042a06: 05 05        	addi	a0, a0, 1
20042a08: c8 c1        	csw	a0, 4(ca1)
20042a0a: 05 46        	addi	a2, zero, 1

20042a0c <.LBB1_36>:
; 			transition_count[CORE_START]++;
20042a0c: 88 41        	clw	a0, 0(ca1)
20042a0e: 05 05        	addi	a0, a0, 1
20042a10: 88 c1        	csw	a0, 0(ca1)

20042a12 <.LBB1_37>:
; 	for( ; *str && state != CORE_INVALID; str++ ) {
20042a12: db 96 16 00  	cincoffset	ca3, ca3, 1
20042a16: 7d b5        	j	0x200428c4 <.LBB1_1>

20042a18 <.LBB1_38>:
; 			str++;
20042a18: db 96 16 00  	cincoffset	ca3, ca3, 1

20042a1c <.LBB1_39>:
; 	*instr=str;
20042a1c: 02 65        	clc	ca0, 0(csp)
20042a1e: 14 e1        	csc	ca3, 0(ca0)
; 	return state;
20042a20: 32 85        	mv	a0, a2
20042a22: a2 64        	clc	cs1, 8(csp)
20042a24: 42 64        	clc	cs0, 16(csp)
20042a26: e2 60        	clc	cra, 24(csp)
20042a28: 05 61        	cincoffset	csp, csp, 32
20042a2a: 82 80        	cret

20042a2c <core_init_state(unsigned int, short, unsigned char*)>:
; void core_init_state(ee_u32 size, ee_s16 seed, ee_u8 *p) {
20042a2c: 5d 71        	cincoffset	csp, csp, -80
20042a2e: 86 e4        	csc	cra, 72(csp)
20042a30: a2 e0        	csc	cs0, 64(csp)
20042a32: 26 fc        	csc	cs1, 56(csp)
20042a34: 81 46        	mv	a3, zero
20042a36: 01 43        	mv	t1, zero
20042a38: 5b 04 a0 fe  	cmove	cs0, cnull
20042a3c: 2a c6        	csw	a0, 12(csp)
; 	size--;
20042a3e: 93 03 f5 ff  	addi	t2, a0, -1
20042a42: c1 67        	lui	a5, 16
20042a44: 13 85 f7 ff  	addi	a0, a5, -1
20042a48: 2a da        	csw	a0, 52(csp)

20042a4a <.LBB2_19>:
20042a4a: 17 15 00 00  	auipcc	ca0, 1
20042a4e: 5b 15 e5 13  	cincoffset	ca0, ca0, 318
20042a52: 5b 25 05 02  	csetbounds	ca0, ca0, 32
20042a56: 2a f4        	csc	ca0, 40(csp)
20042a58: 89 47        	addi	a5, zero, 2

20042a5a <.LBB2_20>:
20042a5a: 17 15 00 00  	auipcc	ca0, 1
20042a5e: 5b 15 e5 14  	cincoffset	ca0, ca0, 334
20042a62: 5b 25 05 02  	csetbounds	ca0, ca0, 32
20042a66: 2a f0        	csc	ca0, 32(csp)

20042a68 <.LBB2_21>:
20042a68: 17 15 00 00  	auipcc	ca0, 1
20042a6c: 5b 15 05 16  	cincoffset	ca0, ca0, 352
20042a70: 5b 25 05 02  	csetbounds	ca0, ca0, 32
20042a74: 2a ec        	csc	ca0, 24(csp)

20042a76 <.LBB2_22>:
20042a76: 17 15 00 00  	auipcc	ca0, 1
20042a7a: 5b 15 25 17  	cincoffset	ca0, ca0, 370
20042a7e: 5b 25 05 02  	csetbounds	ca0, ca0, 32
20042a82: 2a e8        	csc	ca0, 16(csp)

20042a84 <.LBB2_1>:
; 	while ((total+next+1)<size) {
20042a84: b3 84 66 00  	add	s1, a3, t1
20042a88: 85 04        	addi	s1, s1, 1
20042a8a: 63 fc 74 06  	bgeu	s1, t2, 0x20042b02 <.LBB2_14>
; 		if (next>0) {
20042a8e: 63 0c 03 02  	beqz	t1, 0x20042ac6 <.LBB2_6>
20042a92: 81 40        	mv	ra, zero
; 			for(i=0;i<next;i++)
20042a94: 63 0f 13 00  	beq	t1, ra, 0x20042ab2 <.LBB2_5>

20042a98 <.LBB2_4>:
; 				*(p+total+i)=buf[i];
20042a98: db 02 14 22  	cincoffset	ct0, cs0, ra
20042a9c: 83 87 02 00  	clb	a5, 0(ct0)
20042aa0: 33 87 16 00  	add	a4, a3, ra
20042aa4: 5b 07 e6 22  	cincoffset	ca4, ca2, a4
20042aa8: 23 00 f7 00  	csb	a5, 0(ca4)
; 			for(i=0;i<next;i++)
20042aac: 85 00        	addi	ra, ra, 1
20042aae: e3 15 13 fe  	bne	t1, ra, 0x20042a98 <.LBB2_4>

20042ab2 <.LBB2_5>:
; 			*(p+total+i)=',';
20042ab2: 33 05 d3 00  	add	a0, t1, a3
20042ab6: 5b 05 a6 22  	cincoffset	ca0, ca2, a0
20042aba: 93 06 c0 02  	addi	a3, zero, 44
20042abe: 23 00 d5 00  	csb	a3, 0(ca0)
20042ac2: a6 86        	mv	a3, s1
20042ac4: 89 47        	addi	a5, zero, 2

20042ac6 <.LBB2_6>:
; 		seed++;
20042ac6: 85 05        	addi	a1, a1, 1
; 		switch (seed & 0x7) {
20042ac8: 13 f5 75 00  	andi	a0, a1, 7
20042acc: 0d 47        	addi	a4, zero, 3
20042ace: 63 6c e5 00  	bltu	a0, a4, 0x20042ae6 <.LBB2_10>
20042ad2: 21 43        	addi	t1, zero, 8
; 		switch (seed & 0x7) {
20042ad4: 13 07 d5 ff  	addi	a4, a0, -3
20042ad8: 63 6a f7 00  	bltu	a4, a5, 0x20042aec <.LBB2_11>
20042adc: 6d 15        	addi	a0, a0, -5
20042ade: 63 79 f5 00  	bgeu	a0, a5, 0x20042af0 <.LBB2_12>
20042ae2: 62 64        	clc	cs0, 24(csp)
20042ae4: 39 a0        	j	0x20042af2 <.LBB2_13>

20042ae6 <.LBB2_10>:
20042ae6: 11 43        	addi	t1, zero, 4
20042ae8: 22 74        	clc	cs0, 40(csp)
20042aea: 21 a0        	j	0x20042af2 <.LBB2_13>

20042aec <.LBB2_11>:
20042aec: 02 74        	clc	cs0, 32(csp)
20042aee: 11 a0        	j	0x20042af2 <.LBB2_13>

20042af0 <.LBB2_12>:
20042af0: 42 64        	clc	cs0, 16(csp)

20042af2 <.LBB2_13>:
20042af2: 52 55        	clw	a0, 52(csp)
20042af4: 33 f7 a5 00  	and	a4, a1, a0
20042af8: 61 8b        	andi	a4, a4, 24
20042afa: 5b 07 e4 22  	cincoffset	ca4, cs0, a4
20042afe: 00 63        	clc	cs0, 0(ca4)
20042b00: 51 b7        	j	0x20042a84 <.LBB2_1>

20042b02 <.LBB2_14>:
20042b02: 36 85        	mv	a0, a3
20042b04: b2 45        	clw	a1, 12(csp)
; 	while (total<size) { /* fill the rest with 0 */
20042b06: 63 e9 d5 00  	bltu	a1, a3, 0x20042b18 <.LBB2_17>
20042b0a: 2e 85        	mv	a0, a1
20042b0c: 31 a0        	j	0x20042b18 <.LBB2_17>

20042b0e <.LBB2_16>:
; 		*(p+total)=0;
20042b0e: db 05 d6 22  	cincoffset	ca1, ca2, a3
20042b12: 23 80 05 00  	csb	zero, 0(ca1)
; 		total++;
20042b16: 85 06        	addi	a3, a3, 1

20042b18 <.LBB2_17>:
20042b18: e3 1b d5 fe  	bne	a0, a3, 0x20042b0e <.LBB2_16>
; }
20042b1c: e2 74        	clc	cs1, 56(csp)
20042b1e: 06 64        	clc	cs0, 64(csp)
20042b20: a6 60        	clc	cra, 72(csp)
20042b22: 61 61        	cincoffset	csp, csp, 80
20042b24: 82 80        	cret
20042b26: 00 00        	unimp	

20042b28 <get_seed_32(int)>:
; ee_s32 get_seed_32(int i) {
20042b28: 8d 45        	addi	a1, zero, 3
20042b2a: 13 06 60 06  	addi	a2, zero, 102
; 	switch (i) {
20042b2e: 63 03 b5 00  	beq	a0, a1, 0x20042b34 <.LBB0_2>
20042b32: 01 46        	mv	a2, zero

20042b34 <.LBB0_2>:
20042b34: 91 46        	addi	a3, zero, 4
20042b36: 85 45        	addi	a1, zero, 1
; 	switch (i) {
20042b38: 63 03 d5 00  	beq	a0, a3, 0x20042b3e <.LBB0_4>
20042b3c: b2 85        	mv	a1, a2

20042b3e <.LBB0_4>:
; 	return retval;
20042b3e: 2e 85        	mv	a0, a1
20042b40: 82 80        	cret

20042b42 <crcu8(unsigned char, unsigned short)>:
; {
20042b42: 01 46        	mv	a2, zero
20042b44: 9d 46        	addi	a3, zero, 7
20042b46: 69 77        	lui	a4, 1048570
20042b48: 05 07        	addi	a4, a4, 1

20042b4a <.LBB1_1>:
; 	for (i = 0; i < 8; i++)
20042b4a: 93 77 f6 0f  	andi	a5, a2, 255
20042b4e: 63 ee f6 00  	bltu	a3, a5, 0x20042b6a <.LBB1_5>
; 		x16 = (ee_u8)((data & 1) ^ ((ee_u8)crc & 1));
20042b52: b3 47 b5 00  	xor	a5, a0, a1
20042b56: 85 8b        	andi	a5, a5, 1
; 		crc >>= 1;
20042b58: c2 05        	slli	a1, a1, 16
20042b5a: c5 81        	srli	a1, a1, 17
; 		if (carry)
20042b5c: 91 c3        	beqz	a5, 0x20042b60 <.LBB1_4>
20042b5e: b9 8d        	xor	a1, a1, a4

20042b60 <.LBB1_4>:
20042b60: 13 75 e5 0f  	andi	a0, a0, 254
20042b64: 05 81        	srli	a0, a0, 1
; 	for (i = 0; i < 8; i++)
20042b66: 05 06        	addi	a2, a2, 1
20042b68: cd b7        	j	0x20042b4a <.LBB1_1>

20042b6a <.LBB1_5>:
20042b6a: 41 65        	lui	a0, 16
20042b6c: 7d 15        	addi	a0, a0, -1
; 	return crc;
20042b6e: 6d 8d        	and	a0, a0, a1
20042b70: 82 80        	cret

20042b72 <crcu16(unsigned short, unsigned short)>:
; ee_u16 crcu16(ee_u16 newval, ee_u16 crc) {
20042b72: 7d 71        	cincoffset	csp, csp, -16
20042b74: 06 e4        	csc	cra, 8(csp)
20042b76: 22 e0        	csc	cs0, 0(csp)
20042b78: 2a 84        	mv	s0, a0
; 	crc=crcu8( (ee_u8) (newval)				,crc);
20042b7a: 13 75 f5 0f  	andi	a0, a0, 255
20042b7e: d1 37        	cjal	0x20042b42 <crcu8(unsigned char, unsigned short)>
; 	crc=crcu8( (ee_u8) ((newval)>>8)	,crc);
20042b80: 93 55 84 00  	srli	a1, s0, 8
; 	crc=crcu8( (ee_u8) (newval)				,crc);
20042b84: 2a 86        	mv	a2, a0
; 	crc=crcu8( (ee_u8) ((newval)>>8)	,crc);
20042b86: 2e 85        	mv	a0, a1
20042b88: b2 85        	mv	a1, a2
20042b8a: 02 64        	clc	cs0, 0(csp)
20042b8c: a2 60        	clc	cra, 8(csp)
20042b8e: 41 61        	cincoffset	csp, csp, 16
20042b90: 4d bf        	j	0x20042b42 <crcu8(unsigned char, unsigned short)>

20042b92 <crcu32(unsigned int, unsigned short)>:
; ee_u16 crcu32(ee_u32 newval, ee_u16 crc) {
20042b92: 7d 71        	cincoffset	csp, csp, -16
20042b94: 06 e4        	csc	cra, 8(csp)
20042b96: 22 e0        	csc	cs0, 0(csp)
20042b98: 2a 84        	mv	s0, a0
20042b9a: 41 65        	lui	a0, 16
20042b9c: 7d 15        	addi	a0, a0, -1
; 	return crcu16((ee_u16)newval, crc);
20042b9e: 61 8d        	and	a0, a0, s0
20042ba0: c9 3f        	cjal	0x20042b72 <crcu16(unsigned short, unsigned short)>
; 	crc=crc16((ee_s16) (newval>>16)	,crc);
20042ba2: 93 55 04 01  	srli	a1, s0, 16
; 	return crcu16((ee_u16)newval, crc);
20042ba6: 2a 86        	mv	a2, a0
20042ba8: 2e 85        	mv	a0, a1
20042baa: b2 85        	mv	a1, a2
20042bac: 02 64        	clc	cs0, 0(csp)
20042bae: a2 60        	clc	cra, 8(csp)
20042bb0: 41 61        	cincoffset	csp, csp, 16
20042bb2: c1 b7        	j	0x20042b72 <crcu16(unsigned short, unsigned short)>

20042bb4 <crc16(short, unsigned short)>:
; ee_u16 crc16(ee_s16 newval, ee_u16 crc) {
20042bb4: 41 66        	lui	a2, 16
20042bb6: 7d 16        	addi	a2, a2, -1
; 	return crcu16((ee_u16)newval, crc);
20042bb8: 71 8d        	and	a0, a0, a2
20042bba: 65 bf        	j	0x20042b72 <crcu16(unsigned short, unsigned short)>

20042bbc <check_data_types()>:
; 	return retval;
20042bbc: 01 45        	mv	a0, zero
20042bbe: 82 80        	cret

20042bc0 <barebones_clock()>:
; CORETIMETYPE barebones_clock() {
20042bc0: 7d 71        	cincoffset	csp, csp, -16
20042bc2: 06 e4        	csc	cra, 8(csp)
20042bc4: 37 05 00 8f  	lui	a0, 585728
20042bc8: 13 05 45 61  	addi	a0, a0, 1556
;   uint32_t *sclkptr = (uint32_t*)GET_PTR_t((MSFTDVIP_INTC_ADDR+0x14), 0x100);
20042bcc: 93 05 00 10  	addi	a1, zero, 256
20042bd0: ef d0 1f a0  	cjal	0x200405d0 <get_ptr(unsigned long, unsigned int)>
;   clocks = *sclkptr;
20042bd4: 08 41        	clw	a0, 0(ca0)
;   return (clocks);
20042bd6: a2 60        	clc	cra, 8(csp)
20042bd8: 41 61        	cincoffset	csp, csp, 16
20042bda: 82 80        	cret

20042bdc <start_time()>:
; void start_time(void) {
20042bdc: 7d 71        	cincoffset	csp, csp, -16
; 	GETMYTIME(&start_time_val );      
20042bde: 06 e4        	csc	cra, 8(csp)
20042be0: c5 37        	cjal	0x20042bc0 <barebones_clock()>
20042be2: db 95 c1 50  	cincoffset	ca1, cgp, 1292
20042be6: db a5 45 00  	csetbounds	ca1, ca1, 4
20042bea: 88 c1        	csw	a0, 0(ca1)
; }
20042bec: a2 60        	clc	cra, 8(csp)
20042bee: 41 61        	cincoffset	csp, csp, 16
20042bf0: 82 80        	cret

20042bf2 <stop_time()>:
; void stop_time(void) {
20042bf2: 7d 71        	cincoffset	csp, csp, -16
; 	GETMYTIME(&stop_time_val );      
20042bf4: 06 e4        	csc	cra, 8(csp)
20042bf6: e9 37        	cjal	0x20042bc0 <barebones_clock()>
20042bf8: db 95 01 51  	cincoffset	ca1, cgp, 1296
20042bfc: db a5 45 00  	csetbounds	ca1, ca1, 4
20042c00: 88 c1        	csw	a0, 0(ca1)
; }
20042c02: a2 60        	clc	cra, 8(csp)
20042c04: 41 61        	cincoffset	csp, csp, 16
20042c06: 82 80        	cret

20042c08 <get_time()>:
; 	CORE_TICKS elapsed=(CORE_TICKS)(MYTIMEDIFF(stop_time_val, start_time_val));
20042c08: 5b 95 01 51  	cincoffset	ca0, cgp, 1296
20042c0c: 5b 25 45 00  	csetbounds	ca0, ca0, 4
20042c10: 08 41        	clw	a0, 0(ca0)
20042c12: db 95 c1 50  	cincoffset	ca1, cgp, 1292
20042c16: db a5 45 00  	csetbounds	ca1, ca1, 4
20042c1a: 8c 41        	clw	a1, 0(ca1)
20042c1c: 0d 8d        	sub	a0, a0, a1
; 	return elapsed;
20042c1e: 82 80        	cret

20042c20 <time_in_secs(unsigned int)>:
; secs_ret time_in_secs(CORE_TICKS ticks) {
20042c20: b7 35 31 01  	lui	a1, 4883
20042c24: 93 85 05 d0  	addi	a1, a1, -768
; 	secs_ret retval=((secs_ret)ticks) / (secs_ret)EE_TICKS_PER_SEC;
20042c28: 33 55 b5 02  	divu	a0, a0, a1
; 	return retval;
20042c2c: 82 80        	cret

20042c2e <portable_init(CORE_PORTABLE_S*, int*, char**)>:
; {
20042c2e: 85 45        	addi	a1, zero, 1
; 	p->portable_id=1;
20042c30: 23 00 b5 00  	csb	a1, 0(ca0)
; }
20042c34: 82 80        	cret

20042c36 <portable_fini(CORE_PORTABLE_S*)>:
; 	p->portable_id=0;
20042c36: 23 00 05 00  	csb	zero, 0(ca0)
; }
20042c3a: 82 80        	cret

20042c3c <getLock(unsigned long*)>:
;     return;
20042c3c: 82 80        	cret

20042c3e <releaseLock(unsigned long*)>:
;     return;
20042c3e: 82 80        	cret

20042c40 <_flush(int)>:
; MY_EXTERN_C void _flush(int fd) {
20042c40: 5b 95 81 51  	cincoffset	ca0, cgp, 1304
20042c44: 5b 25 85 00  	csetbounds	ca0, ca0, 8
20042c48: 08 61        	clc	ca0, 0(ca0)

20042c4a <.LBB2_1>:
;     while ((UartBasePtr->LSR.THRE == 0) || (UartBasePtr->LSR.TEMT == 0)){
20042c4a: 4c 49        	clw	a1, 20(ca0)
20042c4c: 93 f5 05 02  	andi	a1, a1, 32
20042c50: ed dd        	beqz	a1, 0x20042c4a <.LBB2_1>
20042c52: 4c 49        	clw	a1, 20(ca0)
20042c54: 93 f5 05 04  	andi	a1, a1, 64
20042c58: ed d9        	beqz	a1, 0x20042c4a <.LBB2_1>
; }
20042c5a: 82 80        	cret

20042c5c <_write(int, char const*, int)>:
; MY_EXTERN_C int _write(int fd, const char* data, int size) {
20042c5c: 32 85        	mv	a0, a2
20042c5e: db 96 81 51  	cincoffset	ca3, cgp, 1304
20042c62: db a6 86 00  	csetbounds	ca3, ca3, 8
;     for(int i = 0; i<size; i++) {
20042c66: 63 43 c0 00  	bgtz	a2, 0x20042c6c <.LBB3_2>
20042c6a: 01 46        	mv	a2, zero

20042c6c <.LBB3_2>:
20042c6c: 94 62        	clc	ca3, 0(ca3)
20042c6e: 01 47        	mv	a4, zero
;     for(int i = 0; i<size; i++) {
20042c70: 63 0e c7 00  	beq	a4, a2, 0x20042c8c <.LBB3_5>

20042c74 <.LBB3_3>:
;         while (UartBasePtr->LSR.THRE == 0){
20042c74: dc 4a        	clw	a5, 20(ca3)
20042c76: 93 f7 07 02  	andi	a5, a5, 32
20042c7a: ed df        	beqz	a5, 0x20042c74 <.LBB3_3>
; 	    UartBasePtr->THR = data[i];
20042c7c: db 87 e5 22  	cincoffset	ca5, ca1, a4
20042c80: 83 c7 07 00  	clbu	a5, 0(ca5)
20042c84: 9c c2        	csw	a5, 0(ca3)
;     for(int i = 0; i<size; i++) {
20042c86: 05 07        	addi	a4, a4, 1
20042c88: e3 16 c7 fe  	bne	a4, a2, 0x20042c74 <.LBB3_3>

20042c8c <.LBB3_5>:
;     return size;
20042c8c: 82 80        	cret

20042c8e <_read(int, char*, int)>:
; MY_EXTERN_C int _read(int fd, char* data, int size) {
20042c8e: 32 85        	mv	a0, a2
20042c90: 5b 96 81 51  	cincoffset	ca2, cgp, 1304
20042c94: 5b 26 86 00  	csetbounds	ca2, ca2, 8
;     for(cnt=0;cnt<size;cnt++) {
20042c98: 63 43 a0 00  	bgtz	a0, 0x20042c9e <.LBB4_2>
20042c9c: 01 45        	mv	a0, zero

20042c9e <.LBB4_2>:
20042c9e: 10 62        	clc	ca2, 0(ca2)
20042ca0: 81 46        	mv	a3, zero
;     for(cnt=0;cnt<size;cnt++) {
20042ca2: 63 8d a6 00  	beq	a3, a0, 0x20042cbc <.LBB4_5>

20042ca6 <.LBB4_3>:
;         while(!(UartBasePtr->LSR.DR)) { continue; }
20042ca6: 58 4a        	clw	a4, 20(ca2)
20042ca8: 05 8b        	andi	a4, a4, 1
20042caa: 75 df        	beqz	a4, 0x20042ca6 <.LBB4_3>
;         data[cnt] = (char)UartBasePtr->RBR;
20042cac: 18 42        	clw	a4, 0(ca2)
20042cae: db 87 d5 22  	cincoffset	ca5, ca1, a3
20042cb2: 23 80 e7 00  	csb	a4, 0(ca5)
;     for(cnt=0;cnt<size;cnt++) {
20042cb6: 85 06        	addi	a3, a3, 1
20042cb8: e3 97 a6 fe  	bne	a3, a0, 0x20042ca6 <.LBB4_3>

20042cbc <.LBB4_5>:
;     return cnt;
20042cbc: 82 80        	cret

20042cbe <uart_init(void*, unsigned long, unsigned long, unsigned long, unsigned long, unsigned long)>:
; ) {
20042cbe: 3d 71        	cincoffset	csp, csp, -32
;     UartBasePtr = (PMSFT_UART_16550_t)addr;
20042cc0: 06 ec        	csc	cra, 24(csp)
20042cc2: db 92 81 51  	cincoffset	ct0, cgp, 1304
20042cc6: db a2 82 00  	csetbounds	ct0, ct0, 8
20042cca: 23 b0 a2 00  	csc	ca0, 0(ct0)

20042cce <.LBB5_1>:
;     while (UartBasePtr->LSR.TEMT != 1 || UartBasePtr->LSR.THRE != 1);
20042cce: 83 22 45 01  	clw	t0, 20(ca0)
20042cd2: 93 f2 02 04  	andi	t0, t0, 64
20042cd6: e3 8c 02 fe  	beqz	t0, 0x20042cce <.LBB5_1>
20042cda: 83 22 45 01  	clw	t0, 20(ca0)
20042cde: 93 f2 02 02  	andi	t0, t0, 32
20042ce2: e3 86 02 fe  	beqz	t0, 0x20042cce <.LBB5_1>
;     lcr.AsUINT32 = 0;
20042ce6: 02 ca        	csw	zero, 20(csp)
;     lcr.DLAB = 1;
20042ce8: d2 42        	clw	t0, 20(csp)
20042cea: 93 e2 02 08  	ori	t0, t0, 128
20042cee: 16 ca        	csw	t0, 20(csp)
;     lcr.STOP = stop;
20042cf0: d2 42        	clw	t0, 20(csp)
20042cf2: 8a 07        	slli	a5, a5, 2
20042cf4: 13 f3 47 00  	andi	t1, a5, 4
20042cf8: 93 f7 b2 ff  	andi	a5, t0, -5
20042cfc: b3 e7 67 00  	or	a5, a5, t1
20042d00: 3e ca        	csw	a5, 20(csp)
;     lcr.PEN = parity;
20042d02: d2 47        	clw	a5, 20(csp)
20042d04: 0e 07        	slli	a4, a4, 3
20042d06: 21 8b        	andi	a4, a4, 8
20042d08: dd 9b        	andi	a5, a5, -9
20042d0a: 5d 8f        	or	a4, a4, a5
20042d0c: 3a ca        	csw	a4, 20(csp)
;     lcr.DLS = word_size;
20042d0e: 52 47        	clw	a4, 20(csp)
20042d10: 8d 8a        	andi	a3, a3, 3
20042d12: 71 9b        	andi	a4, a4, -4
20042d14: d9 8e        	or	a3, a3, a4
20042d16: 36 ca        	csw	a3, 20(csp)
;     UartBasePtr->LCR.AsUINT32 = lcr.AsUINT32;
20042d18: d2 46        	clw	a3, 20(csp)
20042d1a: 54 c5        	csw	a3, 12(ca0)
;     baudxdiv = 16*baudrate;
20042d1c: 12 06        	slli	a2, a2, 4
;     br_int = xtal_freq/(16*baudrate);
20042d1e: b3 d6 c5 02  	divu	a3, a1, a2
20042d22: 33 87 c6 02  	mul	a4, a3, a2
20042d26: 99 8d        	sub	a1, a1, a4
;     rem = ((xtal_freq % baudxdiv) <<(FRAC_BRG_BITS+1))/baudxdiv;
20042d28: 96 05        	slli	a1, a1, 5
20042d2a: b3 d5 c5 02  	divu	a1, a1, a2
;     rem = (rem>>1) + (rem&0x1);
20042d2e: 13 d6 15 00  	srli	a2, a1, 1
20042d32: 85 89        	andi	a1, a1, 1
20042d34: b2 95        	add	a1, a1, a2
;     UartBasePtr->DLF = rem;
20042d36: 4c d1        	csw	a1, 36(ca0)
;     UartBasePtr->DLL = (br_int>>0)&0xff;
20042d38: 93 f5 f6 0f  	andi	a1, a3, 255
20042d3c: 0c c1        	csw	a1, 0(ca0)
;     UartBasePtr->DLH = (br_int>>8)&0xff;
20042d3e: 93 d5 86 00  	srli	a1, a3, 8
20042d42: 93 f5 f5 0f  	andi	a1, a1, 255
20042d46: 4c c1        	csw	a1, 4(ca0)
;     lcr.DLAB = 0;
20042d48: d2 45        	clw	a1, 20(csp)
20042d4a: 93 f5 f5 f7  	andi	a1, a1, -129
20042d4e: 2e ca        	csw	a1, 20(csp)
;     UartBasePtr->LCR.AsUINT32 = lcr.AsUINT32;
20042d50: d2 45        	clw	a1, 20(csp)
20042d52: 4c c5        	csw	a1, 12(ca0)
;     fcr.AsUINT32 = 0;
20042d54: 02 c8        	csw	zero, 16(csp)
;     fcr.FIFOE = 1;
20042d56: c2 45        	clw	a1, 16(csp)
20042d58: 93 e5 15 00  	ori	a1, a1, 1
20042d5c: 2e c8        	csw	a1, 16(csp)
;     UartBasePtr->FCR.AsUINT32 = fcr.AsUINT32;
20042d5e: c2 45        	clw	a1, 16(csp)
20042d60: 0c c5        	csw	a1, 8(ca0)
20042d62: 13 05 00 02  	addi	a0, zero, 32
;     const char space = ' ';
20042d66: a3 07 a1 00  	csb	a0, 15(csp)
20042d6a: 5b 15 f1 00  	cincoffset	ca0, csp, 15
20042d6e: db 25 15 00  	csetbounds	ca1, ca0, 1
;     _write(1,&space,1);
20042d72: 05 46        	addi	a2, zero, 1
20042d74: e5 35        	cjal	0x20042c5c <_write(int, char const*, int)>
; }
20042d76: e2 60        	clc	cra, 24(csp)
20042d78: 05 61        	cincoffset	csp, csp, 32
20042d7a: 82 80        	cret

20042d7c <_rodata_start>:
20042d7c: 33 34 2e 30  	<unknown>
20042d80: 65 2d        	cjal	0x20043438 <_pcc_end+0x18>
20042d82: 54 5e        	clw	a3, 60(ca2)
20042d84: 00 2d        	<unknown>
20042d86: 38 37        	<unknown>
20042d88: 34 00        	cincoffset	ca3, csp, 8
20042d8a: 2e 31        	<unknown>
20042d8c: 32 33        	<unknown>
20042d8e: 34 35        	<unknown>
20042d90: 30 30        	<unknown>
20042d92: 00 35        	<unknown>
20042d94: 2e 35        	<unknown>
20042d96: 30 30        	<unknown>
20042d98: 65 2b        	cjal	0x20043350 <HexTable+0x4c7>
20042d9a: 33 00 2d 2e  	<unknown>
20042d9e: 31 32        	cjal	0x200426aa <.LBB8_4+0x8>
20042da0: 33 65 2d 32  	<unknown>
20042da4: 00 2b        	<unknown>
20042da6: 30 2e        	<unknown>
20042da8: 36 65        	clc	ca0, 328(csp)
20042daa: 2d 31        	cjal	0x200429d4 <.LBB1_28+0x14>
20042dac: 32 00        	c.slli	zero, 12
20042dae: 45 72        	lui	tp, 1048561
20042db0: 72 6f        	<unknown>
20042db2: 72 2e        	<unknown>
20042db4: 2e 2e        	<unknown>
20042db6: 55 6e        	<unknown>
20042db8: 68 61        	clc	ca0, 192(ca0)
20042dba: 6e 64        	clc	cs0, 216(csp)
20042dbc: 6c 65        	clc	ca1, 200(ca0)
20042dbe: 64 20        	<unknown>
20042dc0: 45 78        	<unknown>
20042dc2: 63 65 70 74  	bltu	zero, t2, 0x2004350c <_pcc_end+0xec>
20042dc6: 69 6f        	<unknown>
20042dc8: 6e 28        	<unknown>
20042dca: 25 64        	lui	s0, 9
20042dcc: 29 2e        	cjal	0x200430e6 <HexTable+0x25d>
20042dce: 20 45        	clw	s0, 72(ca0)
20042dd0: 78 69        	clc	ca4, 208(ca0)
20042dd2: 74 69        	clc	ca3, 208(ca0)
20042dd4: 6e 67        	clc	ca4, 216(csp)
20042dd6: 20 74        	clc	cs0, 104(cs0)
20042dd8: 65 73        	lui	t1, 1048569
20042dda: 74 0a        	cincoffset	ca3, csp, 284
20042ddc: 00 54        	clw	s0, 40(cs0)
20042dde: 30 2e        	<unknown>
20042de0: 33 65 2d 31  	<unknown>
20042de4: 46 00        	c.slli	zero, 17
20042de6: 2b 31 32 32  	<unknown>
20042dea: 00 35        	<unknown>
20042dec: 30 31        	<unknown>
20042dee: 32 00        	c.slli	zero, 12
20042df0: 33 35 2e 35  	<unknown>
20042df4: 34 34        	<unknown>
20042df6: 30 30        	<unknown>
20042df8: 00 3d        	<unknown>
20042dfa: 3d 3d        	cjal	0x20042c38 <portable_fini(CORE_PORTABLE_S*)+0x2>
20042dfc: 3d 3d        	cjal	0x20042c3a <portable_fini(CORE_PORTABLE_S*)+0x4>
20042dfe: 3d 3d        	cjal	0x20042c3c <getLock(unsigned long*)>
20042e00: 3d 3d        	cjal	0x20042c3e <releaseLock(unsigned long*)>
20042e02: 3d 3d        	cjal	0x20042c40 <_flush(int)>
20042e04: 3d 3d        	cjal	0x20042c42 <_flush(int)+0x2>
20042e06: 3d 3d        	cjal	0x20042c44 <_flush(int)+0x4>
20042e08: 3d 3d        	cjal	0x20042c46 <_flush(int)+0x6>
20042e0a: 3d 3d        	cjal	0x20042c48 <_flush(int)+0x8>
20042e0c: 3d 3d        	cjal	0x20042c4a <.LBB2_1>
20042e0e: 3d 3d        	cjal	0x20042c4c <.LBB2_1+0x2>
20042e10: 3d 3d        	cjal	0x20042c4e <.LBB2_1+0x4>
20042e12: 3d 3d        	cjal	0x20042c50 <.LBB2_1+0x6>
20042e14: 3d 3d        	cjal	0x20042c52 <.LBB2_1+0x8>
20042e16: 3d 3d        	cjal	0x20042c54 <.LBB2_1+0xa>
20042e18: 3d 3d        	cjal	0x20042c56 <.LBB2_1+0xc>
20042e1a: 3d 3d        	cjal	0x20042c58 <.LBB2_1+0xe>
20042e1c: 3d 3d        	cjal	0x20042c5a <.LBB2_1+0x10>
20042e1e: 3d 3d        	cjal	0x20042c5c <_write(int, char const*, int)>
20042e20: 3d 3d        	cjal	0x20042c5e <_write(int, char const*, int)+0x2>
20042e22: 3d 3d        	cjal	0x20042c60 <_write(int, char const*, int)+0x4>
20042e24: 3d 3d        	cjal	0x20042c62 <_write(int, char const*, int)+0x6>
20042e26: 3d 3d        	cjal	0x20042c64 <_write(int, char const*, int)+0x8>
20042e28: 3d 3d        	cjal	0x20042c66 <_write(int, char const*, int)+0xa>
20042e2a: 3d 3d        	cjal	0x20042c68 <_write(int, char const*, int)+0xc>
20042e2c: 0a 00        	c.slli	zero, 2
20042e2e: 25 73        	lui	t1, 1048553
20042e30: 20 77        	clc	cs0, 104(ca4)
20042e32: 6f 72 64 20  	cjal	ctp, 0x2008a038 <_pcc_end+0x46c18>
20042e36: 25 64        	lui	s0, 9
20042e38: 20 69        	clc	cs0, 80(ca0)
20042e3a: 73 20 30 78  	csrr	zero, 1923
20042e3e: 25 30        	cjal	0x20042666 <.LBB7_6>
20042e40: 38 78        	clc	ca4, 112(cs0)
20042e42: 0a 00        	c.slli	zero, 2
20042e44: 31 32        	cjal	0x20042750 <.LBB8_9+0x24>
20042e46: 33 34 00 2d  	<unknown>
20042e4a: 38 37        	<unknown>
20042e4c: 65 2b        	cjal	0x20043404 <errpat+0x1c>
20042e4e: 38 33        	<unknown>
20042e50: 32 00        	c.slli	zero, 12
20042e52: 2b 30 2e 36  	<unknown>
20042e56: 34 34        	<unknown>
20042e58: 30 30        	<unknown>
20042e5a: 00 2d        	<unknown>
20042e5c: 31 31        	cjal	0x20042a68 <.LBB2_21>
20042e5e: 30 2e        	<unknown>
20042e60: 37 30 30 00  	lui	zero, 771
20042e64: 2d 54        	addi	s0, zero, -21
20042e66: 2e 54        	clw	s0, 232(csp)
20042e68: 2b 2b 54 71  	<unknown>
20042e6c: 00 20        	<unknown>
20042e6e: 53 74 61 72  	<unknown>
20042e72: 74 69        	clc	ca3, 208(ca0)
20042e74: 6e 67        	clc	ca4, 216(csp)
20042e76: 20 54        	clw	s0, 104(cs0)
20042e78: 65 73        	lui	t1, 1048569
20042e7a: 74 20        	<unknown>
20042e7c: 25 73        	lui	t1, 1048553
20042e7e: 0a 00        	c.slli	zero, 2
20042e80: 31 54        	addi	s0, zero, -20
20042e82: 33 2e 34 65  	<unknown>
20042e86: 34 7a        	clc	ca3, 112(ca2)
20042e88: 00 30        	<unknown>

20042e89 <HexTable>:
20042e89: 30 31 32 33 34 35 36 37         01234567
20042e91: 38 39 61 62 63 64 65 66         89abcdef
20042e99: 30 31 32 33 34 35 36 37         01234567
20042ea1: 38 39 41 42 43 44 45 46         89ABCDEF
20042ea9: 00 00 00 00 00 00 00 73         .......s
20042eb1: 74 61 72 74 69 6e 67 20         tarting 
20042eb9: 25 64 20 69 74 65 72 61         %d itera
20042ec1: 74 69 6f 6e 73 20 77 69         tions wi
20042ec9: 74 68 20 73 65 65 64 73         th seeds
20042ed1: 20 25 78 20 25 78 20 25          %x %x %
20042ed9: 78 0a 00 00 00 00 00 54         x......T
20042ee1: 6f 74 61 6c 20 74 69 63         otal tic
20042ee9: 6b 73 20 20 20 20 20 20         ks      
20042ef1: 3a 20 25 6c 75 0a 00 32         : %lu..2
20042ef9: 4b 20 70 65 72 66 6f 72         K perfor
20042f01: 6d 61 6e 63 65 20 72 75         mance ru
20042f09: 6e 20 70 61 72 61 6d 65         n parame
20042f11: 74 65 72 73 20 66 6f 72         ters for
20042f19: 20 63 6f 72 65 6d 61 72          coremar
20042f21: 6b 2e 0a 00 00 00 00 43         k......C
20042f29: 61 6e 6e 6f 74 20 76 61         annot va
20042f31: 6c 69 64 61 74 65 20 6f         lidate o
20042f39: 70 65 72 61 74 69 6f 6e         peration
20042f41: 20 66 6f 72 20 74 68 65          for the
20042f49: 73 65 20 73 65 65 64 20         se seed 
20042f51: 76 61 6c 75 65 73 2c 20         values, 
20042f59: 70 6c 65 61 73 65 20 63         please c
20042f61: 6f 6d 70 61 72 65 20 77         ompare w
20042f69: 69 74 68 20 72 65 73 75         ith resu
20042f71: 6c 74 73 20 6f 6e 20 61         lts on a
20042f79: 20 6b 6e 6f 77 6e 20 70          known p
20042f81: 6c 61 74 66 6f 72 6d 2e         latform.
20042f89: 0a 00 00 00 00 00 00 2d         .......-
20042f91: 2d 41 33 0a 00 00 00 53         -A3....S
20042f99: 74 61 74 69 63 00 00 53         tatic..S
20042fa1: 74 61 63 6b 00 00 00 6e         tack...n
20042fa9: 6f 6e 65 00 00 00 00 5b         one....[
20042fb1: 25 64 5d 63 72 63 6d 61         %d]crcma
20042fb9: 74 72 69 78 20 20 20 20         trix    
20042fc1: 20 3a 20 30 78 25 30 34          : 0x%04
20042fc9: 78 0a 00 00 00 00 00 5b         x......[
20042fd1: 25 75 5d 45 52 52 4f 52         %u]ERROR
20042fd9: 21 20 6d 61 74 72 69 78         ! matrix
20042fe1: 20 63 72 63 20 30 78 25          crc 0x%
20042fe9: 30 34 78 20 2d 20 73 68         04x - sh
20042ff1: 6f 75 6c 64 20 62 65 20         ould be 
20042ff9: 30 78 25 30 34 78 0a 00         0x%04x..
20043001: 00 00 00 00 00 00 00 50         .......P
20043009: 72 6f 66 69 6c 65 20 67         rofile g
20043011: 65 6e 65 72 61 74 69 6f         eneratio
20043019: 6e 20 72 75 6e 20 70 61         n run pa
20043021: 72 61 6d 65 74 65 72 73         rameters
20043029: 20 66 6f 72 20 63 6f 72          for cor
20043031: 65 6d 61 72 6b 2e 0a 00         emark...
20043039: 00 00 00 00 00 00 00 2d         .......-
20043041: 2d 41 34 0a 00 00 00 49         -A4....I
20043049: 74 65 72 61 74 69 6f 6e         teration
20043051: 73 20 20 20 20 20 20 20         s       
20043059: 3a 20 25 6c 75 0a 00 45         : %lu..E
20043061: 72 72 6f 72 73 20 64 65         rrors de
20043069: 74 65 63 74 65 64 0a 00         tected..
20043071: 00 00 00 00 00 00 00 73         .......s
20043079: 65 65 64 63 72 63 20 20         eedcrc  
20043081: 20 20 20 20 20 20 20 20                 
20043089: 3a 20 30 78 25 30 34 78         : 0x%04x
20043091: 0a 00 00 00 00 00 00 54         .......T
20043099: 6f 74 61 6c 20 74 69 6d         otal tim
200430a1: 65 20 28 73 65 63 73 29         e (secs)
200430a9: 3a 20 25 64 0a 00 00 43         : %d...C
200430b1: 6f 6d 70 69 6c 65 72 20         ompiler 
200430b9: 76 65 72 73 69 6f 6e 20         version 
200430c1: 3a 20 25 73 0a 00 00 43         : %s...C
200430c9: 6f 6d 70 69 6c 65 72 20         ompiler 
200430d1: 66 6c 61 67 73 20 20 20         flags   
200430d9: 3a 20 25 73 0a 00 00 43         : %s...C
200430e1: 6f 72 72 65 63 74 20 6f         orrect o
200430e9: 70 65 72 61 74 69 6f 6e         peration
200430f1: 20 76 61 6c 69 64 61 74          validat
200430f9: 65 64 2e 20 53 65 65 20         ed. See 
20043101: 52 45 41 44 4d 45 2e 6d         README.m
20043109: 64 20 66 6f 72 20 72 75         d for ru
20043111: 6e 20 61 6e 64 20 72 65         n and re
20043119: 70 6f 72 74 69 6e 67 20         porting 
20043121: 72 75 6c 65 73 2e 0a 00         rules...
20043129: 00 00 00 00 00 00 00 43         .......C
20043131: 6c 61 6e 67 20 31 33 2e         lang 13.
20043139: 30 2e 30 20 28 67 69 74         0.0 (git
20043141: 40 73 73 68 2e 64 65 76         @ssh.dev
20043149: 2e 61 7a 75 72 65 2e 63         .azure.c
20043151: 6f 6d 3a 76 33 2f 50 6f         om:v3/Po
20043159: 72 74 6d 65 69 72 69 6f         rtmeirio
20043161: 6e 2f 43 48 45 52 49 2d         n/CHERI-
20043169: 4d 43 55 2f 4c 4c 56 4d         MCU/LLVM
20043171: 20 35 30 61 61 63 38 31          50aac81
20043179: 39 36 37 65 36 30 32 65         967e602e
20043181: 63 37 30 37 39 61 34 30         c7079a40
20043189: 32 31 36 33 35 31 66 35         216351f5
20043191: 32 35 65 30 61 30 33 61         25e0a03a
20043199: 36 29 00 00 00 00 00 2d         6).....-
200431a1: 2d 41 32 0a 00 00 00 5b         -A2....[
200431a9: 25 75 5d 45 52 52 4f 52         %u]ERROR
200431b1: 21 20 73 74 61 74 65 20         ! state 
200431b9: 63 72 63 20 30 78 25 30         crc 0x%0
200431c1: 34 78 20 2d 20 73 68 6f         4x - sho
200431c9: 75 6c 64 20 62 65 20 30         uld be 0
200431d1: 78 25 30 34 78 0a 00 2d         x%04x..-
200431d9: 2d 41 30 0a 00 00 00 36         -A0....6
200431e1: 6b 20 70 65 72 66 6f 72         k perfor
200431e9: 6d 61 6e 63 65 20 72 75         mance ru
200431f1: 6e 20 70 61 72 61 6d 65         n parame
200431f9: 74 65 72 73 20 66 6f 72         ters for
20043201: 20 63 6f 72 65 6d 61 72          coremar
20043209: 6b 2e 0a 00 00 00 00 32         k......2
20043211: 4b 20 76 61 6c 69 64 61         K valida
20043219: 74 69 6f 6e 20 72 75 6e         tion run
20043221: 20 70 61 72 61 6d 65 74          paramet
20043229: 65 72 73 20 66 6f 72 20         ers for 
20043231: 63 6f 72 65 6d 61 72 6b         coremark
20043239: 2e 0a 00 00 00 00 00 5b         .......[
20043241: 25 64 5d 63 72 63 73 74         %d]crcst
20043249: 61 74 65 20 20 20 20 20         ate     
20043251: 20 3a 20 30 78 25 30 34          : 0x%04
20043259: 78 0a 00 00 00 00 00 5b         x......[
20043261: 25 64 5d 63 72 63 6c 69         %d]crcli
20043269: 73 74 20 20 20 20 20 20         st      
20043271: 20 3a 20 30 78 25 30 34          : 0x%04
20043279: 78 0a 00 00 00 00 00 5b         x......[
20043281: 25 64 5d 63 72 63 66 69         %d]crcfi
20043289: 6e 61 6c 20 20 20 20 20         nal     
20043291: 20 3a 20 30 78 25 30 34          : 0x%04
20043299: 78 0a 00 00 00 00 00 36         x......6
200432a1: 6b 20 76 61 6c 69 64 61         k valida
200432a9: 74 69 6f 6e 20 72 75 6e         tion run
200432b1: 20 70 61 72 61 6d 65 74          paramet
200432b9: 65 72 73 20 66 6f 72 20         ers for 
200432c1: 63 6f 72 65 6d 61 72 6b         coremark
200432c9: 2e 0a 00 00 00 00 00 00         ........
200432d1: 00 00 00 00 00 00 00 5b         .......[
200432d9: 25 75 5d 45 52 52 4f 52         %u]ERROR
200432e1: 21 20 6c 69 73 74 20 63         ! list c
200432e9: 72 63 20 30 78 25 30 34         rc 0x%04
200432f1: 78 20 2d 20 73 68 6f 75         x - shou
200432f9: 6c 64 20 62 65 20 30 78         ld be 0x
20043301: 25 30 34 78 0a 00 00 4d         %04x...M
20043309: 65 6d 6f 72 79 20 6c 6f         emory lo
20043311: 63 61 74 69 6f 6e 20 20         cation  
20043319: 3a 20 25 73 0a 00 00 53         : %s...S
20043321: 54 41 54 49 43 00 00 48         TATIC..H
20043329: 65 61 70 00 00 00 00 2d         eap....-
20043331: 2d 41 31 0a 00 00 00 43         -A1....C
20043339: 6f 72 65 4d 61 72 6b 20         oreMark 
20043341: 53 69 7a 65 20 20 20 20         Size    
20043349: 3a 20 25 6c 75 0a 00 49         : %lu..I
20043351: 74 65 72 61 74 69 6f 6e         teration
20043359: 73 2f 53 65 63 20 20 20         s/Sec   
20043361: 3a 20 25 64 0a 00 00            : %d...

20043368 <list_known_crc>:
20043368: b0 d4 40 33 79 6a 14 e7         ..@3yj..
20043370: c1 e3                           ..

20043372 <matrix_known_crc>:
20043372: 52 be 99 11 08 56 d7 1f         R....V..
2004337a: 47 07                           G.

2004337c <state_known_crc>:
2004337c: 47 5e bf 39 a4 e5 3a 8e         G^.9..:.
20043384: 84 8d 00 00                     ....

20043388 <intpat>:
20043388: ca ca ca ca ca ca ca ca         ........
20043390: ca ca ca ca ca ca ca ca         ........
20043398: ca ca ca ca ca ca ca ca         ........
200433a0: ca ca ca ca ca ca ca ca         ........

200433a8 <floatpat>:
200433a8: ca ca ca ca ca ca ca ca         ........
200433b0: ca ca ca ca ca ca ca ca         ........
200433b8: ca ca ca ca ca ca ca ca         ........
200433c0: ca ca ca ca ca ca ca ca         ........

200433c8 <scipat>:
200433c8: ca ca ca ca ca ca ca ca         ........
200433d0: ca ca ca ca ca ca ca ca         ........
200433d8: ca ca ca ca ca ca ca ca         ........
200433e0: ca ca ca ca ca ca ca ca         ........

200433e8 <errpat>:
200433e8: ca ca ca ca ca ca ca ca         ........
200433f0: ca ca ca ca ca ca ca ca         ........
200433f8: ca ca ca ca ca ca ca ca         ........
20043400: ca ca ca ca ca ca ca ca         ........

20043408 <_rodata_end>:
		...
